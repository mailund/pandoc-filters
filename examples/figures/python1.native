Pandoc (Meta {unMeta = fromList [("autoEqnLabels",MetaBool False),("autoSectionLabels",MetaBool False),("ccsDelim",MetaInlines [Str ",",Space]),("ccsLabelSep",MetaInlines [Space,Str "\8212",Space]),("ccsTemplate",MetaInlines [Math DisplayMath "i",Math DisplayMath "ccsLabelSep",Math DisplayMath "t"]),("chapDelim",MetaInlines [Str "."]),("chapters",MetaBool False),("chaptersDepth",MetaString "1"),("codeBlockCaptions",MetaBool False),("cref",MetaBool False),("crossrefYaml",MetaString "pandoc-crossref.yaml"),("eqnLabels",MetaString "arabic"),("eqnPrefix",MetaList [MetaInlines [Str "eq."],MetaInlines [Str "eqns."]]),("eqnPrefixTemplate",MetaInlines [Math DisplayMath "p",Str "\160",Math DisplayMath "i"]),("figLabels",MetaString "arabic"),("figPrefix",MetaList [MetaInlines [Str "fig."],MetaInlines [Str "figs."]]),("figPrefixTemplate",MetaInlines [Math DisplayMath "p",Str "\160",Math DisplayMath "i"]),("figureTemplate",MetaInlines [Math DisplayMath "figureTitle",Space,Math DisplayMath "i",Math DisplayMath "titleDelim",Space,Math DisplayMath "t"]),("figureTitle",MetaInlines [Str "Figure"]),("lastDelim",MetaInlines [Str ",",Space]),("linkReferences",MetaBool False),("listingTemplate",MetaInlines [Math DisplayMath "listingTitle",Space,Math DisplayMath "i",Math DisplayMath "titleDelim",Space,Math DisplayMath "t"]),("listingTitle",MetaInlines [Str "Listing"]),("listings",MetaBool False),("lofTitle",MetaBlocks [Header 1 ("",[],[]) [Str "List",Space,Str "of",Space,Str "Figures"]]),("lolTitle",MetaBlocks [Header 1 ("",[],[]) [Str "List",Space,Str "of",Space,Str "Listings"]]),("lotTitle",MetaBlocks [Header 1 ("",[],[]) [Str "List",Space,Str "of",Space,Str "Tables"]]),("lstLabels",MetaString "arabic"),("lstPrefix",MetaList [MetaInlines [Str "lst."],MetaInlines [Str "lsts."]]),("lstPrefixTemplate",MetaInlines [Math DisplayMath "p",Str "\160",Math DisplayMath "i"]),("nameInLink",MetaBool False),("numberSections",MetaBool False),("pairDelim",MetaInlines [Str ",",Space]),("rangeDelim",MetaInlines [Str "-"]),("refDelim",MetaInlines [Str ",",Space]),("refIndexTemplate",MetaInlines [Math DisplayMath "i",Math DisplayMath "suf"]),("secLabels",MetaString "arabic"),("secPrefix",MetaList [MetaInlines [Str "sec."],MetaInlines [Str "secs."]]),("secPrefixTemplate",MetaInlines [Math DisplayMath "p",Str "\160",Math DisplayMath "i"]),("sectionsDepth",MetaString "0"),("subfigGrid",MetaBool False),("subfigLabels",MetaString "alpha a"),("subfigureChildTemplate",MetaInlines [Math DisplayMath "i"]),("subfigureRefIndexTemplate",MetaInlines [Math DisplayMath "i",Math DisplayMath "suf",Space,Str "(",Math DisplayMath "s",Str ")"]),("subfigureTemplate",MetaInlines [Math DisplayMath "figureTitle",Space,Math DisplayMath "i",Math DisplayMath "titleDelim",Space,Math DisplayMath "t",Str ".",Space,Math DisplayMath "ccs"]),("tableEqns",MetaBool False),("tableTemplate",MetaInlines [Math DisplayMath "tableTitle",Space,Math DisplayMath "i",Math DisplayMath "titleDelim",Space,Math DisplayMath "t"]),("tableTitle",MetaInlines [Str "Table"]),("tblLabels",MetaString "arabic"),("tblPrefix",MetaList [MetaInlines [Str "tbl."],MetaInlines [Str "tbls."]]),("tblPrefixTemplate",MetaInlines [Math DisplayMath "p",Str "\160",Math DisplayMath "i"]),("titleDelim",MetaInlines [Str ":"])]})
[Header 1 ("sec:divide-and-conquer",[],[]) [Str "Divide",Space,Str "and",Space,Str "conquer",Space,Str "and",Space,Str "dynamic",Space,Str "programming"]
,Para [Str "Divide",Space,Str "and",Space,Str "conquer",Space,Str "is",Space,Str "the",Space,Str "algorithmic",Space,Str "version",Space,Str "of",Space,Str "recursion.",Space,Str "The",Space,Str "term",Space,Str "comes",Space,Str "from",Space,Str "the",Space,Str "political",Space,Str "doctrine",Space,Emph [Str "divide",Space,Str "et",Space,Str "impera"],Str ",",Space,Str "but",Space,Str "for",Space,Str "algorithms,",Space,Str "a",Space,Str "more",Space,Str "correct",Space,Str "description",Space,Str "would",Space,Str "be",Space,Emph [Str "divide",Space,Str "and",Space,Str "combine"],Str ".",Space,Str "The",Space,Str "key",Space,Str "idea",Space,Str "is",Space,Str "to"]
,OrderedList (1,Decimal,Period)
 [[Plain [Str "Split",Space,Str "a",Space,Str "problem",Space,Str "into",Space,Str "subproblems",Space,Str "of",Space,Str "the",Space,Str "same",Space,Str "type."]]
 ,[Plain [Str "Recursively",Space,Str "solve",Space,Str "these",Space,Str "problems."]]
 ,[Plain [Str "Combine",Space,Str "the",Space,Str "results",Space,Str "of",Space,Str "the",Space,Str "recursive",Space,Str "calls",Space,Str "to",Space,Str "a",Space,Str "solution",Space,Str "of",Space,Str "the",Space,Str "original",Space,Str "problem."]]]
,Para [Str "Step",Space,Str "one",Space,Str "and",Space,Str "three",Space,Str "can",Space,Str "be",Space,Str "very",Space,Str "simple",Space,Str "or",Space,Str "complex,",Space,Str "while",Space,Str "step",Space,Str "two",Space,Str "is",Space,Str "usually",Space,Str "one",Space,Str "or",Space,Str "two",Space,Str "recursive",Space,Str "calls."]
,Para [Str "The",Space,Str "binary",Space,Str "search",Space,Str "algorithm",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "seen",Space,Str "several",Space,Str "times",Space,Str "by",Space,Str "now",Space,Str "is",Space,Str "an",Space,Str "example",Space,Str "of",Space,Str "a",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithm.",Space,Str "Step",Space,Str "one",Space,Str "in",Space,Str "the",Space,Str "algorithm",Space,Str "is",Space,Str "identifying",Space,Str "whether",Space,Str "we",Space,Str "should",Space,Str "search",Space,Str "to",Space,Str "the",Space,Str "left",Space,Str "or",Space,Str "to",Space,Str "the",Space,Str "right",Space,Str "of",Space,Str "the",Space,Str "midpoint,",Space,Str "the",Space,Str "recursive",Space,Str "step",Space,Str "(step",Space,Str "two)",Space,Str "is",Space,Str "searching",Space,Str "in",Space,Str "one",Space,Str "of",Space,Str "these",Space,Str "intervals.",Space,Str "Step",Space,Str "three",Space,Str "is",Space,Str "almost",Space,Str "non-existing",Space,Str "since",Space,Str "we",Space,Str "just",Space,Str "return",Space,Str "the",Space,Str "result",Space,Str "of",Space,Str "the",Space,Str "recursive",Space,Str "solution."]
,Para [Str "The",Space,Str "recursive",Space,Str "step(s)",Space,Str "in",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithms",Space,Str "are",Space,Str "often",Space,Str "implemented",Space,Str "as",Space,Str "recursive",Space,Str "function",Space,Str "calls,",Space,Str "but",Space,Str "need",Space,Str "not",Space,Str "be.",Space,Str "Conceptually,",Space,Str "we",Space,Str "recurse,",Space,Str "but",Space,Str "as",Space,Str "we",Space,Str "saw",Space,Str "in",Space,Str "binary",Space,Str "search,",Space,Str "we",Space,Str "can",Space,Str "replace",Space,Str "recursive",Space,Str "calls",Space,Str "with",Space,Str "loops.",Space,Str "It",Space,Str "is",Space,Str "not",Space,Str "necessary",Space,Str "to",Space,Str "use",Space,Str "recursion",Space,Str "in",Space,Str "your",Space,Str "implementation",Space,Str "of",Space,Str "a",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithm;",Space,Str "the",Space,Str "defining",Space,Str "component",Space,Str "of",Space,Str "this",Space,Str "class",Space,Str "of",Space,Str "algorithms",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "solve",Space,Str "a",Space,Str "subproblem",Space,Str "of",Space,Str "the",Space,Str "same",Space,Str "type",Space,Str "as",Space,Str "the",Space,Str "original",Space,Str "problem.",Space,Str "Since",Space,Str "we",Space,Str "are",Space,Str "using",Space,Str "recursion,",Space,Str "even",Space,Str "if",Space,Str "it",Space,Str "is",Space,Str "only",Space,Str "conceptually,",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "have",Space,Str "basis",Space,Str "cases",Space,Str "and",Space,Str "recursive",Space,Str "cases.",Space,Str "The",Space,Str "basis",Space,Str "case",Space,Str "in",Space,Str "binary",Space,Str "search",Space,Str "is",Space,Str "when",Space,Str "we",Space,Str "have",Space,Str "an",Space,Str "empty",Space,Str "interval",Space,Str "or",Space,Str "when",Space,Str "the",Space,Str "midpoint",Space,Str "is",Space,Str "the",Space,Str "element",Space,Str "we",Space,Str "are",Space,Str "looking",Space,Str "for.",Space,Str "The",Space,Str "recursive",Space,Str "case",Space,Str "handles",Space,Str "everything",Space,Str "else."]
,Header 3 ("merge-sort",[],[]) [Str "Merge",Space,Str "sort"]
,Para [Str "As",Space,Str "another",Space,Str "example",Space,Str "of",Space,Str "divide",Space,Str "and",Space,Str "conquer,",Space,Str "we",Space,Str "can",Space,Str "consider",Space,Str "a",Space,Str "sorting",Space,Str "algorithm",Space,Str "known",Space,Str "as",Space,Emph [Str "merge",Space,Str "sort"],Str ".",Space,Str "This",Space,Str "algorithm",Space,Str "works",Space,Str "as",Space,Str "follows:"]
,OrderedList (1,Decimal,Period)
 [[Plain [Str "Split",Space,Str "the",Space,Str "initial",Space,Str "input",Space,Str "into",Space,Str "two",Space,Str "pieces",Space,Str "of",Space,Str "half",Space,Str "the",Space,Str "size",Space,Str "of",Space,Str "the",Space,Str "original",Space,Str "problem:",Space,Str "the",Space,Str "first",Space,Str "and",Space,Str "the",Space,Str "second",Space,Str "half",Space,Str "of",Space,Str "the",Space,Str "input",Space,Str "list."]]
 ,[Plain [Str "Sort",Space,Str "these",Space,Str "two",Space,Str "smaller",Space,Str "lists",Space,Str "recursively."]]
 ,[Plain [Str "Combine",Space,Str "the",Space,Str "two",Space,Str "sorted",Space,Str "lists",Space,Str "using",Space,Str "merge."]]]
,Para [Str "The",Space,Str "algorithm",Space,Str "involves",Space,Str "two",Space,Str "recursive",Space,Str "subproblems,",Space,Str "so",Space,Str "it",Space,Str "is",Space,Str "not",Space,Str "easy",Space,Str "to",Space,Str "implement",Space,Str "it",Space,Str "as",Space,Str "an",Space,Str "iterative",Space,Str "solution.",Space,Str "We",Space,Str "will,",Space,Str "therefore,",Space,Str "deal",Space,Str "with",Space,Str "it",Space,Str "recursively.",Space,Str "The",Space,Str "basis",Space,Str "cases",Space,Str "for",Space,Str "the",Space,Str "recursion",Space,Str "are",Space,Str "when",Space,Str "we",Space,Str "have",Space,Str "empty",Space,Str "lists",Space,Str "or",Space,Str "lists",Space,Str "of",Space,Str "length",Space,Str "one\8212these",Space,Str "will",Space,Str "be",Space,Str "lists",Space,Str "that",Space,Str "are",Space,Str "already",Space,Str "sorted.",Space,Str "The",Space,Str "recursive",Space,Str "case",Space,Str "handles",Space,Str "everything",Space,Str "else."]
,Para [Str "A",Space,Str "straightforward",Space,Str "implementation",Space,Str "of",Space,Str "this",Space,Str "could",Space,Str "look",Space,Str "as",Space,Str "follows:"]
,CodeBlock ("",["python"],[]) "def merge_sort(x):\n    if len(x) <= 1: return x\n    mid = len(x) // 2\n    return merge(merge_sort(x[:mid]), merge_sort(x[mid:]))"
,Para [Str "The",Space,Str "function",Space,Str "performs",Space,Str "what",Space,Str "we",Space,Str "identified",Space,Str "as",Space,Str "the",Space,Str "three",Space,Str "steps",Space,Str "of",Space,Str "merge",Space,Str "sort",Space,Str "should",Space,Str "in",Space,Str "the",Space,Str "most",Space,Str "straightforward",Space,Str "manner,",Space,Str "but",Space,Str "you",Space,Str "might",Space,Str "be",Space,Str "uncomfortable",Space,Str "with",Space,Str "the",Space,Str "slicing",Space,Str "we",Space,Str "do",Space,Str "to",Space,Str "split",Space,Str "the",Space,Str "input",Space,Code ("",[],[]) "x",Str ".",Space,Str "For",Space,Code ("",[],[]) "merge",Str ",",Space,Str "as",Space,Str "we",Space,Str "saw",Space,Str "in",Space,Str "sec.\160",Strong [Str "\191sec:recursion-and-iteration?"],Space,Str "using",Space,Str "this",Space,Str "form",Space,Str "of",Space,Str "slicing",Space,Str "increased",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "from",Space,Math InlineMath "O(n)",Space,Str "to",Space,Math InlineMath "O(n^2)",Str ".",Space,Str "It",Space,Str "is",Space,Str "not",Space,Str "quite",Space,Str "as",Space,Str "bad",Space,Str "in",Space,Str "this",Space,Str "algorithm",Space,Str "since",Space,Str "the",Space,Str "linear",Space,Str "time",Space,Str "slice",Space,Str "operation",Space,Str "is",Space,Str "slower",Space,Str "than",Space,Str "the",Space,Str "time",Space,Str "it",Space,Str "takes",Space,Str "to",Space,Str "sort",Space,Str "the",Space,Str "sub-lists\8212we",Space,Str "discuss",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "shortly,",Space,Str "but",Space,Str "it",Space,Str "will",Space,Str "be",Space,Math InlineMath "O(n\\log n)",Str ".",Space,Str "Still,",Space,Str "we",Space,Str "could",Space,Str "avoid",Space,Str "it",Space,Str "by",Space,Str "using",Space,Str "indices",Space,Str "into",Space,Code ("",[],[]) "x",Space,Str "instead:"]
,CodeBlock ("",["python"],[]) "def merge_sort_rec(x, low, high):\n    if high - low <= 1: return x[low:high]\n    mid = (low + high) // 2\n    return merge(merge_sort_rec(x, low, mid), \n                 merge_sort_rec(x, mid, high))\n\ndef merge_sort(x):\n    return merge_sort_rec(x, 0, len(x))"
,Para [Str "I",Space,Str "have",Space,Str "implemented",Space,Str "this",Space,Str "using",Space,Str "two",Space,Str "separate",Space,Str "functions,",Space,Str "one",Space,Str "that",Space,Str "handles",Space,Str "the",Space,Str "actual",Space,Str "sorting",Space,Str "but",Space,Str "takes",Space,Str "indices",Space,Str "as",Space,Str "arguments,",Space,Str "and",Space,Str "one",Space,Str "that",Space,Str "only",Space,Str "takes",Space,Code ("",[],[]) "x",Space,Str "as",Space,Str "its",Space,Str "argument",Space,Str "and",Space,Str "calls",Space,Str "the",Space,Str "former.",Space,Str "We",Space,Str "cannot",Space,Str "set",Space,Code ("",[],[]) "low",Space,Str "and",Space,Code ("",[],[]) "high",Space,Str "as",Space,Str "default",Space,Str "arguments,",Space,Str "since",Space,Code ("",[],[]) "high",Space,Str "should",Space,Str "be",Space,Str "set",Space,Str "to",Space,Str "the",Space,Str "length",Space,Str "of",Space,Code ("",[],[]) "x",Str ",",Space,Str "and",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "know",Space,Str "what",Space,Code ("",[],[]) "x",Space,Str "is",Space,Str "until",Space,Str "we",Space,Str "call",Space,Str "the",Space,Str "function",Space,Str "(recall",Space,Str "that",Space,Str "the",Space,Str "default",Space,Str "arguments",Space,Str "of",Space,Str "a",Space,Str "function",Space,Str "must",Space,Str "be",Space,Str "known",Space,Str "when",Space,Str "we",Space,Emph [Str "define"],Space,Str "the",Space,Str "function,",Space,Str "not",Space,Str "when",Space,Str "we",Space,Str "call",Space,Str "it).",Space,Str "We",Space,Str "could",Space,Str "use",Space,Str "the",Space,Str "trick",Space,Str "of",Space,Str "setting",Space,Str "them",Space,Str "to",Space,Code ("",[],[]) "None",Space,Str "and",Space,Str "then",Space,Str "check",Space,Str "if",Space,Str "they",Space,Str "are",Space,Str "that,",Space,Str "as",Space,Str "we",Space,Str "did",Space,Code ("",[],[]) "merge",Str ",",Space,Str "but",Space,Str "then",Space,Str "we",Space,Str "would",Space,Str "need",Space,Str "to",Space,Str "check",Space,Str "the",Space,Str "arguments",Space,Str "in",Space,Str "each",Space,Str "recursive",Space,Str "call.",Space,Str "This",Space,Str "wasn\8217t",Space,Str "a",Space,Str "problem",Space,Str "when",Space,Str "we",Space,Str "translated",Space,Code ("",[],[]) "merge",Space,Str "into",Space,Str "an",Space,Str "iterative",Space,Str "algorithm,",Space,Str "but",Space,Str "we",Space,Str "cannot",Space,Str "do",Space,Str "this",Space,Str "with",Space,Code ("",[],[]) "merge_sort",Space,Str "since",Space,Str "it",Space,Str "is",Space,Str "not",Space,Str "tail",Space,Str "recursive.",Space,Str "Therefore,",Space,Str "I",Space,Str "prefer",Space,Str "to",Space,Str "split",Space,Str "the",Space,Str "algorithm",Space,Str "into",Space,Str "two",Space,Str "functions."]
,Header 3 ("quick-sort",[],[]) [Str "Quick",Space,Str "sort"]
,Para [Str "Consider",Space,Str "another",Space,Str "famous",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "sorting",Space,Str "algorithm:",Space,Emph [Str "quick",Space,Str "sort"],Str ".",Space,Str "This",Space,Str "algorithm",Space,Str "picks",Space,Str "one",Space,Str "of",Space,Str "the",Space,Str "elements",Space,Str "in",Space,Str "its",Space,Str "input,",Space,Str "called",Space,Str "the",Space,Emph [Str "pivot"],Str ",",Space,Str "and",Space,Str "then",Space,Str "it",Space,Str "splits",Space,Str "the",Space,Str "data",Space,Str "into",Space,Str "three",Space,Str "sets,",Space,Str "those",Space,Str "elements",Space,Str "that",Space,Str "are",Space,Str "less",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "those",Space,Str "that",Space,Str "are",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot,",Space,Str "and",Space,Str "those",Space,Str "elements",Space,Str "that",Space,Str "are",Space,Str "greater",Space,Str "than",Space,Str "pivot.",Space,Str "Naturally,",Space,Str "the",Space,Str "first",Space,Str "set",Space,Str "should",Space,Str "go",Space,Str "before",Space,Str "the",Space,Str "middel",Space,Str "who",Space,Str "should",Space,Str "go",Space,Str "before",Space,Str "the",Space,Str "last",Space,Str "set",Space,Str "in",Space,Str "a",Space,Str "sorted",Space,Str "sequence,",Space,Str "so",Space,Str "if",Space,Str "we",Space,Str "sort",Space,Str "the",Space,Str "first",Space,Str "set",Space,Str "separately",Space,Str "from",Space,Str "the",Space,Str "last",Space,Str "set",Space,Str "and",Space,Str "then",Space,Str "concatenate",Space,Str "all",Space,Str "three",Space,Str "of",Space,Str "them,",Space,Str "then",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "sorted",Space,Str "sequence."]
,Para [Str "The",Space,Str "description",Space,Str "is",Space,Str "longer",Space,Str "than",Space,Str "a",Space,Str "simple",Space,Str "implementation:"]
,CodeBlock ("",["python"],[]) "def qsort(xs):\n    if len(xs) < 2: return xs\n    p = pick_pivot(xs)\n\n    first = qsort_lc([x for x in xs if x < p])\n    middle = [x for x in xs if x == p]\n    last = qsort_lc([x for x in xs if x > p])\n\n    return first + middle + last"
,Para [Str "Quick",Space,Str "sort",Space,Str "is",Space,Str "called",Space,Str "quick",Space,Str "because",Space,Str "picking",Space,Str "the",Space,Str "pivot",Space,Str "and",Space,Str "partitioning",Space,Str "the",Space,Str "data",Space,Str "can",Space,Str "be",Space,Str "done,",Space,Str "well,",Space,Str "quickly.",Space,Str "The",Space,Str "list",Space,Str "comprehension",Space,Str "version",Space,Str "above",Space,Str "does",Space,Str "follow",Space,Str "the",Space,Str "spirit",Space,Str "of",Space,Str "quick",Space,Str "sort",Space,Str "but",Space,Str "creating",Space,Str "new",Space,Str "lists",Space,Str "and",Space,Str "filter",Space,Str "them",Space,Str "is",Space,Str "not",Space,Str "fast.",Space,Str "And",Space,Str "we",Space,Str "haven\8217t",Space,Str "gotten",Space,Str "to",Space,Str "how",Space,Str "to",Space,Str "pick",Space,Str "the",Space,Str "pivot.",Space,Str "For",Space,Str "the",Space,Str "latter,",Space,Str "I",Space,Str "will",Space,Str "just",Space,Str "pick",Space,Str "the",Space,Str "first",Space,Str "element",Space,Str "in",Space,Str "the",Space,Str "sequence",Space,Str "we",Space,Str "are",Space,Str "to",Space,Str "sort.",Space,Str "This",Space,Str "has",Space,Str "some",Space,Str "consequences",Space,Str "for",Space,Str "the",Space,Str "expected",Space,Str "running",Space,Str "time",Space,Str "but",Space,Str "we",Space,Str "return",Space,Str "to",Space,Str "that",Space,Str "in",Space,Str "the",Space,Str "next",Space,Str "section."]
,Para [Str "We",Space,Str "will",Space,Str "not",Space,Str "split",Space,Str "the",Space,Str "sequence",Space,Str "into",Space,Str "three",Space,Str "sets",Space,Str "but",Space,Str "two.",Space,Str "It",Space,Str "is",Space,Str "slightly",Space,Str "harder",Space,Str "to",Space,Str "split",Space,Str "it",Space,Str "into",Space,Str "those",Space,Str "less",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "those",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot,",Space,Str "and",Space,Str "those",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "compared",Space,Str "to",Space,Str "splitting",Space,Str "into",Space,Str "less",Space,Str "than",Space,Str "or",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "and",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot.",Space,Str "I",Space,Str "didn\8217t",Space,Str "do",Space,Str "this",Space,Str "above,",Space,Str "in",Space,Str "the",Space,Str "list",Space,Str "comprehension",Space,Str "function,",Space,Str "because",Space,Str "I",Space,Str "could",Space,Str "risk",Space,Str "in",Space,Str "infinite",Space,Str "recursion."]
,Para [Strong [Str "Exercise:"],Space,Str "Show",Space,Str "how",Space,Str "this",Space,Str "function",Space,Str "could",Space,Str "end",Space,Str "up",Space,Str "recursing",Space,Str "forever."]
,CodeBlock ("",["python"],[]) "def qsort(xs):\n    if len(xs) < 2: return x\n    p = pick_pivot(xs)\n    return qsort([x for x in xs if x <= p]) +\n           qsort([x for x in xs if x > p])"
,Para [Str "To",Space,Str "avoid",Space,Str "infinite",Space,Str "recursion",Space,Str "we",Space,Str "must",Space,Str "make",Space,Str "sure",Space,Str "that",Space,Str "at",Space,Str "least",Space,Str "one",Space,Str "element",Space,Str "is",Space,Str "left",Space,Str "out",Space,Str "of",Space,Str "the",Space,Str "recursion",Space,Str "in",Space,Str "each",Space,Str "step.",Space,Str "We",Space,Str "handle",Space,Str "that",Space,Str "by",Space,Str "removing",Space,Emph [Str "one"],Space,Str "element",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "instead",Space,Str "of",Space,Str "all",Space,Str "of",Space,Str "them."]
,Para [Str "We",Space,Str "will",Space,Str "use",Space,Str "a",Space,Str "function",Space,Str "that",Space,Str "satisfy",Space,Str "this",Space,Str "invariant"]
,CodeBlock ("",["python"],[]) "def partition(x, i, j):\n    \"\"\"\n    Let pivot = x[i]. This function will\n    arrange x[i:j] into x'[i:k] + x'[k:j] such that\n    x'[h] <= pivot for h = i ... k and\n    x'[k] == pivot and\n    x'[h] > pivot for h = k + 1 ... j\n    and then returns this k\n    \"\"\"\n    ..."
,Para [Str "Preferably",Space,Str "one",Space,Str "that",Space,Str "is",Space,Str "fast.",Space,Str "With",Space,Str "this",Space,Str "function,",Space,Str "quick",Space,Str "sort",Space,Str "is",Space,Str "reduced",Space,Str "to",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "def qsort_rec(x, i, j):\n    if j - i <= 1: return\n    k = partition(x, i, j)\n    qsort_rec(x, i, k)\n    qsort_rec(x, k + 1, j)\n\ndef qsort(x):\n    qsort_rec(x, 0, len(x))"
,Para [Str "After",Space,Str "partitioning,",Space,Str "an",Space,Str "element",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "is",Space,Str "at",Space,Str "index",Space,Math InlineMath "k",Str ",",Space,Str "and",Space,Str "all",Space,Str "elements",Space,Str "before",Space,Str "index",Space,Math InlineMath "k",Space,Str "should",Space,Str "go",Space,Str "before",Space,Math InlineMath "k",Space,Str "and",Space,Str "all",Space,Str "elements",Space,Str "after",Space,Str "index",Space,Math InlineMath "k",Space,Str "should",Space,Str "go",Space,Str "after",Space,Math InlineMath "k",Str ".",Space,Str "We",Space,Str "leave",Space,Str "out",Space,Str "index",Space,Math InlineMath "k",Space,Str "from",Space,Str "the",Space,Str "recursion\8212the",Space,Str "first",Space,Str "recursion",Space,Str "is",Space,Str "over",Space,Math InlineMath "x[i:k]",Space,Str "(",Math InlineMath "i",Space,Str "is",Space,Str "included;",Space,Math InlineMath "k",Space,Str "is",Space,Str "not),",Space,Str "and",Space,Str "the",Space,Str "second",Space,Str "recursion",Space,Str "is",Space,Str "over",Space,Math InlineMath "x[k+1:j]",Str ".",Space,Str "This",Space,Str "means",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "to",Space,Str "require",Space,Str "of",Space,Str "the",Space,Code ("",[],[]) "partition",Space,Str "function",Space,Str "that",Space,Code ("",[],[]) "x[k]",Space,Str "is",Space,Str "the",Space,Str "pivot",Space,Str "after",Space,Str "calling",Space,Str "the",Space,Str "function."]
,Para [Str "The",Space,Str "meat",Space,Str "of",Space,Str "the",Space,Str "algorithm",Space,Str "is",Space,Str "in",Space,Str "the",Space,Code ("",[],[]) "partition",Space,Str "function.",Space,Str "The",Space,Str "partition",Space,Str "algorithm",Space,Str "works",Space,Str "as",Space,Str "follows:",Space,Str "we",Space,Str "have",Space,Str "an",Space,Str "interval",Space,Math InlineMath "i",Space,Str "to",Space,Math InlineMath "j",Space,Str "of",Space,Str "sequence",Space,Math InlineMath "x",Str ",",Space,Math InlineMath "i",Space,Str "included",Space,Str "and",Space,Math InlineMath "j",Space,Str "not,",Space,Str "and",Space,Str "the",Space,Str "pivot",Space,Str "is",Space,Str "at",Space,Str "index",Space,Math InlineMath "i",Str ".",Space,Str "We",Space,Str "use",Space,Str "two",Space,Str "additional",Space,Str "indices,",Space,Math InlineMath "k",Space,Str "and",Space,Math InlineMath "h",Str ".",Space,Str "We",Space,Str "set",Space,Math InlineMath "k",Space,Str "to",Space,Math InlineMath "i+1",Space,Str "and",Space,Math InlineMath "h",Space,Str "to",Space,Math InlineMath "j-1",Str ".",Space,Str "That",Space,Str "is,",Space,Math InlineMath "k",Space,Str "points",Space,Str "one",Space,Str "past",Space,Str "the",Space,Str "pivot",Space,Str "and",Space,Math InlineMath "h",Space,Str "points",Space,Str "to",Space,Str "the",Space,Str "last",Space,Str "element",Space,Str "in",Space,Math InlineMath "x[i:j]",Str ",",Space,Str "see",Space,Str "fig.\160",Strong [Str "\191fig:qsort-partition-init?"],Str "."]
,Para [Image ("fig:qsort-partition-init",[],[]) [Str "Initial",Space,Str "setup",Space,Str "for",Space,Str "`partition`.",Space,Str "We",Space,Str "set",Space,Math InlineMath "k",Space,Str "to",Space,Str "point",Space,Str "one",Space,Str "after",Space,Math InlineMath "i",Space,Str "and",Space,Math InlineMath "h",Space,Str "to",Space,Str "point",Space,Str "one",Space,Str "before",Space,Math InlineMath "j",Str "."] ("Initialisation.pdf","")]
,Para [Str "We",Space,Str "will",Space,Str "have",Space,Str "the",Space,Str "invariant",Space,Str "that",Space,Str "all",Space,Str "elements",Space,Str "in",Space,Math InlineMath "x[i:k]",Space,Str "are",Space,Str "less",Space,Str "than",Space,Str "or",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "and",Space,Str "all",Space,Str "elements",Space,Str "in",Space,Math InlineMath "x[h+1,j]",Space,Str "are",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "(in",Space,Str "both",Space,Str "intervals,",Space,Str "as",Space,Str "always,",Space,Str "we",Space,Str "include",Space,Str "the",Space,Str "first",Space,Str "index",Space,Str "and",Space,Str "exclude",Space,Str "the",Space,Str "second)."]
,Para [Str "In",Space,Str "each",Space,Str "iteration",Space,Str "we",Space,Str "look",Space,Str "at",Space,Math InlineMath "x[k]",Space,Str "to",Space,Str "check",Space,Str "if",Space,Str "it",Space,Str "is",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "or",Space,Str "not.",Space,Str "If",Space,Str "it",Space,Str "is",Space,Str "less",Space,Str "than",Space,Str "or",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "we",Space,Str "can",Space,Str "increment",Space,Math InlineMath "k",Space,Str "by",Space,Str "one",Space,Str "and",Space,Str "still",Space,Str "satisfy",Space,Str "the",Space,Str "invariant,",Space,Str "fig.\160",Strong [Str "\191fig:qsort-partition-step1?"],Str ".",Space,Str "If",Space,Str "it",Space,Str "is",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "we",Space,Str "cannot",Space,Str "increment",Space,Math InlineMath "k",Space,Str "but",Space,Str "we",Space,Str "can",Space,Str "move",Space,Str "it",Space,Str "to",Space,Str "the",Space,Str "end",Space,Str "of",Space,Str "the",Space,Str "sequence",Space,Str "where",Space,Str "we",Space,Str "keep",Space,Str "those",Space,Str "elements",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot.",Space,Str "We",Space,Str "swap",Space,Str "it",Space,Str "with",Space,Math InlineMath "x[h]",Space,Str "and",Space,Str "decrement",Space,Math InlineMath "h",Space,Str "by",Space,Str "one,",Space,Str "fig.\160",Strong [Str "\191fig:qsort-parition-step2?"],Str "."]
,Para [Str "The",Space,Str "original",Space,Math InlineMath "x[h]",Space,Str "may",Space,Str "or",Space,Str "may",Space,Str "not",Space,Str "have",Space,Str "been",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot;",Space,Str "the",Space,Str "invariant",Space,Str "only",Space,Str "tells",Space,Str "us",Space,Str "that",Space,Str "elements",Space,Str "in",Space,Math InlineMath "x[h+1:j]",Space,Str "are.",Space,Str "This",Space,Str "is",Space,Str "irrelevant",Space,Str "for",Space,Str "the",Space,Str "algorithm,",Space,Str "however.",Space,Str "If",Space,Math InlineMath "x[h]",Space,Str "was",Space,Str "less",Space,Str "than",Space,Str "or",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot,",Space,Str "then",Space,Str "we",Space,Str "would",Space,Str "simply",Space,Str "increment",Space,Math InlineMath "k",Space,Str "in",Space,Str "the",Space,Str "next",Space,Str "iteration.",Space,Str "If",Space,Str "it",Space,Str "was",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "then",Space,Str "it",Space,Str "would",Space,Str "get",Space,Str "swapped",Space,Str "back",Space,Str "in",Space,Str "the",Space,Str "next",Space,Str "iteration.",Space,Str "It",Space,Str "might",Space,Str "get",Space,Str "swapped",Space,Str "twice,",Space,Str "but",Space,Str "it",Space,Str "is",Space,Str "not",Space,Str "worse",Space,Str "than",Space,Str "that.",Space,Str "If",Space,Str "swapping",Space,Str "is",Space,Str "very",Space,Str "expensive,",Space,Str "and",Space,Str "you",Space,Str "don\8217t",Space,Str "mind",Space,Str "a",Space,Str "slightly",Space,Str "more",Space,Str "complicated",Space,Str "algorithm,",Space,Str "you",Space,Str "can",Space,Str "decrease",Space,Math InlineMath "h",Space,Str "until",Space,Str "it",Space,Str "points",Space,Str "to",Space,Str "an",Space,Str "element",Space,Str "that",Space,Str "is",Space,Str "not",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "after",Space,Str "each",Space,Str "swap.",Space,Str "The",Space,Str "extra",Space,Str "loop",Space,Str "is",Space,Str "hardly",Space,Str "worth",Space,Str "it",Space,Str "for",Space,Str "avoiding",Space,Str "one",Space,Str "swap,",Space,Str "but",Space,Str "you",Space,Str "can",Space,Str "do",Space,Str "it."]
,Para [Image ("fig:qsort-partition-step1",[],[]) [Str "If",Space,Str "`x[k]`",Space,Str "is",Space,Str "less",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "we",Space,Str "can",Space,Str "increase",Space,Math InlineMath "k",Space,Str "and",Space,Str "maintain",Space,Str "the",Space,Str "invariant."] ("Step,%20less%20than%20pivot.pdf","")]
,Para [Image ("fig:qsort-parition-step2",[],[]) [Str "If",Space,Str "`x[k]`",Space,Str "is",Space,Str "greather",Space,Str "than",Space,Str "the",Space,Str "pivot",Space,Str "we",Space,Str "cannot",Space,Str "increase",Space,Math InlineMath "k",Space,Str "and",Space,Str "maintain",Space,Str "the",Space,Str "invariant",Space,Str "but",Space,Str "we",Space,Str "can",Space,Str "switch",Space,Str "`x[k]`",Space,Str "and",Space,Str "`x[h-1]`",Space,Str "and",Space,Str "then",Space,Str "decrease",Space,Math InlineMath "h",Str ".",Space,Str "This",Space,Str "will",Space,Str "maintain",Space,Str "the",Space,Str "invariant."] ("Step,%20greater%20than%20pivot.pdf","")]
,Para [Str "When",Space,Math InlineMath "h",Space,Str "has",Space,Str "moved",Space,Str "past",Space,Math InlineMath "k",Space,Str "we",Space,Str "have",Space,Str "partitioned",Space,Str "the",Space,Str "sequence",Space,Str "such",Space,Str "that",Space,Str "all",Space,Str "elements",Space,Str "in",Space,Math InlineMath "x[i:k]",Space,Str "are",Space,Str "less",Space,Str "than",Space,Str "or",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot",Space,Str "and",Space,Str "all",Space,Str "elements",Space,Str "in",Space,Math InlineMath "x[h+1,j]",Space,Str "are",Space,Str "greater",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "fig.\160",Strong [Str "\191fig:qsort-partition-finish?"],Str ".",Space,Str "The",Space,Str "index",Space,Str "we",Space,Str "want",Space,Str "the",Space,Str "function",Space,Str "to",Space,Str "return",Space,Str "is",Space,Str "the",Space,Str "last",Space,Str "element",Space,Str "in",Space,Str "the",Space,Str "part",Space,Str "that",Space,Str "is",Space,Str "less",Space,Str "than",Space,Str "the",Space,Str "pivot,",Space,Str "not",Space,Str "one",Space,Str "past",Space,Str "it,",Space,Str "so",Space,Str "we",Space,Str "will",Space,Str "return",Space,Math InlineMath "k-1",Space,Str "rather",Space,Str "than",Space,Math InlineMath "k",Str ".",Space,Str "Sorry",Space,Str "for",Space,Str "the",Space,Str "confusion.",Space,Str "For",Space,Str "reasons",Space,Str "explained",Space,Str "above,",Space,Str "we",Space,Str "need",Space,Str "the",Space,Str "element",Space,Str "at",Space,Str "that",Space,Str "position",Space,Str "to",Space,Str "be",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "pivot.",Space,Str "We",Space,Str "know",Space,Str "that",Space,Math InlineMath "x[k-1]",Space,Str "belongs",Space,Str "in",Space,Str "the",Space,Str "first",Space,Str "part,",Space,Str "and",Space,Str "it",Space,Str "could",Space,Str "be",Space,Str "anywhere",Space,Str "in",Space,Str "there",Space,Str "for",Space,Str "all",Space,Str "we",Space,Str "care.",Space,Str "The",Space,Str "pivot",Space,Str "at",Space,Math InlineMath "x[i]",Space,Str "also",Space,Str "belongs",Space,Str "in",Space,Str "the",Space,Str "first",Space,Str "part,",Space,Str "and",Space,Str "since",Space,Str "we",Space,Str "want",Space,Str "the",Space,Str "pivot",Space,Str "at",Space,Str "index",Space,Math InlineMath "k-1",Space,Str "we",Space,Str "just",Space,Str "swap",Space,Str "the",Space,Str "two.",Space,Str "Then",Space,Str "all",Space,Str "is",Space,Str "well",Space,Str "and",Space,Str "we",Space,Str "are",Space,Str "done."]
,Para [Image ("fig:qsort-partition-finish",[],[]) [Str "When",Space,Str "we",Space,Str "are",Space,Str "done",Space,Str "with",Space,Str "the",Space,Str "paritioning",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "put",Space,Str "the",Space,Str "pivot",Space,Str "at",Space,Str "the",Space,Str "last",Space,Str "position",Space,Str "of",Space,Str "the",Space,Str "first",Space,Str "part.",Space,Str "We",Space,Str "can",Space,Str "do",Space,Str "this",Space,Str "simply",Space,Str "by",Space,Str "swapping",Space,Str "the",Space,Str "first",Space,Str "and",Space,Str "the",Space,Math InlineMath "k",Str "\8217th",Space,Str "element.",Space,Str "We",Space,Str "need",Space,Str "to",Space,Str "return",Space,Str "the",Space,Str "last",Space,Str "position",Space,Str "in",Space,Str "the",Space,Str "first",Space,Str "part",Space,Str "and",Space,Str "that",Space,Str "is",Space,Math InlineMath "k-1",Str "."] ("Finishing.pdf","")]
,Para [Str "An",Space,Str "implementation",Space,Str "could",Space,Str "look",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "def partition(x, i, j):\n    pivot = x[i]\n    k, h = i + 1, j - 1\n    while k <= h:\n        if x[k] <= pivot:\n            k += 1\n        elif x[k] > pivot:\n            x[k], x[h] = x[h], x[k]\n            h -= 1\n\n    x[i], x[k - 1] = x[k - 1], x[i]\n    return k - 1"
,Para [Str "All",Space,Str "the",Space,Str "operations",Space,Str "in",Space,Code ("",[],[]) "partition",Space,Str "are",Space,Str "simple",Space,Str "comparisons",Space,Str "and",Space,Str "swaps",Space,Str "so",Space,Str "it",Space,Str "is",Space,Str "fast,",Space,Str "quick",Space,Str "one",Space,Str "might",Space,Str "say,",Space,Str "and",Space,Str "it",Space,Str "is",Space,Str "that",Space,Str "which",Space,Str "makes",Space,Str "quick",Space,Str "sort",Space,Str "a",Space,Str "preferred",Space,Str "algorithm",Space,Str "in",Space,Str "many",Space,Str "usages."]
,Para [Strong [Str "Exercise:"],Space,Str "Prove",Space,Str "that",Space,Str "the",Space,Str "partition",Space,Str "algorithm",Space,Str "is",Space,Str "correct",Space,Str "and",Space,Str "that",Space,Str "it",Space,Str "runs",Space,Str "in",Space,Str "time",Space,Math InlineMath "O(n)",Str "."]
,Para [Strong [Str "Exercise:"],Space,Str "What",Space,Str "is",Space,Str "the",Space,Str "best",Space,Str "case",Space,Str "and",Space,Str "the",Space,Str "worst",Space,Str "case",Space,Str "running",Space,Str "time",Space,Str "for",Space,Str "quick",Space,Str "sort?"]
,Para [Strong [Str "Exercise:"],Space,Str "Is",Space,Str "quick",Space,Str "sort",Space,Str "in",Space,Str "place?",Space,Str "Is",Space,Str "it",Space,Str "stable?"]
,Para [Str "If",Space,Str "the",Space,Str "data",Space,Str "is",Space,Str "almost",Space,Str "random",Space,Str "then",Space,Str "quick",Space,Str "sort",Space,Str "will",Space,Str "spend",Space,Str "linear",Space,Str "time",Space,Str "to",Space,Str "split",Space,Str "it",Space,Str "in",Space,Str "two",Space,Str "almost",Space,Str "equally",Space,Str "sized",Space,Str "parts",Space,Str "and",Space,Str "then",Space,Str "recurse,",Space,Str "giving",Space,Str "us",Space,Str "the",Space,Str "time",Space,Str "recurrence",Space,Str "equation",Space,Math InlineMath "T(n)=2\\cdot T(n/2)+O(n)",Str ",",Space,Str "which,",Space,Str "see",Space,Str "case",Space,Str "1",Space,Str "below,",Space,Str "is",Space,Math InlineMath "O(n\\log n)",Str ".",Space,Str "It",Space,Str "might",Space,Str "also",Space,Str "pick",Space,Str "the",Space,Str "largest",Space,Str "value",Space,Str "as",Space,Str "the",Space,Str "pivot",Space,Str "each",Space,Str "time",Space,Str "which",Space,Str "will",Space,Str "partition",Space,Str "the",Space,Str "data",Space,Str "into",Space,Str "two",Space,Str "parts",Space,Str "where",Space,Str "the",Space,Str "first",Space,Str "contains",Space,Str "all",Space,Str "the",Space,Str "elements.",Space,Str "We",Space,Str "take",Space,Str "care",Space,Str "always",Space,Str "to",Space,Str "remove",Space,Str "one",Space,Str "element",Space,Str "before",Space,Str "we",Space,Str "call",Space,Str "the",Space,Str "recursion,",Space,Str "but",Space,Str "we",Space,Str "could",Space,Str "recurse",Space,Str "on",Space,Math InlineMath "n-1",Space,Str "elements,",Space,Str "taking",Space,Str "us",Space,Str "to",Space,Str "case",Space,Str "3",Space,Str "instead."]
,Para [Str "A",Space,Str "common",Space,Str "case",Space,Str "for",Space,Str "data",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "sort",Space,Str "is",Space,Str "that",Space,Str "it",Space,Str "is",Space,Emph [Str "almost"],Space,Str "sorted",Space,Str "to",Space,Str "begin",Space,Str "with.",Space,Str "This",Space,Str "happens,",Space,Str "for",Space,Str "example,",Space,Str "when",Space,Str "we",Space,Str "are",Space,Str "manipulating",Space,Str "data",Space,Str "that",Space,Str "is",Space,Str "sorted",Space,Str "to",Space,Str "begin",Space,Str "with",Space,Str "but",Space,Str "only",Space,Str "slightly",Space,Str "sorted",Space,Str "after",Space,Str "our",Space,Str "fiddling",Space,Str "with",Space,Str "it."]
,Para [Str "If",Space,Str "we",Space,Str "always",Space,Str "pick",Space,Str "the",Space,Str "first",Space,Str "element",Space,Str "then",Space,Str "almost",Space,Str "sorted",Space,Str "data",Space,Str "means",Space,Str "that",Space,Str "we",Space,Str "partition",Space,Str "the",Space,Str "input",Space,Str "very",Space,Str "unevenly",Space,Str "in",Space,Str "each",Space,Str "recursion.",Space,Str "Quick",Space,Str "soft",Space,Str "will",Space,Str "run",Space,Str "in",Space,Math InlineMath "O(n^2)",Space,Str "(case",Space,Str "3)",Space,Str "instead",Space,Str "of",Space,Math InlineMath "O(n\\log n)",Space,Str "(case",Space,Str "1).",Space,Str "Insertion",Space,Str "sort,",Space,Str "on",Space,Str "the",Space,Str "other",Space,Str "hand",Space,Str "will",Space,Str "run",Space,Str "in",Space,Str "time",Space,Math InlineMath "O(n)",Space,Str "on",Space,Str "almost-sorted",Space,Str "data",Space,Str "(but",Space,Math InlineMath "O(n^2)",Space,Str "on",Space,Str "random",Space,Str "data).",Space,Str "A",Space,Str "strategy",Space,Str "for",Space,Str "a",Space,Str "better",Space,Str "sorting",Space,Str "algorithm",Space,Str "could",Space,Str "be",Space,Str "to",Space,Str "let",Space,Str "quick",Space,Str "sort",Space,Str "handle",Space,Str "the",Space,Str "data",Space,Str "while",Space,Str "it",Space,Str "is",Space,Str "far",Space,Str "from",Space,Str "sorted\8212assuming",Space,Str "that",Space,Str "it",Space,Str "is",Space,Str "random",Space,Str "to",Space,Str "begin",Space,Str "with\8212but",Space,Str "then",Space,Str "switch",Space,Str "to",Space,Str "insertion",Space,Str "sort",Space,Str "once",Space,Str "it",Space,Str "is",Space,Str "close",Space,Str "to",Space,Str "sorted.",Space,Str "Once",Space,Str "quick",Space,Str "sort",Space,Str "has",Space,Str "reached",Space,Str "some",Space,Str "minimal",Space,Str "sequence",Space,Str "length",Space,Str "it",Space,Str "can",Space,Str "stop",Space,Str "recursing.",Space,Str "If",Space,Str "all",Space,Str "the",Space,Str "recursions",Space,Str "stop",Space,Str "at",Space,Str "that",Space,Str "depth",Space,Str "then",Space,Str "the",Space,Str "sequence",Space,Str "will",Space,Str "consist",Space,Str "of",Space,Str "small",Space,Str "segments",Space,Str "of",Space,Str "randomly",Space,Str "ordered",Space,Str "data",Space,Str "but",Space,Str "each",Space,Str "segment",Space,Str "contains",Space,Str "elements",Space,Str "that",Space,Str "are",Space,Str "larger",Space,Str "than",Space,Str "the",Space,Str "previous",Space,Str "and",Space,Str "smaller",Space,Str "than",Space,Str "the",Space,Str "next.",Space,Str "So",Space,Str "the",Space,Str "entire",Space,Str "sequence",Space,Str "is",Space,Str "almost",Space,Str "sorted.",Space,Str "We",Space,Str "can",Space,Str "throw",Space,Str "insertion",Space,Str "sort",Space,Str "at",Space,Str "that",Space,Str "sequence",Space,Str "and",Space,Str "expect",Space,Str "the",Space,Math InlineMath "O(n)",Space,Str "best-case",Space,Str "performance."]
,Para [Strong [Str "Exercise:"],Space,Str "Implement",Space,Str "the",Space,Code ("",[],[]) "qsort_rec",Space,Str "function",Space,Str "below",Space,Str "to",Space,Str "get",Space,Str "the",Space,Str "hybrid",Space,Str "algorithm."]
,CodeBlock ("",["python"],[]) "def qsort_rec(x, i, j, threshold):\n    # Implement this\n\ndef qsort(x, threshold = 1):\n    qsort_rec(x, 0, len(x), threshold)\n\ndef hybrid(x, threshold):\n    qsort_rec(x, 0, len(x), threshold)\n    insertion_sort(x)"
,Para [Str "Evaluate",Space,Str "the",Space,Str "hybrid",Space,Str "algorithm",Space,Str "empirically",Space,Str "and",Space,Str "compare",Space,Str "it",Space,Str "to",Space,Str "basic",Space,Str "quick",Space,Str "sort",Space,Str "and",Space,Str "insertion",Space,Str "sort",Space,Str "algorithms.",Space,Str "Explore",Space,Str "how",Space,Str "it",Space,Str "performs",Space,Str "for",Space,Str "different",Space,Str "choices",Space,Str "of",Space,Code ("",[],[]) "threshold",Str "."]
,Para [Str "An",Space,Str "adaptive",Space,Str "threshold",Space,Str "would",Space,Str "be",Space,Str "better;",Space,Str "if",Space,Str "the",Space,Str "data",Space,Str "is",Space,Str "already",Space,Str "close",Space,Str "to",Space,Str "sorted",Space,Str "at",Space,Str "the",Space,Str "beginning",Space,Str "of",Space,Str "the",Space,Str "algorithm",Space,Str "we",Space,Str "shouldn\8217t",Space,Str "wait",Space,Str "until",Space,Str "we",Space,Str "are",Space,Str "deep",Space,Str "in",Space,Str "the",Space,Str "recursion",Space,Str "before",Space,Str "we",Space,Str "switch",Space,Str "to",Space,Str "insertion",Space,Str "sort."]
,Para [Strong [Str "Exercise:"],Space,Str "Consider",Space,Str "ways",Space,Str "to",Space,Str "determine",Space,Str "if",Space,Str "a",Space,Str "sequence",Space,Str "is",Space,Str "close",Space,Str "to",Space,Str "sorted\8212for",Space,Str "some",Space,Str "measure",Space,Str "of",Space,Quoted DoubleQuote [Str "close"],Str "\8212and",Space,Str "consider",Space,Str "how",Space,Str "you",Space,Str "would",Space,Str "use",Space,Str "it",Space,Str "to",Space,Str "adaptively",Space,Str "switch",Space,Str "to",Space,Str "insertion",Space,Str "sort."]
,Para [Str "Picking",Space,Str "the",Space,Str "first",Space,Str "element",Space,Str "for",Space,Str "the",Space,Str "pivot",Space,Str "is",Space,Str "a",Space,Str "problem",Space,Str "with",Space,Str "almost",Space,Str "sorted",Space,Str "data.",Space,Str "Picking",Space,Str "the",Space,Str "last",Space,Str "element",Space,Str "is",Space,Str "a",Space,Str "problem",Space,Str "with",Space,Str "almost",Space,Str "reversed",Space,Str "sorted",Space,Str "data.",Space,Str "Either",Space,Str "will",Space,Str "work",Space,Str "well",Space,Str "if",Space,Str "the",Space,Str "data",Space,Str "is",Space,Str "a",Space,Str "random",Space,Str "string.",Space,Str "It",Space,Str "doesn\8217t",Space,Str "matter",Space,Str "which",Space,Str "strategy",Space,Str "we",Space,Str "have",Space,Str "for",Space,Str "picking",Space,Str "a",Space,Str "pivot",Space,Str "as",Space,Str "long",Space,Str "as",Space,Str "it",Space,Str "is",Space,Str "deterministic;",Space,Str "it",Space,Str "is",Space,Str "always",Space,Str "possible",Space,Str "to",Space,Str "construct",Space,Str "data",Space,Str "that",Space,Str "gives",Space,Str "us",Space,Str "the",Space,Str "worst",Space,Str "case",Space,Str "behaviour.",Space,Str "So",Space,Str "called",Space,Emph [Str "randomised"],Space,Str "algorithms",Space,Str "adds",Space,Str "stochastic",Space,Str "choices",Space,Str "to",Space,Str "an",Space,Str "algorithm",Space,Str "in",Space,Str "order",Space,Str "to",Space,Str "ignore",Space,Str "what",Space,Str "the",Space,Str "data",Space,Str "looks",Space,Str "like",Space,Str "and",Space,Str "consider",Space,Str "the",Space,Str "runtime",Space,Str "of",Space,Str "the",Space,Str "algorithm",Space,Str "a",Space,Str "random",Space,Str "variable.",Space,Str "If",Space,Str "we",Space,Str "pick",Space,Str "a",Space,Str "random",Space,Str "element",Space,Str "for",Space,Str "our",Space,Str "pivot",Space,Str "in",Space,Str "each",Space,Str "call",Space,Str "then",Space,Str "we",Space,Str "get",Space,Str "the",Space,Str "optimal",Space,Str "average",Space,Str "case",Space,Str "performance",Space,Str "regardless",Space,Str "of",Space,Str "the",Space,Str "input."]
,Para [Str "However,",Space,Str "picking",Space,Str "random",Space,Str "numbers",Space,Str "is",Space,Emph [Str "not"],Space,Str "a",Space,Str "fast",Space,Str "operation.",Space,Str "Randomising",Space,Str "the",Space,Str "algorithm",Space,Str "this",Space,Str "way",Space,Str "would",Space,Str "defeat",Space,Str "the",Space,Str "purpose",Space,Str "of",Space,Str "having",Space,Str "quick",Space,Str "operations",Space,Str "in",Space,Str "each",Space,Str "recursive",Space,Str "call.",Space,Str "A",Space,Str "compromise",Space,Str "often",Space,Str "made",Space,Str "is",Space,Str "to",Space,Str "pick",Space,Str "the",Space,Str "pivot",Space,Str "deterministically",Space,Str "but",Space,Str "looking",Space,Str "at",Space,Str "more",Space,Str "than",Space,Str "one",Space,Str "element",Space,Str "in",Space,Str "the",Space,Str "input",Space,Str "sequence",Space,Str "before",Space,Str "making",Space,Str "the",Space,Str "choice.",Space,Str "If",Space,Str "we",Space,Str "look",Space,Str "at",Space,Str "three,",Space,Str "say,",Space,Str "and",Space,Str "pick",Space,Str "the",Space,Str "median",Space,Str "of",Space,Str "these",Space,Str "we",Space,Str "are",Space,Str "less",Space,Str "likely",Space,Str "to",Space,Str "get",Space,Str "an",Space,Str "uneven",Space,Str "partition."]
,Para [Str "Another",Space,Str "worst",Space,Str "case",Space,Str "situation",Space,Str "is",Space,Str "if",Space,Str "there",Space,Str "are",Space,Str "many",Space,Str "equal",Space,Str "elements.",Space,Str "Then",Space,Str "it",Space,Str "doesn\8217t",Space,Str "help",Space,Str "us",Space,Str "to",Space,Str "pick",Space,Str "a",Space,Str "random",Space,Str "pivot.",Space,Str "If",Space,Str "we",Space,Str "can",Space,Str "split",Space,Str "the",Space,Str "sequence",Space,Str "into",Space,Str "three",Space,Str "parts,",Space,Str "as",Space,Str "the",Space,Str "list",Space,Str "comprehension",Space,Str "version",Space,Str "we",Space,Str "saw",Space,Str "when",Space,Str "we",Space,Str "introduced",Space,Str "quick",Space,Str "sort,",Space,Str "then",Space,Str "having",Space,Str "a",Space,Str "sequence",Space,Str "with",Space,Str "only",Space,Str "one",Space,Str "value",Space,Str "becomes",Space,Str "a",Space,Str "best",Space,Str "case",Space,Str "instead",Space,Str "of",Space,Str "worst",Space,Str "case.",Space,Str "When",Space,Str "we",Space,Str "partition",Space,Str "we",Space,Str "end",Space,Str "up",Space,Str "with",Space,Str "one",Space,Str "long",Space,Str "middle",Space,Str "part",Space,Str "that",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "need",Space,Str "to",Space,Str "sort.",Space,Str "It",Space,Str "is",Space,Str "possible",Space,Str "to",Space,Str "modify",Space,Code ("",[],[]) "partition",Space,Str "to",Space,Str "do",Space,Str "this",Space,Str "and",Space,Str "still",Space,Str "be",Space,Str "very",Space,Str "efficient."]
,Header 2 ("divide-and-conquer-running-times",[],[]) [Str "Divide",Space,Str "and",Space,Str "conquer",Space,Str "running",Space,Str "times"]
,Para [Str "Figuring",Space,Str "out",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "for",Space,Str "recursive",Space,Str "functions\8212or",Space,Str "algorithms",Space,Str "that",Space,Str "are",Space,Str "recursive",Space,Str "even",Space,Str "if",Space,Str "they",Space,Str "are",Space,Str "not",Space,Str "implemented",Space,Str "as",Space,Str "recursive",Space,Str "functions\8212means",Space,Str "solving",Space,Str "recurrence",Space,Str "equations.",Space,Str "If",Space,Math InlineMath "T(n)",Space,Str "denotes",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "on",Space,Str "an",Space,Str "input",Space,Str "of",Space,Str "size",Space,Math InlineMath "n",Str ",",Space,Str "then",Space,Str "a",Space,Str "recurrence",Space,Str "equation",Space,Str "could",Space,Str "look",Space,Str "like",Space,Str "this:"]
,Para [Math DisplayMath "T(n) = 2\\cdot T(n/2) + O(n)"]
,Para [Str "This",Space,Str "is",Space,Str "the",Space,Str "recurrence",Space,Str "equation",Space,Str "for",Space,Str "merge",Space,Str "sort",Space,Str "and",Space,Str "working",Space,Str "it",Space,Str "out",Space,Str "will",Space,Str "tell",Space,Str "us",Space,Str "what",Space,Str "its",Space,Str "worst",Space,Str "case",Space,Str "time",Space,Str "complexity",Space,Str "is.",Space,Str "To",Space,Str "sort",Space,Str "a",Space,Str "list",Space,Str "of",Space,Str "length",Space,Math InlineMath "n",Space,Str "we",Space,Str "solve",Space,Str "two",Space,Str "problems",Space,Str "of",Space,Str "half",Space,Str "the",Space,Str "size,",Space,Math InlineMath "2T(n/2)",Str ",",Space,Str "and",Space,Str "do",Space,Str "some",Space,Str "additional",Space,Str "work",Space,Str "in",Space,Str "time",Space,Math InlineMath "O(n)",Str ".",Space,Str "In",Space,Str "the",Space,Str "first",Space,Str "version",Space,Str "of",Space,Str "merge",Space,Str "sort,",Space,Str "where",Space,Str "we",Space,Str "sliced",Space,Str "the",Space,Str "input,",Space,Str "we",Space,Str "used",Space,Str "linear",Space,Str "time",Space,Str "both",Space,Str "for",Space,Str "the",Space,Str "slicing",Space,Str "and",Space,Str "then",Space,Str "for",Space,Str "the",Space,Str "merge;",Space,Str "in",Space,Str "the",Space,Str "final",Space,Str "version,",Space,Str "we",Space,Str "only",Space,Str "spend",Space,Str "linear",Space,Str "time",Space,Str "doing",Space,Str "the",Space,Str "merge.",Space,Str "In",Space,Str "either",Space,Str "case,",Space,Str "we",Space,Str "spend",Space,Str "linear",Space,Str "time",Space,Str "in",Space,Str "addition",Space,Str "to",Space,Str "the",Space,Str "recursive",Space,Str "calls."]
,Para [Str "What",Space,Str "characterises",Space,Str "recurrence",Space,Str "equations",Space,Str "is",Space,Str "similar",Space,Str "to",Space,Str "what",Space,Str "defines",Space,Str "recursive",Space,Str "solutions",Space,Str "to",Space,Str "problems.",Space,Str "The",Space,Str "equations",Space,Str "refer",Space,Str "to",Space,Str "themselves.",Space,Str "Strictly",Space,Str "speaking,",Space,Str "we",Space,Str "need",Space,Str "basis",Space,Str "cases",Space,Str "for",Space,Str "the",Space,Str "recurrence",Space,Str "equations",Space,Str "to",Space,Str "be",Space,Str "well",Space,Str "defined",Space,Str "so",Space,Str "we",Space,Str "would",Space,Str "have"]
,Para [Math DisplayMath "T(n) = \\begin{cases}\n O(1) & n \\leq 1 \\\\\n 2\\cdot T(n/2) + O(n) & \\text{otherwise}\n\\end{cases}"]
,Para [Str "but",Space,Str "when",Space,Str "we",Space,Str "consider",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "of",Space,Str "an",Space,Str "algorithm,",Space,Str "the",Space,Str "basis",Space,Str "cases",Space,Str "almost",Space,Str "always",Space,Str "involve",Space,Str "constant",Space,Str "time,",Space,Str "so",Space,Str "we",Space,Str "often",Space,Str "leave",Space,Str "that",Space,Str "out."]
,Para [Str "You",Space,Str "can",Space,Str "solve",Space,Str "such",Space,Str "recurrence",Space,Str "equations",Space,Str "by",Space,Str "expanding",Space,Str "them:"]
,Para [RawInline (Format "tex") "\\begin{align*}\n    T(n) &= O(n) + 2\\cdot T(n/2) \\\\\n       &= O(n) + 2\\left[\n            O(n/2) + 2\\cdot T(n/4)\n       \\right] \\\\\n       &= O(n) + 2\\left[\n            O(n/2) + 2\\cdot \\left[\n                O(n/4) + T(n/8)\n            \\right]\n       \\right] \\\\\n       &= \\ldots\n\\end{align*}"]
,Para [Str "You",Space,Str "have",Space,Str "to",Space,Str "be",Space,Str "a",Space,Str "little",Space,Str "careful",Space,Str "with",Space,Str "the",Space,Str "expansion",Space,Str "and",Space,Str "big-Oh",Space,Str "notation,",Space,Str "here.",Space,Str "We",Space,Str "see",Space,Str "that",Space,Str "we",Space,Str "get",Space,Str "an",Space,Math InlineMath "O(n/2)",Space,Str "in",Space,Str "the",Space,Str "first",Space,Str "expansion,",Space,Str "and",Space,Str "normally",Space,Str "we",Space,Str "would",Space,Str "consider",Space,Str "this",Space,Str "equal",Space,Str "to",Space,Math InlineMath "O(n)",Str ".",Space,Str "It",Space,Str "is,",Space,Str "but",Space,Str "as",Space,Str "we",Space,Str "keep",Space,Str "expanding,",Space,Str "we",Space,Str "see",Space,Str "the",Space,Str "series",Space,Math InlineMath "O(n)+O(n/2)+O(n/4)+\\cdot+O(n/n)",Str ".",Space,Str "If",Space,Str "we",Space,Str "pretend",Space,Str "that",Space,Str "all",Space,Str "the",Space,Math InlineMath "O(n/2^k)",Space,Str "components",Space,Str "are",Space,Math InlineMath "O(n)",Space,Str "this",Space,Str "would",Space,Str "give",Space,Str "us",Space,Math InlineMath "n\\times O(n)=O(n^2)",Str ".",Space,Str "This",Space,Emph [Str "is"],Space,Str "an",Space,Str "upper",Space,Str "bound",Space,Str "on",Space,Str "the",Space,Str "expression,",Space,Str "but",Space,Str "it",Space,Str "is",Space,Str "not",Space,Str "really",Space,Str "tight.",Space,Str "If",Space,Str "you",Space,Str "multiply",Space,Str "into",Space,Str "the",Space,Str "parentheses",Space,Str "in",Space,Str "the",Space,Str "equation,",Space,Str "you",Space,Str "will",Space,Str "also",Space,Str "get"]
,Para [Math DisplayMath "2\\left[O(n/2) + 2\\cdot T(n/4)\\right] = 2 O(n/2) + 4 T(n/4) = O(n) + 4 T(n/4)"]
,Para [Str "which",Space,Str "is",Space,Str "actually",Space,Str "okay,",Space,Str "but",Space,Str "if",Space,Str "you",Space,Str "translated",Space,Math InlineMath "O(n/2)",Space,Str "into",Space,Math InlineMath "O(n)",Str ",",Space,Str "you",Space,Str "would",Space,Str "get"]
,Para [Math DisplayMath "T(n) = 2O(n) + 4O(n) + 8O(n) + 16\\cdot T(n/8)"]
,Para [Str "where",Space,Str "each",Space,Str "of",Space,Str "the",Space,Math InlineMath "O(n)",Space,Str "components",Space,Str "are",Space,Str "multiplied",Space,Str "by",Space,Str "a",Space,Str "number",Space,Math InlineMath "2^k",Str ".",Space,Str "You",Space,Str "can",Space,Str "consider",Space,Str "that",Space,Str "a",Space,Str "constant",Space,Str "in",Space,Str "each",Space,Str "step,",Space,Str "but",Space,Math InlineMath "k",Space,Str "depends",Space,Str "on",Space,Math InlineMath "n",Str ",",Space,Str "so",Space,Str "it",Space,Str "isn\8217t",Space,Str "really",Space,Str "a",Space,Str "constant.",Space,Str "Neither",Space,Str "is",Space,Str "the",Space,Str "number",Space,Str "we",Space,Str "divide",Space,Math InlineMath "n",Space,Str "by",Space,Str "inside",Space,Str "the",Space,Str "big-Oh."]
,Para [Str "The",Space,Str "problem",Space,Str "here",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "blindly",Space,Str "translate",Space,Str "the",Space,Str "expanded",Space,Str "numbers",Space,Math InlineMath "2 O(n/2)",Space,Str "into",Space,Math InlineMath "O(n)",Space,Str "are",Space,Str "do",Space,Str "not",Space,Str "take",Space,Str "into",Space,Str "account",Space,Str "that,",Space,Str "as",Space,Str "we",Space,Str "continue",Space,Str "the",Space,Str "expansion,",Space,Str "the",Space,Str "number",Space,Str "we",Space,Str "multiply",Space,Str "with",Space,Str "and",Space,Str "the",Space,Str "number",Space,Str "we",Space,Str "divide",Space,Str "by,",Space,Str "changes",Space,Str "for",Space,Str "each",Space,Str "expansion.",Space,Str "They",Space,Str "depend",Space,Str "on",Space,Math InlineMath "n",Space,Str "in",Space,Str "how",Space,Str "many",Space,Str "times",Space,Str "we",Space,Str "do",Space,Str "this",Space,Str "and",Space,Str "what",Space,Str "the",Space,Str "numbers",Space,Str "are",Space,Str "in",Space,Str "each",Space,Str "step.",Space,Str "They",Space,Str "are",Space,Str "not",Space,Str "constants.",Space,Str "The",Space,Str "arithmetic",Space,Str "rules",Space,Str "we",Space,Str "have",Space,Str "learned",Space,Str "for",Space,Str "the",Space,Str "big-Oh",Space,Str "notation",Space,Str "are",Space,Str "correct;",Space,Str "the",Space,Str "problem",Space,Str "is",Space,Str "not",Space,Str "that.",Space,Str "The",Space,Str "problem",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "consider",Space,Str "the",Space,Str "numbers",Space,Str "in",Space,Str "the",Space,Str "expansion",Space,Str "as",Space,Str "constants",Space,Str "when",Space,Str "they",Space,Str "are",Space,Str "not.",Space,Str "This",Space,Str "is",Space,Str "usually",Space,Str "not",Space,Str "a",Space,Str "trap",Space,Str "you",Space,Str "will",Space,Str "fall",Space,Str "into",Space,Str "when",Space,Str "reasoning",Space,Str "about",Space,Str "iterative",Space,Str "algorithms",Space,Str "as",Space,Str "we",Space,Str "have",Space,Str "done",Space,Str "earlier,",Space,Str "but",Space,Str "it",Space,Str "is",Space,Str "easy",Space,Str "to",Space,Str "fall",Space,Str "into",Space,Str "here."]
,Para [Str "When",Space,Str "expanding",Space,Str "a",Space,Str "recurrence",Space,Str "equation,",Space,Str "it",Space,Str "is",Space,Str "easier",Space,Str "to",Space,Str "translate",Space,Math InlineMath "O(n)",Space,Str "into",Space,Math InlineMath "cn",Space,Str "for",Space,Str "some",Space,Str "constant",Space,Math InlineMath "c",Str ".",Space,Str "We",Space,Str "know",Space,Str "such",Space,Str "a",Space,Str "constant",Space,Str "exists",Space,Str "such",Space,Str "that",Space,Math InlineMath "cn",Space,Str "is",Space,Str "an",Space,Str "upper",Space,Str "bound",Space,Str "for",Space,Str "whatever",Space,Str "the",Space,Math InlineMath "O(n)",Space,Str "is",Space,Str "capturing.",Space,Str "Then",Space,Str "we",Space,Str "get",Space,Str "an",Space,Str "expansion",Space,Str "like",Space,Str "this:"]
,Para [RawInline (Format "tex") "\\begin{align*}\n    T(n) &= cn + 2\\cdot T(n/2) \\\\\n       &= cn + 2\\left[\n           cn/2 + 2\\cdot T(n/4)\n       \\right] \\\\\n       &= cn + 2\\left[\n           cn/2 + 2\\left[cn/4) + 2\\cdot T(n/8)\n           \\right]\n       \\right]\\\\\n       &= \\ldots\n\\end{align*}"]
,Para [Str "If",Space,Str "we",Space,Str "take",Space,Str "this",Space,Str "expansion",Space,Str "all",Space,Str "the",Space,Str "way",Space,Str "down,",Space,Str "we",Space,Str "get"]
,Para [Math DisplayMath "T(n)=\\sum_{k=0}^{\\log n} c\\cdot 2^k n / 2^k =\\sum_{k=0}^{\\log n} c\\cdot n = c\\cdot n\\log n"]
,Para [Str "where",Space,Math InlineMath "\\log n",Space,Str "is",Space,Str "the",Space,Str "base-two",Space,Str "logarithm,",Space,Str "and",Space,Str "we",Space,Str "get",Space,Str "that",Space,Str "limit",Space,Str "because",Space,Math InlineMath "2^{\\log n}=n",Space,Str "is",Space,Str "when",Space,Str "we",Space,Str "reach",Space,Math InlineMath "n/n=1",Str ".",Space,Str "This",Space,Str "means",Space,Str "that",Space,Str "this",Space,Str "recurrence",Space,Str "is",Space,Str "in",Space,Math InlineMath "O(n\\log n)",Str ",",Space,Str "so",Space,Str "this",Space,Str "is",Space,Str "the",Space,Str "big-Oh",Space,Str "running",Space,Str "time",Space,Str "for",Space,Str "merge",Space,Str "sort."]
,Para [Str "We",Space,Str "can",Space,Str "conclude",Space,Str "that",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "for",Space,Str "merge",Space,Str "sort",Space,Str "is",Space,Math InlineMath "O(n\\log n)",Str "."]
,Para [Str "What",Space,Str "about",Space,Str "quick",Space,Str "sort?",Space,Str "In",Space,Str "the",Space,Str "worst",Space,Str "case",Space,Str "the",Space,Str "recursive",Space,Str "calls",Space,Str "will",Space,Str "go",Space,Math InlineMath "n",Space,Str "deep;",Space,Str "in",Space,Str "each",Space,Str "recursion",Space,Str "it",Space,Str "can",Space,Str "partition",Space,Str "the",Space,Str "sequence",Space,Str "into",Space,Str "one",Space,Str "and",Space,Str "the",Space,Str "rest",Space,Str "and",Space,Str "thus",Space,Str "recurse",Space,Str "on",Space,Math InlineMath "n-1",Space,Str "elements.",Space,Str "The",Space,Str "partitioning",Space,Str "is",Space,Str "fast",Space,Str "compared",Space,Str "to",Space,Str "merging",Space,Str "but",Space,Str "the",Space,Str "asymptotic",Space,Str "worst-case",Space,Str "performance",Space,Str "suffers",Space,Str "from",Space,Str "it.",Space,Str "To",Space,Str "get",Space,Str "the",Space,Str "same",Space,Str "complexity",Space,Str "as",Space,Str "merge",Space,Str "sort",Space,Str "we",Space,Str "must",Space,Str "have",Space,Str "the",Space,Str "recurrence",Space,Math InlineMath "T(n)=2T(n/2)+O(n)",Str ".",Space,Str "This",Space,Str "happens",Space,Str "when",Space,Str "the",Space,Str "partitioning",Space,Str "gives",Space,Str "us",Space,Str "two",Space,Str "parts",Space,Str "that",Space,Str "are",Space,Str "roughly",Space,Str "the",Space,Str "same",Space,Str "size.",Space,Str "In",Space,Str "the",Space,Str "worst",Space,Str "case,",Space,Str "however,",Space,Str "one",Space,Str "has",Space,Str "size",Space,Math InlineMath "n",Space,Str "and",Space,Str "the",Space,Str "other",Space,Str "is",Space,Str "empty.",Space,Str "We",Space,Str "make",Space,Str "sure",Space,Str "to",Space,Str "always",Space,Str "reduce",Space,Str "the",Space,Str "sequence",Space,Str "length",Space,Str "by",Space,Str "one",Space,Str "by",Space,Str "not",Space,Str "including",Space,Str "the",Space,Str "pivot",Space,Str "at",Space,Str "index",Space,Math InlineMath "k",Space,Str "but",Space,Str "we",Space,Str "still",Space,Str "might",Space,Str "end",Space,Str "up",Space,Str "by",Space,Str "a",Space,Str "recursive",Space,Str "call",Space,Str "on",Space,Str "a",Space,Str "sequence",Space,Str "of",Space,Str "length",Space,Math InlineMath "n-1",Str ".",Space,Str "In",Space,Str "that",Space,Str "case",Space,Str "the",Space,Str "depth",Space,Str "of",Space,Str "the",Space,Str "call",Space,Str "stack",Space,Str "is",Space,Str "linear",Space,Str "and",Space,Str "since",Space,Str "we",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "at",Space,Str "each",Space,Str "level",Space,Str "we",Space,Str "end",Space,Str "up",Space,Str "with",Space,Str "a",Space,Math InlineMath "O(n^2)",Space,Str "time",Space,Str "algorithm",Space,Str "(see",Space,Str "case",Space,Str "3",Space,Str "below)."]
,Para [Str "If",Space,Str "the",Space,Str "sequence",Space,Str "is",Space,Str "random",Space,Str "then",Space,Str "each",Space,Str "element",Space,Str "is",Space,Str "expected",Space,Str "to",Space,Str "be",Space,Str "roughly",Space,Str "in",Space,Str "the",Space,Str "middle",Space,Str "of",Space,Str "the",Space,Str "numbers",Space,Str "and",Space,Str "then",Space,Str "we",Space,Str "expect",Space,Str "that",Space,Str "the",Space,Str "partition",Space,Str "will",Space,Str "give",Space,Str "us",Space,Str "two",Space,Str "equally",Space,Str "sized",Space,Str "parts.",Space,Str "So",Space,Str "the",Space,Emph [Str "average"],Space,Str "case",Space,Str "running",Space,Str "time",Space,Str "is",Space,Math InlineMath "O(n\\log n)",Str "\8212and",Space,Str "it",Space,Str "is",Space,Str "fast",Space,Str "when",Space,Str "that",Space,Str "happens.",Space,Str "We",Space,Str "cannot",Space,Str "assume",Space,Str "that",Space,Str "we",Space,Str "hit",Space,Str "the",Space,Str "average",Space,Str "case,",Space,Str "though,",Space,Str "and",Space,Str "with",Space,Str "almost",Space,Str "sorted",Space,Str "data",Space,Str "picking",Space,Str "the",Space,Str "first",Space,Str "element",Space,Str "as",Space,Str "the",Space,Str "pivot",Space,Str "is",Space,Str "a",Space,Str "particularly",Space,Str "bad",Space,Str "idea.",Space,Str "There",Space,Str "we",Space,Str "will",Space,Str "get",Space,Str "the",Space,Math InlineMath "O(n^2)",Space,Str "running",Space,Str "time.",Space,Str "A",Space,Str "hybrid",Space,Str "algorithm,",Space,Str "as",Space,Str "in",Space,Str "the",Space,Str "earlier",Space,Str "exercise,",Space,Str "can",Space,Str "give",Space,Str "us",Space,Str "the",Space,Str "best",Space,Str "of",Space,Str "both",Space,Str "worlds."]
,Header 3 ("frequently-occurring-recurrences-and-their-running-times",[],[]) [Str "Frequently",Space,Str "occurring",Space,Str "recurrences",Space,Str "and",Space,Str "their",Space,Str "running",Space,Str "times"]
,Para [Str "There",Space,Str "are",Space,Str "common",Space,Str "cases",Space,Str "of",Space,Str "recurrence",Space,Str "equations",Space,Str "that",Space,Str "almost",Space,Str "all",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithms",Space,Str "match.",Space,Str "If",Space,Str "you",Space,Str "memorise",Space,Str "these",Space,Str "you",Space,Str "will",Space,Str "know",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "of",Space,Str "most",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithms",Space,Str "you",Space,Str "run",Space,Str "into.",Space,Str "If",Space,Str "that",Space,Str "fails",Space,Str "you",Space,Str "have",Space,Str "to",Space,Str "get",Space,Str "to",Space,Str "work",Space,Str "and",Space,Str "derive",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "yourself.",Space,Str "This",Space,Str "usually",Space,Str "involve",Space,Str "expanding",Space,Str "the",Space,Str "recurrence",Space,Str "until",Space,Str "you",Space,Str "have",Space,Str "a",Space,Str "series",Space,Str "you",Space,Str "recognise,",Space,Str "but",Space,Str "quite",Space,Str "often",Space,Str "I",Space,Str "find",Space,Str "that",Space,Str "a",Space,Str "wisely",Space,Str "chosen",Space,Str "drawing",Space,Str "works",Space,Str "as",Space,Str "well",Space,Str "as",Space,Str "arithmetic.",Space,Str "See",Space,Str "below",Space,Str "for",Space,Str "examples."]
,Header 4 ("case-1",[],[]) [Str "Case",Space,Str "1:"]
,Para [Math DisplayMath "T(n) = 2\\cdot T(n/2) + O(n) \\in O(n\\log n)"]
,Para [Str "Merge",Space,Str "sort",Space,Str "and",Space,Str "quick",Space,Str "sort",Space,Str "are",Space,Str "examples",Space,Str "of",Space,Str "this",Space,Str "recurrence.",Space,Str "Whenever",Space,Str "you",Space,Str "can",Space,Str "break",Space,Str "a",Space,Str "problem",Space,Str "into",Space,Str "two",Space,Str "subproblems",Space,Str "of",Space,Str "half",Space,Str "the",Space,Str "length",Space,Str "as",Space,Str "the",Space,Str "original,",Space,Str "and",Space,Str "you",Space,Str "do",Space,Str "not",Space,Str "spend",Space,Str "more",Space,Str "than",Space,Str "linear",Space,Str "time",Space,Str "splitting",Space,Str "or",Space,Str "combining,",Space,Str "you",Space,Str "get",Space,Str "a",Space,Math InlineMath "O(n\\log n)",Space,Str "algorithm.",Space,Str "Merge",Space,Str "sort",Space,Str "can",Space,Str "be",Space,Str "shown",Space,Str "to",Space,Str "be",Space,Str "optimal",Space,Str "(in",Space,Str "the",Space,Str "sense",Space,Str "of",Space,Str "big-Oh)",Space,Str "because",Space,Str "all",Space,Str "comparison-based",Space,Str "sorting",Space,Str "algorithms",Space,Str "need",Space,Str "to",Space,Str "do",Space,Math InlineMath "\\Omega(n\\log n)",Space,Str "comparisons.",Space,Str "Quick",Space,Str "sort",Space,Str "is",Space,Str "only",Space,Str "expected",Space,Math InlineMath "O(n\\log n)",Space,Str "time."]
,Para [Str "When",Space,Str "we",Space,Str "deriving",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "from",Space,Str "the",Space,Str "recurrence",Space,Str "equation",Space,Str "we",Space,Str "did",Space,Str "a",Space,Str "bit",Space,Str "of",Space,Str "arithmetic.",Space,Str "Usually,",Space,Str "you",Space,Str "can",Space,Str "solve",Space,Str "recurrence",Space,Str "equations",Space,Str "just",Space,Str "by",Space,Str "expanding",Space,Str "them",Space,Str "and",Space,Str "recognising",Space,Str "the",Space,Str "form",Space,Str "of",Space,Str "the",Space,Str "sum",Space,Str "you",Space,Str "get",Space,Str "back",Space,Str "from",Space,Str "it.",Space,Str "This",Space,Str "often",Space,Str "takes",Space,Str "the",Space,Str "form",Space,Str "of",Space,Str "a",Space,Str "series,",Space,Str "and",Space,Str "if",Space,Str "you",Space,Str "know",Space,Str "what",Space,Str "it",Space,Str "converges",Space,Str "to,",Space,Str "you",Space,Str "are",Space,Str "done.",Space,Str "Doing",Space,Str "it",Space,Str "this",Space,Str "way",Space,Str "doesn\8217t",Space,Str "give",Space,Str "you",Space,Str "much",Space,Str "intuition",Space,Str "about",Space,Str "why",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "is",Space,Str "at",Space,Str "it",Space,Str "is,",Space,Str "though,",Space,Str "but",Space,Str "a",Space,Str "drawing",Space,Str "of",Space,Str "how",Space,Str "it",Space,Str "works",Space,Str "can."]
,Para [Str "Consider",Space,Str "the",Space,Math InlineMath "T(n)=2T(n/2)+O(n)",Space,Str "recurrence",Space,Str "and",Space,Str "fig.\160",Strong [Str "\191fig:case1?"],Str ".",Space,Str "What",Space,Str "the",Space,Str "figure",Space,Str "shows",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "first,",Space,Str "shown",Space,Str "as",Space,Str "the",Space,Str "grey",Space,Str "bar.",Space,Str "Then",Space,Str "we",Space,Str "recurse",Space,Str "on",Space,Str "two",Space,Str "halves",Space,Str "and",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "there",Space,Str "as",Space,Str "well,",Space,Str "but",Space,Str "on",Space,Str "half",Space,Str "the",Space,Str "size.",Space,Str "In",Space,Str "total,",Space,Str "though,",Space,Str "it",Space,Str "is",Space,Str "linear",Space,Str "work;",Space,Str "it",Space,Str "is",Space,Str "just",Space,Str "split",Space,Str "in",Space,Str "two",Space,Str "different",Space,Str "calls.",Space,Str "At",Space,Str "the",Space,Str "next",Space,Str "time",Space,Str "we",Space,Str "also",Space,Str "do",Space,Str "linear",Space,Str "work,",Space,Str "but",Space,Str "now",Space,Str "in",Space,Str "four",Space,Str "different",Space,Str "calls.",Space,Str "We",Space,Str "continue",Space,Str "like",Space,Str "this",Space,Str "until",Space,Str "we",Space,Str "hit",Space,Str "base",Space,Str "cases",Space,Str "where",Space,Str "to",Space,Str "total",Space,Str "work",Space,Str "is",Space,Str "linear",Space,Str "again.",Space,Str "The",Space,Str "depth",Space,Str "of",Space,Str "the",Space,Str "recursion,",Space,Str "since",Space,Str "we",Space,Str "split",Space,Str "the",Space,Str "size",Space,Str "of",Space,Str "the",Space,Str "data",Space,Str "the",Space,Str "recursive",Space,Str "functions",Space,Str "work",Space,Str "on",Space,Str "is",Space,Math InlineMath "O(\\log n)",Space,Str "so",Space,Str "summing",Space,Str "it",Space,Str "all",Space,Str "up",Space,Str "gives",Space,Str "us",Space,Math InlineMath "O(n\\log n)",Str ".",Space,Str "The",Space,Str "drawing",Space,Str "tells",Space,Str "us",Space,Str "exactly",Space,Str "the",Space,Str "same",Space,Str "as",Space,Str "the",Space,Str "arithmetic\8212which",Space,Str "is",Space,Str "reassuring\8212but",Space,Str "I",Space,Str "think",Space,Str "the",Space,Str "drawing",Space,Str "is",Space,Str "easier",Space,Str "to",Space,Str "follow",Space,Str "and",Space,Str "gives",Space,Str "more",Space,Str "intuition",Space,Str "about",Space,Str "why",Space,Str "the",Space,Str "recurrence",Space,Str "gives",Space,Str "us",Space,Str "the",Space,Str "time",Space,Str "we",Space,Str "got."]
,Para [Image ("fig:case1",[],[]) [Str "Work",Space,Str "when",Space,Str "we",Space,Str "recurse",Space,Str "on",Space,Str "twice",Space,Str "the",Space,Str "half",Space,Str "size",Space,Str "and",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "at",Space,Str "each",Space,Str "step."] ("case%201.pdf","")]
,Header 4 ("case-2",[],[]) [Str "Case",Space,Str "2:"]
,Para [Math DisplayMath "T(n) = T(n-1) + O(1) \\in O(n)"]
,Para [Str "If",Space,Str "we,",Space,Str "in",Space,Str "constant",Space,Str "time,",Space,Str "remove",Space,Str "one",Space,Str "from",Space,Str "the",Space,Str "problem",Space,Str "size",Space,Str "we",Space,Str "have",Space,Str "an",Space,Str "algorithm",Space,Str "that",Space,Str "runs",Space,Str "in",Space,Str "linear",Space,Str "time.",Space,Str "If",Space,Str "we",Space,Str "consider",Space,Str "linear",Space,Str "search",Space,Str "a",Space,Str "recursive",Space,Str "problem\8212the",Space,Str "basis",Space,Str "case",Space,Str "is",Space,Str "when",Space,Str "we",Space,Str "find",Space,Str "the",Space,Str "element,",Space,Str "or",Space,Str "we",Space,Str "are",Space,Str "at",Space,Str "the",Space,Str "end",Space,Str "of",Space,Str "the",Space,Str "list,",Space,Str "and",Space,Str "the",Space,Str "recursive",Space,Str "case",Space,Str "is",Space,Str "doing",Space,Str "a",Space,Str "linear",Space,Str "search",Space,Str "on",Space,Str "the",Space,Str "rest",Space,Str "of",Space,Str "the",Space,Str "input\8212then",Space,Str "that",Space,Str "would",Space,Str "be",Space,Str "an",Space,Str "example",Space,Str "of",Space,Str "such",Space,Str "an",Space,Str "algorithm."]
,Para [Str "You",Space,Str "can",Space,Str "see",Space,Str "a",Space,Str "drawing",Space,Str "that",Space,Str "illustrates",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "in",Space,Str "fig.\160",Strong [Str "\191fig:case2?"],Str ",",Space,Str "although",Space,Str "drawing",Space,Str "this",Space,Str "is",Space,Str "almost",Space,Str "overkill.",Space,Str "You",Space,Str "can",Space,Str "see",Space,Str "that",Space,Str "we",Space,Str "read",Space,Str "a",Space,Str "linear",Space,Str "call",Space,Str "stack",Space,Str "depth",Space,Str "and",Space,Str "if",Space,Str "each",Space,Str "call",Space,Str "costs",Space,Str "us",Space,Str "constant",Space,Str "time",Space,Str "work",Space,Str "we",Space,Str "must",Space,Str "end",Space,Str "up",Space,Str "with",Space,Math InlineMath "O(n)",Str ".",Space,Str "Another",Space,Str "way",Space,Str "to",Space,Str "see",Space,Str "this",Space,Str "is",Space,Str "to",Space,Str "consider",Space,Str "the",Space,Str "workload",Space,Str "at",Space,Str "each",Space,Str "level",Space,Str "(the",Space,Str "grey",Space,Str "blocks",Space,Str "in",Space,Str "the",Space,Str "figure).",Space,Str "The",Space,Str "running",Space,Str "time",Space,Str "will",Space,Str "be",Space,Str "the",Space,Str "sum",Space,Str "of",Space,Str "all",Space,Str "these.",Space,Str "If",Space,Str "we",Space,Str "project",Space,Str "all",Space,Str "of",Space,Str "them",Space,Str "to",Space,Str "the",Space,Str "bottom",Space,Str "of",Space,Str "the",Space,Str "figure",Space,Str "we",Space,Str "see",Space,Str "that",Space,Str "we",Space,Str "get",Space,Math InlineMath "n",Space,Str "of",Space,Str "them.",Space,Str "That",Space,Str "is",Space,Str "certainly",Space,Str "overkill",Space,Str "for",Space,Str "this",Space,Str "recurrence",Space,Str "but",Space,Str "it",Space,Str "is",Space,Str "at",Space,Str "times",Space,Str "a",Space,Str "helpful",Space,Str "way",Space,Str "to",Space,Str "reason",Space,Str "about",Space,Str "the",Space,Str "running",Space,Str "time."]
,Para [Image ("fig:case2",[],[]) [Str "The",Space,Str "work",Space,Str "done",Space,Str "if",Space,Str "we",Space,Str "only",Space,Str "do",Space,Str "constant",Space,Str "work",Space,Str "per",Space,Str "call",Space,Str "but",Space,Str "we",Space,Str "recurse",Space,Str "on",Space,Str "data",Space,Str "that",Space,Str "is",Space,Str "only",Space,Str "one",Space,Str "smaller",Space,Str "than",Space,Str "the",Space,Str "original."] ("case%202.pdf","")]
,Header 4 ("case-3",[],[]) [Str "Case",Space,Str "3:"]
,Para [Math DisplayMath "T(n) = T(n-1) + O(n) \\in O(n^2)"]
,Para [Str "If",Space,Str "we",Space,Str "need",Space,Str "linear",Space,Str "time",Space,Str "to",Space,Str "reduce",Space,Str "the",Space,Str "problem",Space,Str "size",Space,Str "by",Space,Str "one,",Space,Str "then",Space,Str "we",Space,Str "get",Space,Str "a",Space,Str "quadratic",Space,Str "time",Space,Str "algorithm.",Space,Str "Selection",Space,Str "sort,",Space,Str "where",Space,Str "we",Space,Str "find",Space,Str "the",Space,Str "smallest",Space,Str "element",Space,Str "in",Space,Str "the",Space,Str "input,",Space,Str "in",Space,Str "linear",Space,Str "time,",Space,Str "swap",Space,Str "it",Space,Str "to",Space,Str "the",Space,Str "first",Space,Str "element,",Space,Str "and",Space,Str "then",Space,Str "recursively",Space,Str "sort",Space,Str "the",Space,Str "rest",Space,Str "of",Space,Str "the",Space,Str "list",Space,Str "is",Space,Str "an",Space,Str "example",Space,Str "of",Space,Str "this."]
,Para [Str "For",Space,Str "a",Space,Str "proof",Space,Str "of",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "consider",Space,Str "fig.\160",Strong [Str "\191fig:case3?"],Str ".",Space,Str "If",Space,Str "we",Space,Str "have",Space,Str "an",Space,Math InlineMath "n\\times n",Space,Str "square",Space,Str "its",Space,Str "area",Space,Str "is",Space,Math InlineMath "n^2",Str ".",Space,Str "If",Space,Str "we",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "per",Space,Str "level",Space,Str "and",Space,Str "remove",Space,Str "one",Space,Quoted DoubleQuote [Str "work",Space,Str "block"],Space,Str "at",Space,Str "each",Space,Str "level",Space,Str "we",Space,Str "get",Space,Str "the",Space,Str "area",Space,Str "in",Space,Str "the",Space,Str "figure.",Space,Str "It",Space,Str "is",Space,Str "half",Space,Str "the",Space,Str "area",Space,Str "of",Space,Str "an",Space,Math InlineMath "n\\times n",Space,Str "block",Space,Str "so",Space,Str "it",Space,Str "is",Space,Math InlineMath "n^2/2\\in O(n^2)",Str ".",Space,Str "It",Space,Str "is",Space,Str "actually",Space,Math InlineMath "n(n+1)/2",Space,Str "if",Space,Str "you",Space,Str "are",Space,Str "more",Space,Str "careful",Space,Str "with",Space,Str "the",Space,Str "math\8212we",Space,Str "cannot",Space,Str "quite",Space,Str "move",Space,Str "down",Space,Str "the",Space,Str "diagonal",Space,Str "and",Space,Str "there",Space,Str "is",Space,Str "a",Space,Str "little",Space,Str "bit",Space,Str "too",Space,Str "much",Space,Str "at",Space,Str "each",Space,Str "level.",Space,Str "But",Space,Math InlineMath "n(n+1)/2",Space,Str "is",Space,Str "still",Space,Str "in",Space,Math InlineMath "O(n^2)",Space,Str "so",Space,Str "the",Space,Str "figure",Space,Str "is",Space,Str "not",Space,Str "lying."]
,Para [Image ("fig:case3",[],[]) [Str "Work",Space,Str "if",Space,Str "we",Space,Str "reduce",Space,Str "the",Space,Str "size",Space,Str "by",Space,Str "one",Space,Str "in",Space,Str "each",Space,Str "iteration",Space,Str "but",Space,Str "do",Space,Str "linear",Space,Str "work."] ("case%203.pdf","")]
,Header 4 ("case-4",[],[]) [Str "Case",Space,Str "4:"]
,Para [Math DisplayMath "T(n) = T(n/2) + O(1) \\in O(\\log n)"]
,Para [Str "If",Space,Str "you",Space,Str "can",Space,Str "reduce",Space,Str "the",Space,Str "problem",Space,Str "to",Space,Str "half",Space,Str "its",Space,Str "size",Space,Str "in",Space,Str "constant",Space,Str "time,",Space,Str "then",Space,Str "you",Space,Str "have",Space,Str "a",Space,Str "linear",Space,Str "time",Space,Str "algorithm.",Space,Str "Binary",Space,Str "search",Space,Str "is",Space,Str "an",Space,Str "example",Space,Str "of",Space,Str "this."]
,Para [Str "Figure",Space,Strong [Str "\191fig:case4?"],Space,Str "is",Space,Str "one",Space,Str "way",Space,Str "to",Space,Str "illustrate",Space,Str "why",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "is",Space,Str "as",Space,Str "it",Space,Str "is.",Space,Str "Here,",Space,Str "again,",Space,Str "I",Space,Str "have",Space,Str "shown",Space,Str "the",Space,Str "data",Space,Str "and",Space,Str "the",Space,Str "work",Space,Str "done",Space,Str "in",Space,Str "the",Space,Str "recursive",Space,Str "calls",Space,Str "as",Space,Str "white",Space,Str "and",Space,Str "grey",Space,Str "bars,",Space,Str "but",Space,Str "I",Space,Str "have",Space,Str "drawn",Space,Str "them",Space,Str "along",Space,Str "the",Space,Str "x-axis",Space,Str "and",Space,Str "right-to-left.",Space,Str "The",Space,Str "rightmost",Space,Str "chunk",Space,Str "input",Space,Str "has",Space,Str "size",Space,Math InlineMath "n",Str ",",Space,Str "to",Space,Str "the",Space,Str "immediate",Space,Str "left",Space,Str "if",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "the",Space,Str "recursive",Space,Str "call",Space,Str "with",Space,Str "data",Space,Str "of",Space,Str "size",Space,Math InlineMath "n/2",Str ",",Space,Str "and",Space,Str "so",Space,Str "forth",Space,Str "until",Space,Str "we",Space,Str "have",Space,Str "the",Space,Str "base",Space,Str "case,",Space,Str "of",Space,Str "size",Space,Str "1,",Space,Str "at",Space,Str "the",Space,Str "leftmost",Space,Str "position."]
,Para [Image ("fig:case4",[],[]) [Str "Work",Space,Str "if",Space,Str "we",Space,Str "cut",Space,Str "the",Space,Str "problem",Space,Str "size",Space,Str "in",Space,Str "half",Space,Str "at",Space,Str "each",Space,Str "level",Space,Str "and",Space,Str "do",Space,Str "one",Space,Str "piece",Space,Str "of",Space,Str "work."] ("Case%204.pdf","")]
,Para [Str "The",Space,Str "reason",Space,Str "I",Space,Str "have",Space,Str "drawn",Space,Str "it",Space,Str "this",Space,Str "way",Space,Str "is",Space,Str "that",Space,Str "I",Space,Str "can",Space,Str "now",Space,Str "read",Space,Str "it",Space,Str "from",Space,Str "left",Space,Str "to",Space,Str "right.",Space,Str "Every",Space,Str "time",Space,Str "I",Space,Str "reach",Space,Str "a",Space,Str "grey",Space,Str "square",Space,Str "I",Space,Str "put",Space,Str "one",Space,Str "above",Space,Str "it",Space,Str "such",Space,Str "that",Space,Str "the",Space,Str "grey",Space,Str "bars",Space,Str "moving",Space,Str "up",Space,Str "along",Space,Str "the",Space,Str "y-axis",Space,Str "are",Space,Str "equidistance.",Space,Str "Notice",Space,Str "that",Space,Str "each",Space,Str "time",Space,Str "I",Space,Str "have",Space,Str "added",Space,Str "a",Space,Str "grey",Space,Str "square",Space,Str "I",Space,Str "have",Space,Str "to",Space,Str "move",Space,Str "twice",Space,Str "as",Space,Str "long",Space,Str "until",Space,Str "I",Space,Str "reach",Space,Str "the",Space,Str "next",Space,Str "one",Space,Str "than",Space,Str "the",Space,Str "length",Space,Str "I",Space,Str "had",Space,Str "to",Space,Str "move",Space,Str "from",Space,Str "the",Space,Str "previous",Space,Str "to",Space,Str "this",Space,Str "one.",Space,Str "Each",Space,Str "time",Space,Str "we",Space,Str "double",Space,Str "the",Space,Str "size",Space,Str "of",Space,Str "the",Space,Str "data",Space,Str "on",Space,Str "the",Space,Str "x-axis",Space,Str "we",Space,Str "add",Space,Str "one",Space,Str "to",Space,Str "the",Space,Str "y-axis.",Space,Str "This",Space,Str "is",Space,Str "pretty",Space,Str "much",Space,Str "the",Space,Str "definition",Space,Str "of",Space,Str "the",Space,Str "log",Space,Str "base",Space,Str "two",Space,Str "function."]
,Header 4 ("case-5",[],[]) [Str "Case",Space,Str "5:"]
,Para [Math DisplayMath "T(n) = T(n/2) + O(n) \\in O(n)"]
,Para [Str "If",Space,Str "you",Space,Str "can",Space,Str "reduce",Space,Str "the",Space,Str "problem",Space,Str "to",Space,Str "half",Space,Str "its",Space,Str "size",Space,Str "in",Space,Str "linear",Space,Str "time,",Space,Str "and",Space,Str "get",Space,Str "the",Space,Str "solution",Space,Str "for",Space,Str "the",Space,Str "full",Space,Str "problem",Space,Str "after",Space,Str "the",Space,Str "recursive",Space,Str "computation",Space,Str "in",Space,Str "linear",Space,Str "time",Space,Str "as",Space,Str "well,",Space,Str "then",Space,Str "you",Space,Str "have",Space,Str "a",Space,Str "linear",Space,Str "time",Space,Str "algorithm.",Space,Str "Notice",Space,Str "that",Space,Str "this",Space,Str "equation",Space,Str "is",Space,Str "different",Space,Str "from",Space,Str "the",Space,Str "one",Space,Str "we",Space,Str "had",Space,Str "for",Space,Str "merge",Space,Str "sort;",Space,Str "in",Space,Str "that",Space,Str "recursion,",Space,Str "we",Space,Str "needed",Space,Emph [Str "two"],Space,Str "recursive",Space,Str "calls,",Space,Str "in",Space,Str "this",Space,Str "we",Space,Str "only",Space,Str "need",Space,Str "one."]
,Para [Str "As",Space,Str "an",Space,Str "example",Space,Str "of",Space,Str "this",Space,Str "running",Space,Str "time,",Space,Str "consider",Space,Str "a",Space,Str "function",Space,Str "that",Space,Str "adds",Space,Str "a",Space,Str "list",Space,Str "of",Space,Str "numbers",Space,Str "by",Space,Str "first",Space,Str "adding",Space,Str "them",Space,Str "pairwise",Space,Str "and",Space,Str "then",Space,Str "adding",Space,Str "all",Space,Str "the",Space,Str "pairwise",Space,Str "sums",Space,Str "in",Space,Str "a",Space,Str "recursive",Space,Str "call:"]
,CodeBlock ("",["python"],[]) "def binary_sum(x):\n    if len(x) == 0: return 0\n    if len(x) == 1: return x[0]\n\n    # O(n) work\n    y = []\n    for i in range(1, len(x), 2):\n        y.append(x[i - 1] + x[i])\n    if i + 1 < len(x): # handle odd lengths\n        y[0] += x[i + 1]\n    \n    return binary_sum(y) # recurse on n//2 size"
,Para [Str "This",Space,Str "looks",Space,Str "like",Space,Str "just",Space,Str "a",Space,Str "complicated",Space,Str "way",Space,Str "of",Space,Str "adding",Space,Str "numbers\8212and",Space,Str "in",Space,Str "some",Space,Str "ways",Space,Str "it",Space,Str "is\8212but",Space,Str "it",Space,Str "can",Space,Str "be",Space,Str "relevant",Space,Str "if",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "compute",Space,Str "the",Space,Str "sum",Space,Str "of",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "(see",Space,Str "the",Space,Str "last",Space,Str "section",Space,Str "of",Space,Str "this",Space,Str "chapter).",Space,Str "When",Space,Str "you",Space,Str "add",Space,Str "two",Space,Str "floating",Space,Str "point",Space,Str "numbers,",Space,Str "you",Space,Str "might",Space,Str "not",Space,Str "end",Space,Str "up",Space,Str "with",Space,Str "their",Space,Str "sum.",Space,Str "If",Space,Str "this",Space,Str "surprises",Space,Str "you,",Space,Str "remember",Space,Str "that",Space,Str "a",Space,Str "number",Space,Str "must",Space,Str "be",Space,Str "represented",Space,Str "in",Space,Str "finite",Space,Str "computer",Space,Str "memory,",Space,Str "but",Space,Str "not",Space,Str "all",Space,Str "real",Space,Str "numbers",Space,Str "can.",Space,Str "For",Space,Str "example,",Space,Str "the",Space,Str "decimal",Space,Str "representation",Space,Str "of",Space,Math InlineMath "1/3",Space,Str "requires",Space,Str "infinitely",Space,Str "many",Space,Str "decimals,",Space,Math InlineMath "0.333333\\ldots",Str ".",Space,Str "In",Space,Str "your",Space,Str "computer,",Space,Str "you",Space,Str "do",Space,Str "not",Space,Str "use",Space,Str "decimal",Space,Str "notation",Space,Str "but",Space,Str "binary,",Space,Str "but",Space,Str "the",Space,Str "problem",Space,Str "is",Space,Str "the",Space,Str "same.",Space,Str "(You",Space,Str "can,",Space,Str "of",Space,Str "course,",Space,Str "represent",Space,Str "rational",Space,Str "numbers",Space,Str "like",Space,Math InlineMath "1/3",Space,Str "as",Space,Str "two",Space,Str "integers,",Space,Str "and",Space,Str "you",Space,Str "can",Space,Str "represent",Space,Str "arbitrarily",Space,Str "large",Space,Str "integers,",Space,Str "but",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "are",Space,Str "much",Space,Str "faster",Space,Str "for",Space,Str "the",Space,Str "computer",Space,Str "to",Space,Str "work",Space,Str "with)."]
,Para [Str "If",Space,Str "you",Space,Str "add",Space,Str "two",Space,Str "floating",Space,Str "point",Space,Str "numbers,",Space,Str "you",Space,Str "will",Space,Str "then",Space,Str "lose",Space,Str "bits",Space,Str "of",Space,Str "information",Space,Str "proportional",Space,Str "to",Space,Str "how",Space,Str "many",Space,Str "orders",Space,Str "of",Space,Str "magnitude",Space,Str "the",Space,Str "numbers",Space,Str "are",Space,Str "apart,",Space,Str "so",Space,Str "the",Space,Str "greater",Space,Str "the",Space,Str "difference,",Space,Str "the",Space,Str "less",Space,Str "precise",Space,Str "your",Space,Str "addition",Space,Str "is.",Space,Str "If",Space,Str "you",Space,Str "add",Space,Str "the",Space,Str "numbers",Space,Str "in",Space,Str "a",Space,Str "long",Space,Str "list,",Space,Str "starting",Space,Str "from",Space,Str "the",Space,Str "left",Space,Str "and",Space,Str "moving",Space,Str "right,",Space,Str "as",Space,Str "we",Space,Str "have",Space,Str "done",Space,Str "many",Space,Str "times",Space,Str "before,",Space,Str "then",Space,Str "this",Space,Str "can",Space,Str "become",Space,Str "a",Space,Str "problem.",Space,Str "The",Space,Str "accumulator",Space,Str "will",Space,Str "grow",Space,Str "and",Space,Str "grow",Space,Str "as",Space,Str "we",Space,Str "add",Space,Str "more",Space,Str "and",Space,Str "more",Space,Str "numbers,",Space,Str "and",Space,Str "if",Space,Str "the",Space,Str "numbers",Space,Str "in",Space,Str "the",Space,Str "list",Space,Str "are",Space,Str "of",Space,Str "roughly",Space,Str "the",Space,Str "same",Space,Str "order",Space,Str "of",Space,Str "magnitude,",Space,Str "the",Space,Str "accumulator",Space,Str "might",Space,Str "end",Space,Str "up",Space,Str "many",Space,Str "orders",Space,Str "of",Space,Str "magnitude",Space,Str "larger",Space,Str "than",Space,Str "the",Space,Str "next",Space,Str "number",Space,Str "to",Space,Str "be",Space,Str "added.",Space,Str "If",Space,Str "the",Space,Str "difference",Space,Str "gets",Space,Str "large",Space,Str "enough,",Space,Str "adding",Space,Str "a",Space,Str "number",Space,Str "to",Space,Str "the",Space,Str "accumulator",Space,Str "results",Space,Str "in",Space,Str "just",Space,Str "the",Space,Str "value",Space,Str "of",Space,Str "the",Space,Str "accumulator."]
,Para [Str "If",Space,Str "you",Space,Str "start",Space,Str "with",Space,Str "numbers",Space,Str "of",Space,Str "the",Space,Str "same",Space,Str "order",Space,Str "of",Space,Str "magnitude,",Space,Str "then",Space,Str "adding",Space,Str "them",Space,Str "pairwise",Space,Str "as",Space,Str "in",Space,Str "the",Space,Str "algorithm",Space,Str "above,",Space,Str "will",Space,Str "keep",Space,Str "them",Space,Str "at",Space,Str "roughly",Space,Str "the",Space,Str "same",Space,Str "order",Space,Str "of",Space,Str "magnitude",Space,Str "in",Space,Str "the",Space,Str "recursion,",Space,Str "and",Space,Str "this",Space,Str "will",Space,Str "alleviate",Space,Str "the",Space,Str "problem",Space,Str "of",Space,Str "losing",Space,Str "precision",Space,Str "in",Space,Str "floating",Space,Str "point",Space,Str "numbers."]
,Para [Str "A",Space,Str "classical",Space,Str "algorithm,",Space,Emph [Str "k-select"],Str ",",Space,Str "is",Space,Str "an",Space,Str "adaption",Space,Str "of",Space,Str "quick",Space,Str "sort",Space,Str "that",Space,Str "has",Space,Str "this",Space,Str "recurrence",Space,Str "as",Space,Str "an",Space,Str "expected",Space,Str "case",Space,Str "running",Space,Str "time.",Space,Str "As",Space,Str "input",Space,Str "it",Space,Str "takes",Space,Str "a",Space,Str "a",Space,Str "sequence",Space,Math InlineMath "x",Space,Str "and",Space,Str "an",Space,Str "index",Space,Math InlineMath "i",Space,Str "and",Space,Str "it",Space,Str "returns",Space,Str "the",Space,Str "value",Space,Math InlineMath "x'[i]",Space,Str "where",Space,Math InlineMath "x'",Space,Str "is",Space,Math InlineMath "x",Space,Str "sorted.",Space,Str "If",Space,Str "we",Space,Str "sorted",Space,Math InlineMath "x",Str ",",Space,Str "in",Space,Math InlineMath "O(n\\log n)",Str ",",Space,Str "and",Space,Str "then",Space,Str "returned",Space,Math InlineMath "x'[i]",Str ",",Space,Str "in",Space,Math InlineMath "O(1)",Space,Str "we",Space,Str "would",Space,Str "have",Space,Str "an",Space,Math InlineMath "O(n\\log n)",Space,Str "algorithm.",Space,Str "We",Space,Str "can",Space,Str "do",Space,Str "better",Space,Str "and",Space,Str "get",Space,Str "an",Space,Math InlineMath "O(n)",Space,Str "algorithm",Space,Str "by",Space,Str "not",Space,Str "sorting",Space,Math InlineMath "x",Space,Str "completely.",Space,Str "We",Space,Str "will",Space,Str "partition",Space,Str "the",Space,Str "sequence",Space,Str "exactly",Space,Str "as",Space,Str "we",Space,Str "did",Space,Str "in",Space,Str "quick",Space,Str "sort.",Space,Str "This",Space,Str "take",Space,Str "time",Space,Math InlineMath "O(n)",Str ".",Space,Str "Then,",Space,Str "if",Space,Str "the",Space,Str "partitioning",Space,Str "index",Space,Math InlineMath "k",Space,Str "is",Space,Str "larger",Space,Str "than",Space,Math InlineMath "i",Space,Str "we",Space,Str "know",Space,Str "that",Space,Math InlineMath "x'[i]",Space,Str "must",Space,Str "be",Space,Str "in",Space,Str "the",Space,Str "first",Space,Str "part.",Space,Str "If",Space,Str "not,",Space,Str "it",Space,Str "must",Space,Str "be",Space,Str "in",Space,Str "the",Space,Str "second",Space,Str "part.",Space,Str "In",Space,Str "the",Space,Str "first",Space,Str "case,",Space,Str "we",Space,Str "call",Space,Str "recursively",Space,Str "on",Space,Str "the",Space,Str "first",Space,Str "part;",Space,Str "in",Space,Str "the",Space,Str "second",Space,Str "we",Space,Str "call",Space,Str "recursively",Space,Str "on",Space,Str "the",Space,Str "second",Space,Str "part",Space,Str "but",Space,Str "adjust",Space,Str "the",Space,Str "index",Space,Str "to",Space,Str "reflect",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "eliminated",Space,Math InlineMath "k+1",Space,Str "elements",Space,Str "from",Space,Str "the",Space,Str "left",Space,Str "part."]
,Para [Strong [Str "Exercise:"],Space,Str "Modify",Space,Str "your",Space,Str "quick",Space,Str "sort",Space,Str "implementation",Space,Str "to",Space,Str "implement",Space,Str "k-select."]
,Para [Str "Figure",Space,Strong [Str "\191fig:case5?"],Space,Str "shows",Space,Str "how",Space,Str "you",Space,Str "can",Space,Str "think",Space,Str "about",Space,Str "the",Space,Str "running",Space,Str "time.",Space,Str "At",Space,Str "each",Space,Str "level",Space,Str "we",Space,Str "do",Space,Str "linear",Space,Str "work",Space,Str "but",Space,Str "we",Space,Str "only",Space,Str "take",Space,Str "half",Space,Str "the",Space,Str "data",Space,Str "with",Space,Str "us",Space,Str "in",Space,Str "the",Space,Str "recursion.",Space,Str "The",Space,Str "grey",Space,Str "areas",Space,Str "show",Space,Str "the",Space,Str "work",Space,Str "we",Space,Str "do",Space,Str "at",Space,Str "each",Space,Str "level.",Space,Str "I",Space,Str "have",Space,Str "put",Space,Str "the",Space,Str "recursion",Space,Str "on",Space,Str "the",Space,Str "first",Space,Str "half",Space,Str "to",Space,Str "the",Space,Str "left",Space,Str "at",Space,Str "level",Space,Str "two.",Space,Str "Then",Space,Str "the",Space,Str "quarter",Space,Str "work",Space,Str "is",Space,Str "to",Space,Str "the",Space,Str "right",Space,Str "of",Space,Str "it;",Space,Str "the",Space,Str "eights",Space,Str "to",Space,Str "right",Space,Str "of",Space,Str "that",Space,Str "and",Space,Str "so",Space,Str "on.",Space,Str "If",Space,Str "we",Space,Str "take",Space,Str "all",Space,Str "the",Space,Str "pieces",Space,Str "except",Space,Str "the",Space,Str "first",Space,Math InlineMath "n",Space,Str "down",Space,Str "to",Space,Str "the",Space,Str "bottom",Space,Str "of",Space,Str "the",Space,Str "figure",Space,Str "and",Space,Str "lie",Space,Str "them",Space,Str "next",Space,Str "to",Space,Str "each",Space,Str "other",Space,Str "they",Space,Str "add",Space,Str "up",Space,Str "to",Space,Math InlineMath "n",Str ".",Space,Str "So",Space,Str "the",Space,Str "first",Space,Math InlineMath "n",Space,Str "and",Space,Str "the",Space,Math InlineMath "n",Space,Str "from",Space,Str "the",Space,Str "rest",Space,Str "of",Space,Str "the",Space,Str "calls",Space,Str "sum",Space,Str "to",Space,Math InlineMath "2nin O(n)",Str "."]
,Para [Image ("fig:case5",[],[]) [Str "Work",Space,Str "if",Space,Str "we",Space,Str "do",Space,Str "linear",Space,Str "time",Space,Str "per",Space,Str "level",Space,Str "and",Space,Str "then",Space,Str "only",Space,Str "take",Space,Str "half",Space,Str "the",Space,Str "problem",Space,Str "size",Space,Str "with",Space,Str "us",Space,Str "to",Space,Str "the",Space,Str "next",Space,Str "level."] ("Case%205.pdf","")]
,Header 4 ("case-6",[],[]) [Str "Case",Space,Str "6:"]
,Para [Math DisplayMath "T(n) = 2\\cdot T(n/2) + O(1) \\in O(n)"]
,Para [Str "If",Space,Str "we",Space,Str "can",Space,Str "split",Space,Str "and",Space,Str "combine",Space,Str "in",Space,Str "constant",Space,Str "time",Space,Str "but",Space,Str "require",Space,Str "two",Space,Str "recursive",Space,Str "calls",Space,Str "on",Space,Str "half",Space,Str "the",Space,Str "size,",Space,Str "we",Space,Str "also",Space,Str "get",Space,Str "a",Space,Str "linear",Space,Str "time",Space,Str "algorithm.",Space,Str "Again,",Space,Str "notice",Space,Str "that",Space,Str "this",Space,Str "is",Space,Str "different",Space,Str "from",Space,Str "the",Space,Str "recurrence",Space,Str "equation",Space,Str "for",Space,Str "merge",Space,Str "sort",Space,Str "where",Space,Str "we",Space,Str "needed",Space,Str "linear",Space,Str "time",Space,Str "to",Space,Str "merge",Space,Str "the",Space,Str "results",Space,Str "of",Space,Str "the",Space,Str "two",Space,Str "recursive",Space,Str "calls."]
,Para [Str "An",Space,Str "example",Space,Str "of",Space,Str "an",Space,Str "algorithm",Space,Str "that",Space,Str "has",Space,Str "this",Space,Str "recurrence",Space,Str "consider",Space,Str "the",Space,Str "problem",Space,Str "of",Space,Str "finding",Space,Str "the",Space,Str "largest",Space,Str "difference",Space,Str "between",Space,Str "any",Space,Str "two",Space,Str "numbers",Space,Str "in",Space,Str "a",Space,Str "list.",Space,Str "You",Space,Str "could,",Space,Str "of",Space,Str "course,",Space,Str "run",Space,Str "through",Space,Str "all",Space,Str "pairs",Space,Str "and",Space,Str "find",Space,Str "the",Space,Str "largest,",Space,Str "but",Space,Str "that",Space,Str "would",Space,Str "take",Space,Str "time",Space,Math InlineMath "O(n^2)",Str ".",Space,Str "Instead,",Space,Str "you",Space,Str "can",Space,Str "solve",Space,Str "a",Space,Str "slightly",Space,Str "harder",Space,Str "problem",Space,Str "and",Space,Str "get",Space,Str "the",Space,Str "solution",Space,Str "from",Space,Str "there\8212whereby",Space,Quoted DoubleQuote [Str "harder"],Space,Str "I",Space,Str "mean",Space,Str "that",Space,Str "it",Space,Str "solves",Space,Str "more",Space,Str "than",Space,Str "just",Space,Str "finding",Space,Str "the",Space,Str "maximum",Space,Str "difference;",Space,Str "I",Space,Str "do",Space,Str "not",Space,Str "mean",Space,Str "that",Space,Str "this",Space,Str "is",Space,Str "a",Space,Str "harder",Space,Str "complexity",Space,Str "class.",Space,Str "We",Space,Str "can",Space,Str "actually",Space,Str "solve",Space,Str "this",Space,Str "problem",Space,Str "in",Space,Str "linear",Space,Str "time",Space,Str "using",Space,Str "a",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithm",Space,Str "with",Space,Str "the",Space,Str "recurrence",Space,Str "above."]
,Para [Str "The",Space,Str "problem",Space,Str "we",Space,Str "will",Space,Str "solve",Space,Str "is",Space,Str "to",Space,Str "find",Space,Str "the",Space,Str "smallest",Space,Str "and",Space,Str "the",Space,Str "largest",Space,Str "number",Space,Str "in",Space,Str "a",Space,Str "list",Space,Str "as",Space,Str "well",Space,Str "as",Space,Str "the",Space,Str "largest",Space,Str "difference.",Space,Str "We",Space,Str "do",Space,Str "this",Space,Str "recursively.",Space,Str "We",Space,Str "split",Space,Str "the",Space,Str "input",Space,Str "into",Space,Str "two",Space,Str "halves,",Space,Str "find",Space,Str "the",Space,Str "smallest",Space,Str "and",Space,Str "largest",Space,Str "elements",Space,Str "in",Space,Str "both",Space,Str "halves,",Space,Str "as",Space,Str "well",Space,Str "as",Space,Str "the",Space,Str "largest",Space,Str "difference",Space,Str "in",Space,Str "the",Space,Str "two",Space,Str "halves.",Space,Str "We",Space,Str "can",Space,Str "then",Space,Str "combine",Space,Str "these.",Space,Str "The",Space,Str "smallest",Space,Str "element",Space,Str "for",Space,Str "the",Space,Str "full",Space,Str "list",Space,Str "is",Space,Str "the",Space,Str "smallest",Space,Str "of",Space,Str "the",Space,Str "smallest",Space,Str "in",Space,Str "either",Space,Str "half.",Space,Str "The",Space,Str "largest",Space,Str "element",Space,Str "is",Space,Str "the",Space,Str "maximum",Space,Str "of",Space,Str "the",Space,Str "two",Space,Str "we",Space,Str "got",Space,Str "from",Space,Str "the",Space,Str "recursive",Space,Str "calls.",Space,Str "The",Space,Str "largest",Space,Str "difference",Space,Str "in",Space,Str "the",Space,Str "full",Space,Str "list",Space,Str "is",Space,Str "either",Space,Str "found",Space,Str "in",Space,Str "one",Space,Str "of",Space,Str "the",Space,Str "two",Space,Str "halves,",Space,Str "or",Space,Str "we",Space,Str "can",Space,Str "get",Space,Str "it",Space,Str "as",Space,Str "the",Space,Str "difference",Space,Str "between",Space,Str "the",Space,Str "largest",Space,Str "element",Space,Str "in",Space,Str "one",Space,Str "half",Space,Str "and",Space,Str "the",Space,Str "smallest",Space,Str "in",Space,Str "the",Space,Str "other.",Space,Str "We",Space,Str "can",Space,Str "implement",Space,Str "the",Space,Str "entire",Space,Str "algorithm",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "def min_max_maxdiff(x, i, j):\n    # Invariant: j > i\n    if i + 1 == j:\n        return x[i], x[i], 0\n    else:\n        mid = (i + j) // 2\n        min_l, max_l, maxdiff_l = min_max_maxdiff(x, i, mid)\n        min_r, max_r, maxdiff_r = min_max_maxdiff(x, mid, j)\n        min_res = min(min_l, min_r)\n        max_res = max(max_l, max_r)\n        maxdiff_res = max(maxdiff_l, maxdiff_r,\n                          max_r - min_l, max_l - min_r)\n        return min_res, max_res, maxdiff_res"
,Para [Str "If",Space,Str "we",Space,Str "only",Space,Str "want",Space,Str "the",Space,Str "maximum",Space,Str "difference,",Space,Str "we",Space,Str "can",Space,Str "wrap",Space,Str "the",Space,Str "function:"]
,CodeBlock ("",["python"],[]) "def maxdiff(x):\n    if len(x) == 0: return None\n    _, _, md = min_max_maxdiff(x, 0, len(x))\n    return md"
,Para [Str "Splitting",Space,Str "the",Space,Str "data",Space,Str "and",Space,Str "combining",Space,Str "the",Space,Str "results",Space,Str "from",Space,Str "the",Space,Str "recursive",Space,Str "calls",Space,Str "can",Space,Str "be",Space,Str "done",Space,Str "in",Space,Str "constant",Space,Str "time",Space,Str "and",Space,Str "we",Space,Str "make",Space,Str "two",Space,Str "recursive",Space,Str "calls",Space,Str "of",Space,Str "half",Space,Str "the",Space,Str "size,",Space,Str "so",Space,Str "by",Space,Str "the",Space,Str "recurrence",Space,Str "equation",Space,Str "above,",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "is",Space,Math InlineMath "O(n)",Str "."]
,Para [Str "It",Space,Str "is",Space,Str "a",Space,Str "little",Space,Str "harder",Space,Str "to",Space,Str "visualise",Space,Str "why",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "is",Space,Str "the",Space,Str "way",Space,Str "it",Space,Str "is,",Space,Str "but",Space,Str "consider",Space,Str "fig.\160",Strong [Str "\191fig:case6?"],Str ".",Space,Str "Here",Space,Str "we",Space,Str "show",Space,Str "the",Space,Str "work",Space,Str "per",Space,Str "level",Space,Str "but",Space,Str "this",Space,Str "time",Space,Str "I",Space,Str "don\8217t",Space,Str "want",Space,Str "you",Space,Str "to",Space,Str "add",Space,Str "the",Space,Str "grey",Space,Str "blocks.",Space,Str "I",Space,Str "just",Space,Str "want",Space,Str "you",Space,Str "to",Space,Str "read",Space,Str "the",Space,Str "the",Space,Str "figure",Space,Str "from",Space,Str "the",Space,Str "bottom",Space,Str "and",Space,Str "up.",Space,Str "At",Space,Str "the",Space,Str "bottom",Space,Str "the",Space,Str "work",Space,Str "is",Space,Math InlineMath "n",Str ".",Space,Str "At",Space,Str "the",Space,Str "second-to-last",Space,Str "level",Space,Str "it",Space,Str "is",Space,Math InlineMath "n/2",Str ".",Space,Str "It",Space,Str "continues",Space,Str "that",Space,Str "way",Space,Str "until",Space,Str "we",Space,Str "get",Space,Str "to",Space,Str "the",Space,Str "top",Space,Str "level",Space,Str "where",Space,Str "the",Space,Str "work",Space,Str "is",Space,Math InlineMath "1",Str ".",Space,Str "That",Space,Str "is",Space,Emph [Str "exactly"],Space,Str "the",Space,Str "setting",Space,Str "we",Space,Str "saw",Space,Str "in",Space,Str "case",Space,Str "5.",Space,Str "The",Space,Str "setup",Space,Str "is",Space,Str "different",Space,Str "and",Space,Str "so",Space,Str "are",Space,Str "the",Space,Str "figures",Space,Str "but",Space,Str "if",Space,Str "you",Space,Str "read",Space,Str "this",Space,Str "figure",Space,Str "from",Space,Str "the",Space,Str "bottom",Space,Str "and",Space,Str "fig.\160",Strong [Str "\191fig:case5?"],Space,Str "from",Space,Str "the",Space,Str "top",Space,Str "you",Space,Str "will",Space,Str "see",Space,Str "that",Space,Str "the",Space,Str "work",Space,Str "per",Space,Str "level",Space,Str "is",Space,Str "exactly",Space,Str "the",Space,Str "same.",Space,Str "If",Space,Str "case",Space,Str "5",Space,Str "is",Space,Math InlineMath "O(n)",Space,Str "then",Space,Str "case",Space,Str "6",Space,Str "must",Space,Str "be",Space,Str "as",Space,Str "well."]
,Para [Image ("fig:case6",[],[]) [Str "Work",Space,Str "if",Space,Str "we",Space,Str "do",Space,Str "constant",Space,Str "work",Space,Str "per",Space,Str "recursion",Space,Str "but",Space,Str "do",Space,Str "two",Space,Str "recursive",Space,Str "call",Space,Str "on",Space,Str "half",Space,Str "the",Space,Str "data",Space,Str "each."] ("Case%206.pdf","")]
,Header 2 ("dynamic-programming",[],[]) [Str "Dynamic",Space,Str "programming"]
,Para [Str "By",Space,Str "now,",Space,Str "we",Space,Str "have",Space,Str "seen",Space,Str "how",Space,Str "recursion",Space,Str "is",Space,Str "a",Space,Str "powerful",Space,Str "tool",Space,Str "for",Space,Str "both",Space,Str "programming",Space,Str "and",Space,Str "algorithmic",Space,Str "design,",Space,Str "i.e.,",Space,Str "divide",Space,Str "and",Space,Str "conquer.",Space,Str "But",Space,Str "you",Space,Str "will",Space,Str "not",Space,Str "be",Space,Str "surprised",Space,Str "to",Space,Str "learn",Space,Str "that",Space,Str "not",Space,Str "all",Space,Str "recursive",Space,Str "programs",Space,Str "are",Space,Str "efficient.",Space,Str "For",Space,Str "some",Space,Str "recursive",Space,Str "functions",Space,Str "there",Space,Str "is",Space,Str "not",Space,Str "much",Space,Str "we",Space,Str "can",Space,Str "do",Space,Str "about",Space,Str "that",Space,Str "but",Space,Str "for",Space,Str "others"]
,Para [Str "Consider",Space,Str "the",Space,Str "recursive",Space,Str "function",Space,Str "for",Space,Str "computing",Space,Str "the",Space,Math InlineMath "n",Str "\8217th",Space,Str "Fibonacci",Space,Str "number."]
,Para [Math DisplayMath "F(n) = \\begin{cases}\n1 & n=1 \\,\\mathrm{or}\\, n=0 \\\\\nF(n-1) + F(n-2) & n > 1\n\\end{cases}\n"]
,Para [Str "To",Space,Str "compute",Space,Math InlineMath "F(5)",Space,Str "you",Space,Str "must",Space,Str "compute",Space,Math InlineMath "F(4)",Space,Str "and",Space,Math InlineMath "F(3)",Str ".",Space,Str "To",Space,Math InlineMath "F(4)",Space,Str "you",Space,Str "must",Space,Str "compute",Space,Math InlineMath "F(3)",Space,Str "and",Space,Math InlineMath "F(2)",Str ",",Space,Str "for",Space,Math InlineMath "F(3)",Space,Str "you",Space,Str "must",Space,Str "compute",Space,Math InlineMath "F(2)",Space,Str "and",Space,Str "so",Space,Str "on,",Space,Str "see",Space,Str "fig.\160",Strong [Str "\191fig:fib-recursive?"],Space,Str "where",Space,Str "I",Space,Str "have",Space,Str "marked",Space,Str "the",Space,Str "base",Space,Str "cases",Space,Str "with",Space,Str "check-marks",Space,Str "and",Space,Str "the",Space,Str "recursive",Space,Str "cases",Space,Str "with",Space,Str "which",Space,Str "recursive",Space,Str "calls",Space,Str "they",Space,Str "make.",Space,Str "The",Space,Str "structure",Space,Str "of",Space,Str "the",Space,Str "graph",Space,Str "of",Space,Str "recursive",Space,Str "calls",Space,Str "leads",Space,Str "clearly",Space,Str "leads",Space,Str "to",Space,Str "an",Space,Str "explosion",Space,Str "in",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "calls",Space,Str "as",Space,Math InlineMath "n",Space,Str "increases,",Space,Str "see",Space,Str "fig.\160",Strong [Str "\191fig:fib-recursive-calls-count?"],Str ".",Space,Str "That",Space,Str "makes",Space,Str "this",Space,Str "recursive",Space,Str "calculation",Space,Str "an",Space,Str "unfeasible",Space,Str "approach",Space,Str "for",Space,Str "computing",Space,Math InlineMath "F(n)",Space,Str "for",Space,Str "large",Space,Math InlineMath "n",Str "."]
,Para [Image ("fig:fib-recursive",[],[]) [Str "The",Space,Str "graph",Space,Str "of",Space,Str "recursions",Space,Str "necessary",Space,Str "to",Space,Str "compute",Space,Str "the",Space,Str "5\8217th",Space,Str "Fibonacci",Space,Str "number."] ("Fib%20Recursive.pdf","")]
,Para [Image ("fig:fib-recursive-calls-count",[],[]) [Str "The",Space,Str "number",Space,Str "of",Space,Str "recursive",Space,Str "calls",Space,Str "made",Space,Str "when",Space,Str "evaluating",Space,Str "the",Space,Str "Fibonacci",Space,Str "function."] ("fib.pdf","")]
,Para [Str "If",Space,Str "we",Space,Str "could",Space,Str "store",Space,Str "the",Space,Str "values",Space,Str "of",Space,Str "each",Space,Str "function,",Space,Str "illustrated",Space,Str "in",Str "fig.\160",Strong [Str "\191fig:fib-memorisation?"],Str ",",Space,Str "we",Space,Str "would",Space,Str "get",Space,Str "a",Space,Str "linear",Space,Str "time",Space,Str "algorithm",Space,Str "(",Str "fig.\160",Strong [Str "\191fig:fib-memo-count?"],Str ").",Space,Str "You",Space,Str "cannot",Space,Str "determine",Space,Str "that",Space,Str "the",Space,Str "algorithm\8217s",Space,Str "running",Space,Str "time",Space,Str "is",Space,Str "linear",Space,Str "just",Space,Str "because",Space,Str "the",Space,Str "plot",Space,Str "looks",Space,Str "like",Space,Str "a",Space,Str "line",Space,Str "but",Space,Str "I",Space,Str "leave",Space,Str "it",Space,Str "to",Space,Str "you",Space,Str "to",Space,Str "prove",Space,Str "it,",Space,Str "or",Space,Str "you",Space,Str "can",Space,Str "take",Space,Str "my",Space,Str "word",Space,Str "for",Space,Str "it.",Space,Str "To",Space,Str "go",Space,Str "from",Space,Str "an",Space,Str "exponential",Space,Str "to",Space,Str "a",Space,Str "linear",Space,Str "algorithm",Space,Str "like",Space,Str "this",Space,Str "only",Space,Str "requires",Space,Str "a",Space,Str "table",Space,Str "to",Space,Str "store",Space,Str "results",Space,Str "in",Space,Str "and",Space,Str "to",Space,Str "look",Space,Str "up",Space,Str "values",Space,Str "in."]
,Para [Image ("fig:fib-memorisation",[],[]) [Str "The",Space,Str "recursivion",Space,Str "graph",Space,Str "for",Space,Str "computing",Space,Str "the",Space,Str "5\8217th",Space,Str "Fibonacci",Space,Str "number",Space,Str "if",Space,Str "we",Space,Str "remember",Space,Str "the",Space,Str "problems",Space,Str "we",Space,Str "have",Space,Str "already",Space,Str "solved"] ("Fib%20Memorisation.pdf","")]
,Para [Image ("fig:fib-memo-count",[],[]) [Str "Number",Space,Str "of",Space,Str "recursions",Space,Str "for",Space,Str "increasing",Space,Math InlineMath "n",Str "."] ("fib-memo.pdf","")]
,CodeBlock ("",["python"],[]) "def fib(n):\n    tbl = {}\n    if n <= 1:\n        return 1\n    else:\n        if n not in tbl:\n            tbl[n] = fib(n - 1) + fib(n - 2)\n        return tbl[n]"
,Para [Str "The",Space,Math InlineMath "F(n)",Space,Str "function",Space,Str "is",Space,Str "simple;",Space,Str "we",Space,Str "always",Space,Str "know",Space,Str "precisely",Space,Str "which",Space,Str "recursions",Space,Str "we",Space,Str "need",Space,Str "and",Space,Str "the",Space,Str "sequence",Space,Str "of",Space,Str "recursions",Space,Str "we",Space,Str "need.",Space,Str "This",Space,Str "lets",Space,Str "us",Space,Str "turn",Space,Str "the",Space,Str "calculations",Space,Str "around",Space,Str "and",Space,Str "start",Space,Str "at",Space,Str "the",Space,Str "base",Space,Str "cases",Space,Str "and",Space,Str "build",Space,Math InlineMath "F(i)=F(i-1)+F(i-2)",Space,Str "from",Space,Str "2",Space,Str "and",Space,Str "up",Space,Str "to",Space,Math InlineMath "n",Str ",",Space,Str "see",Space,Str "fig.\160",Strong [Str "\191fig:fib-iteratively?"],Str "."]
,Para [Image ("fig:fib-iteratively",[],[]) [Str "The",Space,Str "graph",Space,Str "for",Space,Str "computing",Space,Str "the",Space,Str "5\8217th",Space,Str "Fibonacci",Space,Str "number",Space,Str "iteratively."] ("Fib%20iteratively.pdf","")]
,Para [Str "We",Space,Str "could",Space,Str "build",Space,Str "a",Space,Str "table",Space,Str "mapping",Space,Str "the",Space,Str "numbers",Space,Math InlineMath "\\{0,1,2,\\ldots,n\\}",Space,Str "to",Space,Str "the",Space,Str "corresponding",Space,Str "Fibonacci",Space,Str "number,",Space,Str "then",Space,Str "fill",Space,Str "the",Space,Str "table",Space,Str "starting",Space,Str "from",Space,Str "the",Space,Str "smallest",Space,Str "numbers",Space,Str "and",Space,Str "moving",Space,Str "up.",Space,Str "That",Space,Str "way,",Space,Str "whenever",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "compute",Space,Math InlineMath "F(i)",Space,Str "for",Space,Str "some",Space,Math InlineMath "i",Str ",",Space,Str "the",Space,Str "values",Space,Math InlineMath "F(i-1)",Space,Str "and",Space,Math InlineMath "F(i-2)",Space,Str "are",Space,Str "already",Space,Str "in",Space,Str "the",Space,Str "table.",Space,Str "This",Space,Str "leads",Space,Str "us",Space,Str "to",Space,Str "this",Space,Str "algorithm",Space,Str "that",Space,Str "fills",Space,Str "up",Space,Str "a",Space,Str "table",Space,Str "and",Space,Str "computes",Space,Str "the",Space,Str "Fibonacci",Space,Str "numbers",Space,Str "up",Space,Str "to",Space,Str "the",Space,Str "one",Space,Str "we",Space,Str "want."]
,CodeBlock ("",["python"],[]) "def fib(n):\n    if n <= 1:\n        return 1\n    tbl = [1] * n\n    for i in range(2,n):\n        tbl[i] = tbl[i - 1] + tbl[i - 2]\n    return tbl[n - 1] + tbl[n - 2]"
,Para [Str "Of",Space,Str "course,",Space,Str "we",Space,Str "only",Space,Str "need",Space,Str "the",Space,Str "values",Space,Math InlineMath "F(i-1)",Space,Str "and",Space,Math InlineMath "F(i-2)",Str ";",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "need",Space,Str "the",Space,Str "full",Space,Str "table",Space,Str "when",Space,Str "we",Space,Str "compute",Space,Math InlineMath "F(i)",Space,Str "so",Space,Str "we",Space,Str "can",Space,Str "save",Space,Str "a",Space,Str "bit",Space,Str "of",Space,Str "memory",Space,Str "by",Space,Str "only",Space,Str "remembering",Space,Str "the",Space,Str "last",Space,Str "two",Space,Str "values.",Space,Str "With",Space,Str "two",Space,Str "variables,",Space,Str "representing",Space,Math InlineMath "F(i-2)",Space,Str "and",Space,Math InlineMath "F(i-1)",Str ",",Space,Str "the",Space,Str "iterative",Space,Str "solution",Space,Str "looks",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "def fib(n):\n    if n <= 1:\n        return 1\n    fi1, fi2 = 1, 1\n    for i in range(n - 1):\n        fi1, fi2 = fi1 + fi2, fi1\n    return fi1"
,Para [Str "Dynamic",Space,Str "programming",Space,Str "is",Space,Str "the",Space,Str "straightforward",Space,Str "idea",Space,Str "that",Space,Str "you",Space,Str "should",Space,Str "only",Space,Str "calculate",Space,Str "each",Space,Str "value",Space,Str "once.",Space,Str "When",Space,Str "we",Space,Str "compute",Space,Str "a",Space,Str "value",Space,Str "recursively",Space,Str "and",Space,Str "store",Space,Str "results",Space,Str "in",Space,Str "a",Space,Str "table,",Space,Str "then",Space,Str "we",Space,Str "call",Space,Str "it",Space,Emph [Str "memorisation"],Space,Str "or",Space,Emph [Str "top-down"],Space,Str "dynamic",Space,Str "programming.",Space,Str "When",Space,Str "we",Space,Str "build",Space,Str "our",Space,Str "way",Space,Str "up",Space,Str "from",Space,Str "base",Space,Str "cases",Space,Str "to",Space,Str "the",Space,Str "one",Space,Str "we",Space,Str "want",Space,Str "we",Space,Str "call",Space,Str "it",Space,Emph [Str "bottom-up"],Space,Str "dynamic",Space,Str "programming.",Space,Str "I",Space,Str "personally",Space,Str "think",Space,Str "that",Space,Str "the",Space,Str "term",Space,Str "memorisation",Space,Str "is",Space,Str "more",Space,Str "informative",Space,Str "about",Space,Str "what",Space,Str "an",Space,Str "implementation",Space,Str "actually",Space,Str "does",Space,Str "so",Space,Str "I",Space,Str "will",Space,Str "use",Space,Str "memorisation",Space,Str "rather",Space,Str "than",Space,Str "top-down",Space,Str "dynamic",Space,Str "programming.",Space,Str "I",Space,Str "will",Space,Str "refer",Space,Str "to",Space,Str "button-up",Space,Str "dynamic",Space,Str "programming",Space,Str "as",Space,Str "dynamic",Space,Str "programming."]
,Para [Str "For",Space,Str "dynamic",Space,Str "programming",Space,Str "and",Space,Str "memorisation",Space,Str "to",Space,Str "work",Space,Str "you",Space,Str "need",Space,Str "a",Space,Str "problem",Space,Str "that",Space,Str "you",Space,Str "can",Space,Str "split",Space,Str "into",Space,Str "subproblems",Space,Str "that",Space,Str "you",Space,Str "can",Space,Str "then",Space,Str "solve",Space,Str "independently.",Space,Str "In",Space,Str "that",Space,Str "way,",Space,Str "it",Space,Str "matches",Space,Str "the",Space,Str "requirements",Space,Str "for",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithms.",Space,Str "For",Space,Str "dynamic",Space,Str "programming",Space,Str "to",Space,Str "give",Space,Str "you",Space,Str "any",Space,Str "speedup,",Space,Str "you",Space,Str "also",Space,Str "need",Space,Str "the",Space,Str "recursions",Space,Str "to",Space,Str "overlap,",Space,Str "i.e.,",Space,Str "during",Space,Str "the",Space,Str "computation,",Space,Str "your",Space,Str "algorithm",Space,Str "should",Space,Str "solve",Space,Str "the",Space,Str "same",Space,Str "instance",Space,Str "of",Space,Str "a",Space,Str "subproblem",Space,Str "multiple",Space,Str "times.",Space,Str "With",Space,Str "dynamic",Space,Str "programming",Space,Str "we",Space,Str "make",Space,Str "sure",Space,Str "to",Space,Str "only",Space,Str "solve",Space,Str "each",Space,Str "instance",Space,Str "of",Space,Str "a",Space,Str "subproblem",Space,Str "once\8212after",Space,Str "that,",Space,Str "we",Space,Str "can",Space,Str "look",Space,Str "it",Space,Str "up",Space,Str "in",Space,Str "a",Space,Str "table",Space,Str "when",Space,Str "we",Space,Str "need",Space,Str "it.",Space,Str "If",Space,Str "all",Space,Str "subproblems",Space,Str "are",Space,Str "unique,",Space,Str "then",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "gain",Space,Str "anything",Space,Str "from",Space,Str "dynamic",Space,Str "programming.",Space,Str "If",Space,Str "the",Space,Str "subproblems",Space,Str "are",Space,Str "only",Space,Str "solved",Space,Str "once",Space,Str "we",Space,Str "are",Space,Str "in",Space,Str "the",Space,Str "domain",Space,Str "of",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "(notice",Space,Str "that",Space,Str "in",Space,Str "the",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithms",Space,Str "above",Space,Str "we",Space,Str "only",Space,Str "solved",Space,Str "each",Space,Str "subproblem",Space,Str "once).",Space,Str "Frequently",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithms",Space,Str "are",Space,Str "recursive",Space,Str "problems",Space,Str "that",Space,Str "would",Space,Str "take",Space,Str "exponential",Space,Str "time",Space,Str "if",Space,Str "we",Space,Str "implemented",Space,Str "them",Space,Str "na\239vely",Space,Str "but",Space,Str "where",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "polynomial",Space,Str "solution",Space,Str "using",Space,Str "dynamic",Space,Str "programming",Space,Str "or",Space,Str "memorisation."]
,Header 3 ("engineering-a-dynamic-programming-algorithm",[],[]) [Str "Engineering",Space,Str "a",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithm"]
,Para [Str "To",Space,Str "construct",Space,Str "a",Space,Str "divide",Space,Str "and",Space,Str "conquer",Space,Str "algorithm",Space,Str "you",Space,Str "first",Space,Str "have",Space,Str "to",Space,Str "ask",Space,Str "yourself",Space,Str "if",Space,Str "one",Space,Str "is",Space,Str "even",Space,Str "possible.",Space,Str "Does",Space,Str "tabulating",Space,Str "the",Space,Str "results",Space,Str "you",Space,Str "get",Space,Str "from",Space,Str "recursive",Space,Str "calls",Space,Str "speed",Space,Str "up",Space,Str "your",Space,Str "algorithm?",Space,Str "If",Space,Str "all",Space,Str "function",Space,Str "calls",Space,Str "you",Space,Str "do",Space,Str "in",Space,Str "your",Space,Str "algorithm",Space,Str "are",Space,Str "unique,",Space,Str "i.e.,",Space,Str "you",Space,Str "never",Space,Str "call",Space,Str "a",Space,Str "function",Space,Str "with",Space,Str "the",Space,Str "same",Space,Str "arguments",Space,Str "twice,",Space,Str "then",Space,Str "tabulating",Space,Str "the",Space,Str "results",Space,Str "is",Space,Str "pointless.",Space,Str "If",Space,Str "you",Space,Str "do",Space,Str "have",Space,Str "several",Space,Str "calls",Space,Str "with",Space,Str "the",Space,Str "same",Space,Str "arguments,",Space,Str "then",Space,Str "you",Space,Str "can",Space,Str "always",Space,Str "store",Space,Str "the",Space,Str "results.",Space,Str "You",Space,Str "will",Space,Str "in",Space,Str "essence",Space,Str "trade",Space,Str "running",Space,Str "time",Space,Str "for",Space,Str "memory",Space,Str "usage.",Space,Str "You",Space,Str "cannot",Space,Str "save",Space,Str "the",Space,Str "result",Space,Str "of",Space,Str "a",Space,Str "recursive",Space,Str "call",Space,Str "more",Space,Str "often",Space,Str "than",Space,Str "you",Space,Str "make",Space,Str "the",Space,Str "call,",Space,Str "though,",Space,Str "so",Space,Str "you",Space,Str "can",Space,Str "never",Space,Str "use",Space,Str "more",Space,Str "memory",Space,Str "than",Space,Str "you",Space,Str "must",Space,Str "spend",Space,Str "on",Space,Str "time.",Space,Str "(This",Space,Str "is",Space,Str "a",Space,Str "general",Space,Str "property",Space,Str "of",Space,Str "algorithms.",Space,Str "Every",Space,Str "piece",Space,Str "of",Space,Str "memory",Space,Str "you",Space,Str "use",Space,Str "you",Space,Str "must",Space,Str "devote",Space,Str "time",Space,Str "to",Space,Str "access)."]
,Para [Str "Now,",Space,Str "it",Space,Str "is",Space,Str "worth",Space,Str "considering",Space,Str "if",Space,Str "memorisation",Space,Str "will",Space,Str "gain",Space,Str "you",Space,Str "anything",Space,Str "and",Space,Str "is",Space,Str "even",Space,Str "worthwhile.",Space,Str "If",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "times",Space,Str "you",Space,Str "call",Space,Str "the",Space,Str "same",Space,Str "function",Space,Str "with",Space,Str "the",Space,Str "same",Space,Str "parameters",Space,Str "is",Space,Str "bounded",Space,Str "by",Space,Str "a",Space,Str "constant,",Space,Str "then",Space,Str "your",Space,Str "memorisation",Space,Str "algorithm",Space,Str "will",Space,Str "still",Space,Str "be",Space,Str "in",Space,Str "the",Space,Str "same",Space,Str "asymptotic",Space,Str "class.",Space,Str "On",Space,Str "the",Space,Str "other",Space,Str "hand,",Space,Str "you",Space,Str "could",Space,Str "have",Space,Str "a",Space,Str "situation",Space,Str "similar",Space,Str "to",Space,Str "the",Space,Str "Fibonacci",Space,Str "numbers.",Space,Str "Here,",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "calls",Space,Str "you",Space,Str "need",Space,Str "as",Space,Str "you",Space,Str "move",Space,Str "from",Space,Math InlineMath "F(n)",Space,Str "down",Space,Str "to",Space,Str "the",Space,Str "base",Space,Str "cases",Space,Str "grows",Space,Str "exponentially,",Space,Str "but",Space,Str "almost",Space,Str "all",Space,Str "calls",Space,Str "are",Space,Str "identical",Space,Str "to",Space,Str "other",Space,Str "calls.",Space,Str "In",Space,Str "such",Space,Str "scenarios,",Space,Str "you",Space,Str "will",Space,Str "often",Space,Str "be",Space,Str "able",Space,Str "to",Space,Str "move",Space,Str "from",Space,Str "an",Space,Str "exponential",Space,Str "running",Space,Str "time",Space,Str "to",Space,Str "a",Space,Str "polynomial",Space,Str "time",Space,Str "algorithm",Space,Str "(and",Space,Str "therefore",Space,Str "also",Space,Str "a",Space,Str "polynomial",Space,Str "space",Space,Str "algorithm)."]
,Para [Str "If",Space,Str "you",Space,Str "now",Space,Str "have",Space,Str "a",Space,Str "memorisation",Space,Str "algorithm",Space,Str "the",Space,Str "next",Space,Str "step",Space,Str "is",Space,Str "to",Space,Str "see",Space,Str "if",Space,Str "you",Space,Str "can",Space,Str "translate",Space,Str "it",Space,Str "into",Space,Str "a",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithm.",Space,Str "In",Space,Str "the",Space,Str "memorisation",Space,Str "algorithm,",Space,Str "you",Space,Str "need",Space,Str "a",Space,Str "table",Space,Str "lookup",Space,Str "in",Space,Str "each",Space,Str "recursive",Space,Str "call",Space,Str "to",Space,Str "see",Space,Str "if",Space,Str "you",Space,Str "have",Space,Str "already",Space,Str "called",Space,Str "the",Space,Str "function",Space,Str "with",Space,Str "the",Space,Str "arguments",Space,Str "you",Space,Str "call",Space,Str "it",Space,Str "with",Space,Str "right",Space,Str "now.",Space,Str "If",Space,Str "you",Space,Str "have",Space,Str "a",Space,Str "table",Space,Str "where",Space,Str "you",Space,Str "can",Space,Str "look",Space,Str "up",Space,Str "a",Space,Str "value",Space,Str "in",Space,Str "constant",Space,Str "time,",Space,Str "then",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithms",Space,Str "will",Space,Str "never",Space,Str "be",Space,Str "asymptotically",Space,Str "faster",Space,Str "than",Space,Str "memorisation.",Space,Str "However,",Space,Str "there",Space,Str "is",Space,Str "overhead",Space,Str "in",Space,Str "table",Space,Str "lookups,",Space,Str "so",Space,Str "if",Space,Str "we",Space,Str "can",Space,Str "tabulate",Space,Str "results",Space,Str "without",Space,Str "too",Space,Str "much",Space,Str "complexity,",Space,Str "that",Space,Str "is",Space,Str "what",Space,Str "we",Space,Str "will",Space,Str "want",Space,Str "to",Space,Str "do.",Space,Str "That",Space,Str "is",Space,Str "the",Space,Str "step",Space,Str "where",Space,Str "we",Space,Str "move",Space,Str "from",Space,Str "memorisation",Space,Str "to",Space,Str "dynamic",Space,Str "programming."]
,Para [Str "You",Space,Str "would",Space,Str "use",Space,Str "dynamic",Space,Str "programming",Space,Str "instead",Space,Str "of",Space,Str "memorisation",Space,Str "if",Space,Str "1)",Space,Str "you",Space,Str "know",Space,Str "precisely",Space,Str "which",Space,Str "recursions",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "tabulate",Space,Str "and",Space,Str "2)",Space,Str "you",Space,Str "know",Space,Str "the",Space,Str "order",Space,Str "of",Space,Str "recursions",Space,Str "you",Space,Str "will",Space,Str "see",Space,Str "in",Space,Str "your",Space,Str "algorithm."]
,Para [Str "Take",Space,Str "the",Space,Str "Fibonacci",Space,Str "example",Space,Str "once",Space,Str "more.",Space,Str "We",Space,Str "can",Space,Str "use",Space,Str "dynamic",Space,Str "programming",Space,Str "because",Space,Str "we",Space,Str "know",Space,Str "that",Space,Math InlineMath "F(i-1)",Space,Str "and",Space,Math InlineMath "F(i-2)",Space,Str "will",Space,Str "be",Space,Str "called",Space,Str "by",Space,Math InlineMath "F(i)",Space,Str "for",Space,Str "all",Space,Math InlineMath "i",Str ",",Space,Str "so",Space,Str "we",Space,Str "know",Space,Str "that",Space,Str "we",Space,Str "will",Space,Str "use",Space,Str "all",Space,Math InlineMath "F(j), j=0,\\ldots,n",Space,Str "to",Space,Str "compute",Space,Math InlineMath "F(n)",Str ".",Space,Str "There",Space,Str "are",Space,Str "no",Space,Math InlineMath "F(j), j > n",Space,Str "called",Space,Str "in",Space,Str "the",Space,Str "algorithm",Space,Str "and",Space,Str "there",Space,Str "are",Space,Str "no",Space,Math InlineMath "F(i)",Space,Str "left",Space,Str "out",Space,Str "for",Space,Math InlineMath "i=0,\\ldots,n",Str ".",Space,Str "If",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "know",Space,Str "which",Space,Str "calls",Space,Str "will",Space,Str "be",Space,Str "made,",Space,Str "then",Space,Str "we",Space,Str "might",Space,Str "build",Space,Str "too",Space,Str "large",Space,Str "a",Space,Str "table.",Space,Str "With",Space,Str "memorisation,",Space,Str "you",Space,Str "store",Space,Str "exactly",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "recursive",Space,Str "calls",Space,Str "your",Space,Str "program",Space,Str "makes.",Space,Str "It",Space,Str "is",Space,Str "an",Space,Str "optimal",Space,Str "strategy",Space,Str "for",Space,Str "tabulating",Space,Str "the",Space,Str "necessary",Space,Str "results.",Space,Str "With",Space,Str "dynamic",Space,Str "programming,",Space,Str "you",Space,Str "can",Space,Str "only",Space,Str "get",Space,Str "this",Space,Str "if",Space,Str "you",Space,Str "know",Space,Str "which",Space,Str "calls",Space,Str "will",Space,Str "be",Space,Str "made",Space,Str "and",Space,Str "which",Space,Str "will",Space,Str "not."]
,Para [Str "The",Space,Str "reason",Space,Str "that",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "know",Space,Str "the",Space,Str "order",Space,Str "in",Space,Str "which",Space,Str "the",Space,Str "results",Space,Str "of",Space,Str "recursions",Space,Str "are",Space,Str "required",Space,Str "is",Space,Str "that",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "tabulate",Space,Str "the",Space,Str "results",Space,Str "of",Space,Str "all",Space,Str "recursions",Space,Str "before",Space,Str "they",Space,Str "are",Space,Str "made.",Space,Str "If",Space,Str "you",Space,Str "do",Space,Str "not",Space,Str "do",Space,Str "this",Space,Str "correctly,",Space,Str "then",Space,Str "your",Space,Str "algorithm",Space,Str "will",Space,Str "look",Space,Str "up",Space,Str "a",Space,Str "value",Space,Str "in",Space,Str "a",Space,Str "table",Space,Str "that",Space,Str "hasn\8217t",Space,Str "been",Space,Str "stored",Space,Str "there",Space,Str "yet.",Space,Str "That",Space,Str "rarely",Space,Str "goes",Space,Str "well.",Space,Str "If",Space,Str "you",Space,Str "have",Space,Str "to",Space,Str "check",Space,Str "if",Space,Str "a",Space,Str "result",Space,Str "is",Space,Str "in",Space,Str "the",Space,Str "table,",Space,Str "then",Space,Str "you",Space,Str "have",Space,Str "simply",Space,Str "taken",Space,Str "the",Space,Str "long",Space,Str "way",Space,Str "around",Space,Str "to",Space,Str "memorisation."]
,Para [Str "Now,",Space,Str "if",Space,Str "you",Space,Str "have",Space,Str "made",Space,Str "it",Space,Str "to",Space,Str "a",Space,Str "full-fledged",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithm,",Space,Str "you",Space,Str "can",Space,Str "potentially",Space,Str "reduce",Space,Str "the",Space,Str "memory",Space,Str "further",Space,Str "by",Space,Str "once",Space,Str "again",Space,Str "examining",Space,Str "the",Space,Str "dependency",Space,Str "graph",Space,Str "of",Space,Str "recursive",Space,Str "calls.",Space,Str "In",Space,Str "the",Space,Str "Fibonacci",Space,Str "example,",Space,Str "we",Space,Str "know",Space,Str "that",Space,Str "to",Space,Str "compute",Space,Math InlineMath "F(i)",Space,Str "we",Space,Str "only",Space,Str "need",Space,Str "to",Space,Str "know",Space,Math InlineMath "F(i-1)",Space,Str "and",Space,Math InlineMath "F(i-2)",Str ".",Space,Str "This",Space,Str "means",Space,Str "that",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "need",Space,Str "to",Space,Str "remember",Space,Math InlineMath "F(j)",Space,Str "for",Space,Math InlineMath "j < i - 2",Str ";",Space,Str "we",Space,Str "have",Space,Str "already",Space,Str "used",Space,Str "them",Space,Str "to",Space,Str "compute",Space,Math InlineMath "F(i-1)",Space,Str "and",Space,Math InlineMath "F(i-2)",Str ",",Space,Str "but",Space,Str "we",Space,Str "no",Space,Str "longer",Space,Str "need",Space,Str "them.",Space,Str "The",Space,Str "final",Space,Str "algorithm",Space,Str "that",Space,Str "we",Space,Str "derived",Space,Str "above",Space,Str "remembers",Space,Str "two",Space,Str "values",Space,Str "in",Space,Str "each",Space,Str "iteration,",Space,Str "and",Space,Str "it",Space,Str "does",Space,Str "so",Space,Str "because",Space,Str "we",Space,Str "can",Space,Str "work",Space,Str "out",Space,Str "from",Space,Str "the",Space,Str "recursion",Space,Str "dependency",Space,Str "graph",Space,Str "that",Space,Str "this",Space,Str "is",Space,Str "all",Space,Str "we",Space,Str "need."]
,Header 3 ("edit-distance",[],[]) [Str "Edit",Space,Str "distance"]
,Para [Str "The",Space,Emph [Str "edit",Space,Str "distance"],Space,Str "between",Space,Str "two",Space,Str "strings,",Space,Math InlineMath "x",Space,Str "and",Space,Math InlineMath "y",Str ",",Space,Str "is",Space,Str "the",Space,Str "minimal",Space,Str "number",Space,Str "of",Space,Str "operations",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "transform",Space,Math InlineMath "x",Space,Str "into",Space,Math InlineMath "y",Str ",",Space,Str "where",Space,Str "operations",Space,Str "are"]
,OrderedList (1,Decimal,Period)
 [[Plain [Str "Replace",Space,Str "one",Space,Str "character",Space,Str "with",Space,Str "another."]]
 ,[Plain [Str "Delete",Space,Str "a",Space,Str "character",Space,Str "from",Space,Math InlineMath "x",Str "."]]
 ,[Plain [Str "Insert",Space,Str "a",Space,Str "character",Space,Str "into",Space,Math InlineMath "x",Str "."]]]
,Header 4 ("recursion",[],[]) [Str "Recursion"]
,Para [Str "If",Space,Str "we",Space,Str "consider",Space,Str "the",Space,Str "minimal",Space,Str "number",Space,Str "of",Space,Str "edits",Space,Str "to",Space,Str "go",Space,Str "from",Space,Str "a",Space,Str "prefix",Space,Str "of",Space,Math InlineMath "x",Str ",",Space,Math InlineMath "x[:i]",Str ",",Space,Str "to",Space,Str "a",Space,Str "prefix",Space,Str "of",Space,Math InlineMath "y",Str ",",Space,Math InlineMath "y[:j]",Str "."]
,Para [Str "A",Space,Str "recursive",Space,Str "function",Space,Str "looks",Space,Str "like",Space,Str "this:"]
,Para [Math DisplayMath "\nd(i,j) = \\min\\begin{cases}\nd(i-1,j-1) + \\mathbf{1}(x[i-1]\\neq y[j-1]) & \\mathrm{match/substitution} \\\\\nd(i,j-1) + 1 & \\mathrm{deletion} \\\\\nd(i-1,j) + 1 & \\mathrm{insertion}\n\\end{cases}\n"]
,Para [Str "The",Space,Str "function",Space,Math InlineMath "\\mathbf{1}(x[i-1]\\neq y[j-1])",Space,Str "is",Space,Str "1",Space,Str "if",Space,Math InlineMath "x[i-1]\\neq y[j-1]",Space,Str "and",Space,Str "zero",Space,Str "if",Space,Str "$x[i-1]",Space,Str "=",Space,Str "y[j-1]",Space,Str "$.",Space,Str "The",Space,Str "base",Space,Str "cases",Space,Str "for",Space,Str "the",Space,Str "recursion",Space,Str "are",Space,Math InlineMath "d(0,j) = j",Space,Str "and",Space,Math InlineMath "d(i,0)=i",Str ".",Space,Str "The",Space,Str "edit",Space,Str "distance",Space,Str "between",Space,Math InlineMath "x",Space,Str "and",Space,Math InlineMath "y",Space,Str "is",Space,Math InlineMath "d(n,m)",Space,Str "where",Space,Math InlineMath "n",Space,Str "is",Space,Str "the",Space,Str "length",Space,Str "of",Space,Math InlineMath "x",Space,Str "and",Space,Math InlineMath "m",Space,Str "is",Space,Str "the",Space,Str "length",Space,Str "of",Space,Math InlineMath "y",Str "."]
,Para [Str "Notice",Space,Str "that",Space,Str "we",Space,Str "find",Space,Str "the",Space,Str "final",Space,Str "result",Space,Str "in",Space,Math InlineMath "d(n,m)",Str ".",Space,Str "This",Space,Str "means",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "indices",Space,Str "from",Space,Str "zero",Space,Str "to",Space,Math InlineMath "n",Space,Str "and",Space,Math InlineMath "m",Space,Str "where",Space,Str "we",Space,Str "usually",Space,Str "would",Space,Str "not",Space,Str "include",Space,Str "the",Space,Str "last",Space,Str "two.",Space,Str "If",Space,Str "you",Space,Str "work",Space,Str "out",Space,Str "an",Space,Str "example,",Space,Str "you",Space,Str "will",Space,Str "notice",Space,Str "that",Space,Math InlineMath "i=0",Space,Str "and",Space,Math InlineMath "j=0",Space,Str "represent",Space,Str "prefixes",Space,Str "matched",Space,Str "against",Space,Str "the",Space,Str "empty",Space,Str "prefix",Space,Str "of",Space,Math InlineMath "x",Space,Str "or",Space,Math InlineMath "y",Str ",",Space,Str "respectively.",Space,Str "To",Space,Str "match",Space,Str "the",Space,Str "first",Space,Str "character",Space,Str "in",Space,Str "either",Space,Str "string,",Space,Str "we",Space,Str "move",Space,Str "into",Space,Str "row",Space,Str "one",Space,Str "or",Space,Str "column",Space,Str "one.",Space,Str "So",Space,Str "the",Space,Str "pair",Space,Math InlineMath "(i,j)",Space,Str "is",Space,Str "the",Space,Str "match",Space,Str "of",Space,Math InlineMath "x[:i]",Space,Str "and",Space,Math InlineMath "y[:j]",Str ".",Space,Str "That",Space,Str "is",Space,Str "why",Space,Str "we",Space,Str "want",Space,Str "the",Space,Str "value",Space,Str "at",Space,Math InlineMath "d(n,m)",Str "."]
,Para [Str "Once",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "recursion,",Space,Str "implementing",Space,Str "it",Space,Str "as",Space,Str "a",Space,Str "recursive",Space,Str "Python",Space,Str "function",Space,Str "is",Space,Str "straightforward:"]
,CodeBlock ("",["python"],[]) "def edit_dist(x, y, i = None, j = None):\n    if i is None: i = len(x)\n    if j is None: j = len(y)\n    if i == 0: return j\n    if j == 0: return i\n    return min(\n        edit_dist(x, y, i - 1, j - 1) + int(x[i - 1] != y[j - 1]),\n        edit_dist(x, y, i, j - 1) + 1,\n        edit_dist(x, y, i - 1, j) + 1,\n    )"
,Para [Str "In",Space,Str "this",Space,Str "function,",Space,Str "I",Space,Str "have",Space,Str "included",Space,Str "the",Space,Str "strings",Space,Math InlineMath "x",Space,Str "and",Space,Math InlineMath "y",Space,Str "as",Space,Str "parameters.",Space,Str "The",Space,Str "function",Space,Str "needs",Space,Str "them",Space,Str "to",Space,Str "check",Space,Str "if",Space,Math InlineMath "x[i-1]\\neq y[j-1]",Str ".",Space,Str "Unless",Space,Str "the",Space,Str "strings",Space,Str "are",Space,Str "global",Space,Str "variables,",Space,Str "the",Space,Str "function",Space,Str "needs",Space,Str "them",Space,Str "as",Space,Str "parameters.",Space,Str "The",Space,Str "indices,",Space,Math InlineMath "i",Space,Str "and",Space,Math InlineMath "j",Str ",",Space,Str "need",Space,Str "to",Space,Str "be",Space,Str "parameters",Space,Str "in",Space,Str "the",Space,Str "recursion",Space,Str "but",Space,Str "we",Space,Str "will",Space,Str "always",Space,Str "use",Space,Str "the",Space,Str "length",Space,Str "of",Space,Str "the",Space,Str "two",Space,Str "strings.",Space,Str "You",Space,Str "could",Space,Str "always",Space,Str "call",Space,Str "the",Space,Str "function",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "edit_dist(x,y,len(x),len(y))"
,Para [Str "However,",Space,Str "the",Space,Str "redundancy",Space,Str "in",Space,Str "the",Space,Str "initial",Space,Str "call",Space,Str "is",Space,Str "best",Space,Str "avoided,",Space,Str "and",Space,Str "that",Space,Str "is",Space,Str "what",Space,Str "the",Space,Code ("",[],[]) "None",Space,Str "default",Space,Str "parameters",Space,Str "do."]
,Header 4 ("memorisation",[],[]) [Str "Memorisation"]
,Para [Str "Until",Space,Str "you",Space,Str "hit",Space,Str "a",Space,Str "base",Space,Str "case",Space,Str "in",Space,Str "the",Space,Str "recursion,",Space,Str "you",Space,Str "have",Space,Str "three",Space,Str "directions",Space,Str "to",Space,Str "go",Space,Str "in",Space,Str "for",Space,Str "each",Space,Math InlineMath "(i,j)",Space,Str "so",Space,Str "calculating",Space,Str "the",Space,Str "recursion",Space,Str "as",Space,Str "it",Space,Str "stands",Space,Str "gives",Space,Str "you",Space,Str "an",Space,Str "exponential",Space,Str "running",Space,Str "time.",Space,Str "With",Space,Str "memorisation,",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "is",Space,Math InlineMath "O(nm)",Str ".",Space,Str "To",Space,Str "see",Space,Str "this,",Space,Str "observe",Space,Str "that",Space,Str "to",Space,Str "compute",Space,Math InlineMath "d(n,n)",Space,Str "we",Space,Str "never",Space,Str "need",Space,Str "to",Space,Str "compute",Space,Str "a",Space,Str "value",Space,Math InlineMath "d(i,j)",Space,Str "where",Space,Math InlineMath "i>n",Space,Str "or",Space,Math InlineMath "j>m",Space,Str "and",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "base",Space,Str "case",Space,Str "whenever",Space,Str "either",Space,Math InlineMath "i=0",Space,Str "or",Space,Math InlineMath "j=0",Str ".",Space,Str "There",Space,Str "are",Space,Math InlineMath "O(nm)",Space,Str "such",Space,Str "pairs",Space,Math InlineMath "(i,j)",Str "."]
,Para [Str "Implementing",Space,Str "the",Space,Str "memorisation",Space,Str "solution",Space,Str "is",Space,Str "straightforward.",Space,Str "Generally,",Space,Str "once",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "recursion,",Space,Str "and",Space,Str "have",Space,Str "convinced",Space,Str "ourselves",Space,Str "that",Space,Str "there",Space,Str "are",Space,Str "sufficient",Space,Str "identical",Space,Str "recursive",Space,Str "calls",Space,Str "to",Space,Str "save",Space,Str "results,",Space,Str "we",Space,Str "simply",Space,Str "add",Space,Str "a",Space,Str "table",Space,Str "to",Space,Str "the",Space,Str "recursive",Space,Str "function."]
,CodeBlock ("",["python"],[]) "def edit_dist(x, y, i = None, j = None, tbl = None):\n    if i is None:   i = len(x)\n    if j is None:   j = len(y)\n    if tbl is None: tbl = {}\n        \n    if i == 0:\n        tbl[(i,j)] = j\n    elif j == 0:\n        tbl[(i,j)] = i\n    else:\n        tbl[(i,j)] = min(\n            edit_dist(x, y, i - 1, j - 1, tbl) + \n                         int(x[i - 1] != y[j - 1]),\n            edit_dist(x, y, i, j - 1, tbl) + 1,\n            edit_dist(x, y, i - 1, j, tbl) + 1,\n        )\n    return tbl[(i,j)]"
,Header 4 ("dynamic-programming-1",[],[]) [Str "Dynamic",Space,Str "programming"]
,Para [Str "To",Space,Str "move",Space,Str "from",Space,Str "memorisation",Space,Str "to",Space,Str "dynamic",Space,Str "programming",Space,Str "first",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "introduce",Space,Str "an",Space,Math InlineMath "(n+1)\\times(m+1)",Space,Str "table",Math InlineMath "D",Space,Str "to",Space,Str "hold",Space,Str "all",Space,Math InlineMath "d(i,j)",Space,Str "values."]
,Para [Str "Second,",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "figure",Space,Str "out",Space,Str "in",Space,Str "which",Space,Str "order",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "fill",Space,Str "the",Space,Str "table.",Space,Str "From",Space,Str "the",Space,Str "recursion,",Space,Str "we",Space,Str "can",Space,Str "see",Space,Str "that",Space,Str "we",Space,Str "loop",Space,Str "at",Space,Str "one",Space,Str "row",Space,Str "above",Space,Str "and",Space,Str "one",Space,Str "column",Space,Str "to",Space,Str "the",Space,Str "left",Space,Str "in",Space,Str "the",Space,Str "recursion.",Space,Str "So,",Space,Str "if",Space,Str "we",Space,Str "fill",Space,Str "out",Space,Str "the",Space,Str "table",Space,Str "left-to-right",Space,Str "and",Space,Str "row-by-row,",Space,Str "then",Space,Str "the",Space,Str "algorithm",Space,Str "with",Space,Str "work.",Space,Str "We",Space,Str "can",Space,Str "also",Space,Str "fill",Space,Str "the",Space,Str "table",Space,Str "column-by-column",Space,Str "and",Space,Str "up-to-down."]
,Para [Str "To",Space,Str "build",Space,Str "a",Space,Str "two-dimensional",Space,Str "table",Space,Str "in",Space,Str "Python",Space,Str "you",Space,Emph [Str "can"],Space,Str "use",Space,Str "lists,",Space,Str "but",Space,Str "the",Space,Str "straightforward",Space,Str "way"]
,CodeBlock ("",["python"],[]) "\nD = [ [0] * m ] * n"
,Para [Str "does",Space,Str "not",Space,Str "do",Space,Str "this.",Space,Str "It",Space,Str "builds",Space,Str "the",Space,Str "inner",Space,Str "list",Space,Code ("",[],[]) "[0] * m",Space,Str "first",Space,Str "and",Space,Str "then",Space,Str "it",Space,Str "makes",Space,Str "a",Space,Str "list",Space,Str "with",Space,Code ("",[],[]) "n",Space,Str "references",Space,Str "to",Space,Str "it.",Space,Str "Any",Space,Str "change",Space,Str "to",Space,Str "one",Space,Str "row",Space,Str "will",Space,Str "change",Space,Str "all",Space,Str "the",Space,Str "rows.",Space,Str "You",Space,Str "can",Space,Str "fix",Space,Str "this,",Space,Str "but",Space,Str "in",Space,Str "general,",Space,Str "when",Space,Str "you",Space,Str "need",Space,Str "a",Space,Str "table,",Space,Str "you",Space,Str "are",Space,Str "better",Space,Str "off",Space,Str "by",Space,Str "using",Space,Str "the",Space,Code ("",[],[]) "Numpy",Space,Str "package.",Space,Str "By",Space,Str "convention",Space,Str "you",Space,Str "import",Space,Str "it",Space,Str "and",Space,Str "give",Space,Str "it",Space,Str "the",Space,Str "name",Space,Code ("",[],[]) "np",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "import Numpy as np"
,Para [Str "You",Space,Str "can",Space,Str "build",Space,Str "tables",Space,Str "or",Space,Str "any",Space,Str "number",Space,Str "of",Space,Str "dimensions.",Space,Str "For",Space,Str "a",Space,Str "two",Space,Str "dimensional",Space,Str "table,",Space,Str "with",Space,Math InlineMath "n + 1",Space,Str "rows",Space,Str "and",Space,Math InlineMath "m + 1",Space,Str "columns,",Space,Str "initialised",Space,Str "as",Space,Str "all",Space,Str "zeros,",Space,Str "you",Space,Str "can",Space,Str "use"]
,CodeBlock ("",["python"],[]) "np.zeros((n + 1, m + 1))"
,Para [Str "Back",Space,Str "to",Space,Str "the",Space,Str "edit",Space,Str "distance",Space,Str "and",Space,Str "dynamic",Space,Str "programming.",Space,Str "My",Space,Str "implementation",Space,Str "of",Space,Str "the",Space,Str "dynamic",Space,Str "programming",Space,Str "version",Space,Str "of",Space,Str "the",Space,Str "edit",Space,Str "distance",Space,Str "looks",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python"],[]) "def build_edit_table(x, y):\n    n, m = len(x), len(y)\n    D = np.zeros((n + 1, m + 1))\n\n    # base cases\n    for i in range(n + 1):\n        D[i,0] = i\n    for j in range(m + 1):\n        D[0,j] = j\n\n    # recursion\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            D[i,j] = min(\n                D[i - 1, j - 1] + int(x[i - 1] != y[j - 1]),\n                D[i, j - 1] + 1,\n                D[i - 1, j] + 1\n            )\n\n    return D\n\ndef edit_dist(x, y):\n    D = build_edit_table(x, y)\n    n, m = len(x), len(y)\n    return D[n,m]"
,Para [Strong [Str "Exercise:"],Space,Str "Since",Space,Str "we",Space,Str "only",Space,Str "need",Space,Str "to",Space,Str "look",Space,Str "one",Space,Str "row",Space,Str "up",Space,Str "and",Space,Str "one",Space,Str "column",Space,Str "left",Space,Str "we",Space,Str "can",Space,Str "reduce",Space,Str "the",Space,Str "memory",Space,Str "usage",Space,Str "to",Space,Math InlineMath "O(n)",Space,Str "or",Space,Math InlineMath "O(m)",Space,Str "depending",Space,Str "on",Space,Str "whether",Space,Str "we",Space,Str "remember",Space,Str "two",Space,Str "row",Space,Str "or",Space,Str "two",Space,Str "columns.",Space,Str "Show",Space,Str "how",Space,Str "to",Space,Str "do",Space,Str "this."]
,Header 4 ("backtracking",[],[]) [Str "Backtracking"]
,Para [Str "For",Space,Str "backtracking",Space,Str "we",Space,Str "need,",Space,Str "for",Space,Str "each",Space,Str "cell",Space,Str "in",Space,Str "the",Space,Str "table,",Space,Str "to",Space,Str "figure",Space,Str "out",Space,Str "which",Space,Str "of",Space,Str "the",Space,Str "(up",Space,Str "to)",Space,Str "three",Space,Str "cells",Space,Str "we",Space,Str "got",Space,Str "the",Space,Str "optimal",Space,Str "path",Space,Str "from.",Space,Str "We",Space,Str "check",Space,Str "the",Space,Str "three",Space,Str "cells",Space,Str "in",Space,Str "the",Space,Str "recursion\8212up,",Space,Str "diagonal,",Space,Str "or",Space,Str "left\8212for",Space,Str "the",Space,Str "value",Space,Str "they",Space,Str "contributed,",Space,Str "remember",Space,Str "what",Space,Str "the",Space,Str "step",Space,Str "was,",Space,Str "and",Space,Str "then",Space,Str "continue",Space,Str "from",Space,Str "the",Space,Str "cell",Space,Str "we",Space,Str "found",Space,Str "to",Space,Str "be",Space,Str "where",Space,Str "our",Space,Str "path",Space,Str "came",Space,Str "from.",Space,Str "My",Space,Str "implementation",Space,Str "looks",Space,Str "like",Space,Str "this:"]
,CodeBlock ("",["python","numberLines"],[]) "def backtrack_(D, x, y, i, j, path):\n    if i == 0:\n        path.extend('D' * j)\n        return\n    if j == 0:\n        path.extend('I' * i)\n        return\n\n    left = D[i, j - 1] + 1\n    diag = D[i - 1, j - 1] + int(x[i - 1] != y[j - 1])\n    up = D[i - 1, j] + 1\n\n    dist = left\n    op = 'D'\n    if diag < dist:\n        op = 'X' if x[i - 1] != y[j - 1] else '='\n        dist = diag\n    if up < dist:\n        op = 'I'\n\n    path.append(op)\n    if op == 'D':\n        backtrack_(D, x, y, i, j - 1, path)\n    if op in ('=','X'):\n        backtrack_(D, x, y, i - 1, j - 1, path)\n    if op == 'I':\n        backtrack_(D, x, y, i - 1, j, path)"
,Para [Str "Lines",Space,Str "2",Space,Str "to",Space,Str "7",Space,Str "handles",Space,Str "the",Space,Str "base",Space,Str "cases",Space,Str "where",Space,Str "either",Space,Math InlineMath "i",Space,Str "or",Space,Math InlineMath "j",Space,Str "are",Space,Str "zero.",Space,Str "Then,",Space,Str "on",Space,Str "lines",Space,Str "9",Space,Str "to",Space,Str "11,",Space,Str "we",Space,Str "compute",Space,Str "the",Space,Str "values",Space,Str "in",Space,Str "the",Space,Str "value",Space,Str "we",Space,Str "got",Space,Str "from",Space,Str "the",Space,Str "three",Space,Str "cells",Space,Str "our",Space,Str "own",Space,Str "value",Space,Str "could",Space,Str "have",Space,Str "come",Space,Str "from.",Space,Str "We",Space,Str "figure",Space,Str "out",Space,Str "which",Space,Str "operation",Space,Str "gave",Space,Str "us",Space,Str "the",Space,Str "value",Space,Str "in",Space,Str "the",Space,Math InlineMath "(i, j)",Space,Str "cell,",Space,Str "lines",Space,Str "13",Space,Str "to",Space,Str "19.",Space,Str "I",Space,Str "have",Space,Str "chosen",Space,Str "to",Space,Str "encode",Space,Str "insertion",Space,Str "as",Space,Code ("",[],[]) "I",Str ",",Space,Str "matches",Space,Str "as",Space,Code ("",[],[]) "=",Str ",",Space,Str "substitutions",Space,Str "as",Space,Code ("",[],[]) "X",Space,Str "and",Space,Str "deletions",Space,Str "as",Space,Code ("",[],[]) "D",Str "."]
,Para [Str "We",Space,Str "add",Space,Str "the",Space,Str "step",Space,Str "that",Space,Str "let",Space,Str "to",Space,Str "this",Space,Str "cell",Space,Str "to",Space,Str "the",Space,Str "path",Space,Str "in",Space,Str "21.",Space,Str "Finally,",Space,Str "we",Space,Str "call",Space,Str "the",Space,Str "function",Space,Str "recursive",Space,Str "accordingly,",Space,Str "lines",Space,Str "22",Space,Str "to",Space,Str "27.",Space,Str "The",Space,Str "path",Space,Str "is",Space,Str "built",Space,Str "in",Space,Str "reverse",Space,Str "order,",Space,Str "i.e.,",Space,Str "it",Space,Str "records",Space,Str "the",Space,Str "steps",Space,Str "used",Space,Str "to",Space,Str "calculate",Space,Str "the",Space,Str "dynamic",Space,Str "programming",Space,Str "table",Space,Str "from",Space,Str "the",Space,Str "lower",Space,Str "right",Space,Str "and",Space,Str "up",Space,Str "to",Space,Str "the",Space,Str "upper",Space,Str "left.",Space,Str "If",Space,Str "you",Space,Str "reverse",Space,Str "it,",Space,Str "you",Space,Str "get",Space,Str "the",Space,Str "path",Space,Str "in",Space,Str "the",Space,Str "opposite",Space,Str "direction."]
,Para [Str "The",Space,Str "function",Space,Str "above",Space,Str "was",Space,Str "just",Space,Str "the",Space,Str "recursive",Space,Str "backtracking.",Space,Str "To",Space,Str "give",Space,Str "backtracking",Space,Str "a",Space,Str "better",Space,Str "interface",Space,Str "I",Space,Str "call",Space,Str "it",Space,Str "form",Space,Str "this",Space,Str "function:"]
,CodeBlock ("",["python"],[]) "def backtrack(D, x, y):\n    n, m = len(x), len(y)\n    path = []\n    backtrack_(D, x, y, n, m, path)\n    path.reverse()\n    return ''.join(path)"
,Para [Str "It",Space,Str "sets",Space,Code ("",[],[]) "n",Space,Str "and",Space,Code ("",[],[]) "m",Space,Str "to",Space,Str "the",Space,Str "lengths",Space,Str "of",Space,Str "the",Space,Str "strings.",Space,Str "These",Space,Str "are",Space,Str "the",Space,Str "indices,",Space,Str "from",Space,Str "which",Space,Str "we",Space,Str "must",Space,Str "start",Space,Str "the",Space,Str "recursion",Space,Str "and",Space,Str "the",Space,Code ("",[],[]) "path",Str ".",Space,Str "We",Space,Str "call",Space,Code ("",[],[]) "backtrack_",Space,Str "to",Space,Str "compute",Space,Str "the",Space,Str "path.",Space,Str "Then,",Space,Str "because",Space,Str "we",Space,Str "get",Space,Str "the",Space,Str "steps",Space,Str "in",Space,Str "the",Space,Str "wrong",Space,Str "order,",Space,Str "it",Space,Str "reverses",Space,Str "the",Space,Str "list,",Space,Str "and",Space,Str "finally,",Space,Str "it",Space,Str "transforms",Space,Str "the",Space,Str "list",Space,Str "into",Space,Str "a",Space,Str "string\8212just",Space,Str "to",Space,Str "make",Space,Str "the",Space,Str "result",Space,Str "easier",Space,Str "to",Space,Str "read."]
,Para [Strong [Str "Exercise:"],Space,Str "Describe",Space,Str "how",Space,Str "you",Space,Str "would",Space,Str "use",Space,Str "the",Space,Str "table",Space,Str "from",Space,Str "the",Space,Str "memorisation",Space,Str "table",Space,Str "to",Space,Str "implement",Space,Str "backtracking."]
,Para [Strong [Str "Exercise:"],Space,Str "Can",Space,Str "you",Space,Str "also",Space,Str "backtrack",Space,Str "if",Space,Str "you",Space,Str "reduce",Space,Str "space",Space,Str "usage",Space,Str "to",Space,Math InlineMath "O(n)",Space,Str "by",Space,Str "only",Space,Str "looking",Space,Str "at",Space,Str "two",Space,Str "rows",Space,Str "at",Space,Str "a",Space,Str "time?"]
,Header 3 ("partitioning",[],[]) [Str "Partitioning"]
,Para [Str "Consider",Space,Str "this",Space,Str "problem:",Space,Str "You",Space,Str "have",Space,Str "to",Space,Str "analyse",Space,Str "some",Space,Str "sequence",Space,Str "of",Space,Str "data,",Space,Str "and",Space,Str "you",Space,Str "can",Space,Str "parallelise",Space,Str "the",Space,Str "computation",Space,Str "such",Space,Str "that",Space,Str "it",Space,Str "can",Space,Str "run",Space,Str "on",Space,Str "multiple",Space,Str "CPUs.",Space,Str "The",Space,Str "computations",Space,Str "will",Space,Str "be",Space,Str "faster",Space,Str "on",Space,Str "contiguous",Space,Str "substrings.",Space,Str "You",Space,Str "want",Space,Str "to",Space,Str "make",Space,Str "the",Space,Str "slowest",Space,Str "computation",Space,Str "as",Space,Str "swift",Space,Str "as",Space,Str "possible.",Space,Str "This",Space,Str "problem",Space,Str "is",Space,Str "called",Space,Str "the",Space,Emph [Str "partitioning",Space,Str "problem"],Space,Str "and",Space,Str "it",Space,Str "takes",Space,Str "as",Space,Str "input",Space,Str "a",Space,Str "list,",Space,Math InlineMath "x",Str ",",Space,Str "of",Space,Str "length",Space,Math InlineMath "N",Str ",",Space,Str "and",Space,Str "you",Space,Str "have",Space,Str "to",Space,Str "partition",Space,Str "it",Space,Str "into",Space,Math InlineMath "K",Space,Str "contiguous",Space,Str "parts",Space,Str "such",Space,Str "that",Space,Str "the",Space,Str "biggest",Space,Str "part",Space,Str "is",Space,Str "as",Space,Str "small",Space,Str "as",Space,Str "possible.",Space,Str "A",Space,Str "part",Space,Str "is",Space,Str "a",Space,Str "contiguous",Space,Str "block,",Space,Str "so",Space,Str "the",Space,Str "elements",Space,Str "of",Space,Math InlineMath "x",Space,Str "from",Space,Str "some",Space,Str "index",Space,Math InlineMath "i",Space,Str "to",Space,Str "another",Space,Math InlineMath "j \\geq i",Str ".",Space,Str "The",Space,Str "cost",Space,Str "of",Space,Str "the",Space,Str "block",Space,Str "is",Space,Str "the",Space,Str "sum",Space,Str "of",Space,Str "the",Space,Str "elements"]
,Para [Math DisplayMath "S(i,j) = \\sum_{m=i}^{j-1} x[m]"]
,Para [Str "If",Space,Math InlineMath "x",Space,Str "is",Space,Str "held",Space,Str "in",Space,Str "a",Space,Str "global",Space,Str "variable,",Space,Code ("",[],[]) "x",Str ",",Space,Str "then",Space,Str "this",Space,Str "function",Space,Str "will",Space,Str "compute",Space,Math InlineMath "S(i,j)",Str ":"]
,CodeBlock ("",["python"],[]) "def S(i, j):\n    return sum(x[m] for m in range(i, j))"
,Para [Str "Computing",Space,Math InlineMath "S(i,j)",Space,Str "as",Space,Str "a",Space,Str "sum",Space,Str "takes",Space,Str "time",Space,Math InlineMath "O(j-i)",Space,Str "but",Space,Str "we",Space,Str "can",Space,Str "bring",Space,Str "it",Space,Str "down",Space,Str "constant",Space,Str "time.",Space,Str "If",Space,Str "we",Space,Str "preprocess",Space,Str "our",Space,Str "data",Space,Str "by",Space,Str "computing",Space,Str "the",Space,Str "cumulative",Space,Str "sum"]
,Para [Math DisplayMath "\\mathrm{CS}[i]=\\sum_{j=0}^{i-1}x[j]"]
,Para [Str "then",Space,Str "we",Space,Str "can",Space,Str "compute",Space,Math InlineMath "S(i,j)=\\mathrm{CS}[j]-\\mathrm{CS}[i]",Str "."]
,Para [Strong [Str "Exercise:"],Space,Str "Show",Space,Str "that",Space,Str "you",Space,Str "can",Space,Str "compute",Space,Str "the",Space,Math InlineMath "\\mathrm{CS}",Space,Str "array",Space,Str "in",Space,Str "linear",Space,Str "time",Space,Str "and",Space,Str "explain",Space,Str "why",Space,Str "the",Space,Str "code",Space,Str "below",Space,Str "does",Space,Str "that."]
,CodeBlock ("",["python"],[]) "import numpy as np\nCS = np.zeros(N+1)\nCS[1:] = np.cumsum(x)"
,Para [Str "Back",Space,Str "to",Space,Str "the",Space,Str "partitioning",Space,Str "problem.",Space,Str "The",Space,Str "cost",Space,Str "of",Space,Str "a",Space,Str "given",Space,Str "partitioning",Space,Str "is",Space,Str "the",Space,Str "sum",Space,Str "of",Space,Str "the",Space,Str "elements",Space,Str "in",Space,Str "the",Space,Str "largest",Space,Str "part.",Space,Str "We",Space,Str "are",Space,Str "looking",Space,Str "for",Space,Str "the",Space,Str "partitioning",Space,Str "with",Space,Str "the",Space,Str "smallest",Space,Str "cost,",Space,Str "i.e.\160the",Space,Str "partitioning",Space,Str "where",Space,Str "the",Space,Str "largest",Space,Str "cost",Space,Str "part",Space,Str "is",Space,Str "as",Space,Str "small",Space,Str "as",Space,Str "possible.",Space,Str "For",Space,Str "example,",Space,Str "if",Space,Code ("",[],[]) "x",Space,Str "is",Space,Str "the",Space,Str "list"]
,CodeBlock ("",["python"],[]) "x = [2, 5, 3, 7, 5]"
,Para [Str "we",Space,Str "can",Space,Str "split",Space,Str "it",Space,Str "into",Space,Str "two",Space,Str "partitions",Space,Str "in",Space,Str "the",Space,Str "following",Space,Str "ways:"]
,CodeBlock ("",["python"],[]) "[] [2, 5, 3, 7, 5]\n[2] [5, 3, 7, 5]\n[2, 5] [3, 7, 5]\n[2, 5, 3] [7, 5]\n[2, 5, 3, 7] [5]\n[2, 5, 3, 7, 5] []"
,Para [Str "The",Space,Str "cost",Space,Str "of",Space,Str "the",Space,Str "first",Space,Str "partition",Space,Str "is",Space,Str "22,",Space,Str "the",Space,Str "second",Space,Str "20,",Space,Str "the",Space,Str "third",Space,Str "15,",Space,Str "the",Space,Str "fourth",Space,Str "12,",Space,Str "the",Space,Str "fifth",Space,Str "17,",Space,Str "and",Space,Str "the",Space,Str "sixth",Space,Str "22.",Space,Str "The",Space,Str "best",Space,Str "of",Space,Str "these",Space,Str "is",Space,Str "the",Space,Str "fourth",Space,Str "index",Space,Str "with",Space,Str "score",Space,Str "12."]
,Para [Str "If",Space,Math InlineMath "x",Space,Str "has",Space,Str "length",Space,Math InlineMath "n",Space,Str "then",Space,Str "there",Space,Str "are",Space,Math InlineMath "n+1",Space,Str "ways",Space,Str "to",Space,Str "partition",Space,Str "it",Space,Str "into",Space,Str "two",Space,Str "(and",Space,Math InlineMath "n-1",Space,Str "to",Space,Str "partition",Space,Math InlineMath "x",Space,Str "into",Space,Math InlineMath "K=2",Space,Str "non-empty",Space,Str "parts",Note [Para [Str "In",Space,Str "the",Space,Str "optimisation",Space,Str "problem",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "require",Space,Str "that",Space,Str "the",Space,Str "partitioning",Space,Str "has",Space,Str "non-empty",Space,Str "parts,",Space,Str "but",Space,Str "any",Space,Str "partitioning",Space,Str "with",Space,Str "empty",Space,Str "parts",Space,Str "can",Space,Str "split",Space,Str "the",Space,Str "partition",Space,Str "with",Space,Str "the",Space,Str "greatest",Space,Str "cost",Space,Str "and",Space,Str "thus",Space,Str "reduce",Space,Str "the",Space,Str "cost.",Space,Str "An",Space,Str "optimal",Space,Str "partitioning",Space,Str "will,",Space,Str "therefore,",Space,Str "not",Space,Str "contain",Space,Str "empty",Space,Str "parts."]],Str ").",Space,Str "If",Space,Str "we",Space,Str "want",Space,Math InlineMath "K=3",Space,Str "non-empty",Space,Str "and",Space,Str "distinct,",Space,Str "i.e.,",Space,Str "no",Space,Str "two",Space,Str "parts",Space,Str "are",Space,Str "identical,",Space,Str "then",Space,Str "we",Space,Str "have",Space,Math InlineMath "(n-1)(n-2)",Space,Str "possibilities.",Space,Str "We",Space,Str "have",Space,Math InlineMath "n-1",Space,Str "positions",Space,Str "to",Space,Str "put",Space,Str "the",Space,Str "first",Space,Str "split",Space,Str "in",Space,Str "and",Space,Str "then",Space,Math InlineMath "n-2",Space,Str "positions",Space,Str "for",Space,Str "the",Space,Str "next",Space,Str "split.",Space,Str "For",Space,Math InlineMath "K=3",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "partitions",Space,Str "is",Space,Math InlineMath "(n-1)(n-2)(n-3)",Str ".",Space,Str "For",Space,Str "general",Space,Math InlineMath "K",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "partitions",Space,Str "is",Space,Math InlineMath "(n-1)! / (n-K-1)!",Str ".",Space,Str "This",Space,Str "is",Space,Str "super-exponential",Space,Str "so",Space,Str "clearly",Space,Str "exhaustively",Space,Str "trying",Space,Str "out",Space,Str "all",Space,Str "partitions",Space,Str "is",Space,Str "not",Space,Str "a",Space,Str "feasible",Space,Str "strategy."]
,Para [Strong [Str "Exercise:"],Space,Str "Prove",Space,Str "that",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "partitions",Space,Str "is",Space,Math InlineMath "\\frac{(n-1)!}{(n-K-1)!}",Str "."]
,Header 4 ("recursion-1",[],[]) [Str "Recursion"]
,Para [Str "To",Space,Str "derive",Space,Str "a",Space,Str "dynamic",Space,Str "programming",Space,Str "solution,",Space,Str "we",Space,Str "first",Space,Str "derive",Space,Str "a",Space,Str "recursive",Space,Str "solution",Space,Str "to",Space,Str "the",Space,Str "problem.",Space,Str "We",Space,Str "can",Space,Str "consider",Space,Str "where",Space,Str "to",Space,Str "put",Space,Str "the",Space,Str "separator",Space,Str "between",Space,Str "the",Space,Str "last",Space,Str "partition",Space,Str "and",Space,Str "the",Space,Str "previous",Space,Str "partition.",Space,Str "At",Space,Str "some",Space,Str "index",Space,Math InlineMath "i",Space,Str "into",Space,Math InlineMath "x",Str ",",Space,Str "we",Space,Str "have",Space,Str "the",Space,Str "start",Space,Str "index",Space,Str "of",Space,Str "the",Space,Str "last",Space,Str "partition.",Space,Str "The",Space,Str "cost",Space,Str "of",Space,Str "the",Space,Str "last",Space,Str "index",Space,Str "is",Space,Math InlineMath "S(i, N)",Str ".",Space,Str "The",Space,Str "cost",Space,Str "of",Space,Str "this",Space,Str "partitioning",Space,Str "must",Space,Str "be"]
,Para [Math DisplayMath "\\max\\left[ P(i,K-1), S(i,N) \\right]"]
,Para [Str "where",Space,Math InlineMath "P(i, K-1)",Space,Str "is",Space,Str "the",Space,Str "best",Space,Str "partitioning",Space,Str "of",Space,Str "the",Space,Str "array",Space,Math InlineMath "x[0:i]",Space,Str "into",Space,Math InlineMath "K-1",Space,Str "partitions.",Space,Str "The",Space,Str "best",Space,Str "partitioning",Space,Str "of",Space,Math InlineMath "x",Space,Str "into",Space,Math InlineMath "K",Space,Str "partitions",Space,Str "is",Space,Str "found",Space,Str "by",Space,Str "picking",Space,Str "the",Space,Str "optimal",Space,Str "index",Space,Math InlineMath "i",Str "."]
,Para [Math DisplayMath "P(N,K) = \\min_{i=0}^{N} \\left\\{ \\max\\left[ P(i,K-1), S(i,N) \\right] \\right\\}"]
,Para [Str "Notice",Space,Str "that",Space,Str "the",Space,Str "maximisation",Space,Str "is",Space,Str "over",Space,Str "two",Space,Str "values,",Space,Math InlineMath "P(i, K-1)",Space,Str "and",Space,Math InlineMath "S(i, N)",Space,Str "while",Space,Str "the",Space,Str "minimisation",Space,Str "is",Space,Str "over",Space,Str "all",Space,Str "indices",Space,Str "in",Space,Math InlineMath "x",Str ".",Space,Str "We",Space,Str "can",Space,Str "handle",Space,Str "the",Space,Str "first",Space,Str "in",Space,Str "constant",Space,Str "time",Space,Str "and",Space,Str "the",Space,Str "latter",Space,Str "in",Space,Str "linear",Space,Str "time",Space,Str "if",Space,Str "we",Space,Str "can",Space,Str "lookup",Space,Str "all",Space,Math InlineMath "P(i, K-1)",Space,Str "in",Space,Str "a",Space,Str "table."]
,Para [Str "The",Space,Str "basis",Space,Str "cases",Space,Str "of",Space,Str "the",Space,Str "recursion",Space,Str "are",Space,Str "single",Space,Str "partitions,",Space,Str "where",Space,Str "we",Space,Str "have",Space,Str "no",Space,Str "choice",Space,Str "but",Space,Str "to",Space,Str "put",Space,Str "all",Space,Str "elements",Space,Str "in",Space,Str "the",Space,Str "same",Space,Str "partition,",Space,Math InlineMath "P(n,1) = S(0,n)",Space,Str "for",Space,Str "all",Space,Math InlineMath "n",Str ",",Space,Str "and",Space,Str "the",Space,Str "empty",Space,Str "prefix",Space,Str "of",Space,Math InlineMath "x",Space,Str "where",Space,Str "the",Space,Str "cost",Space,Str "of",Space,Str "any",Space,Str "number",Space,Str "of",Space,Str "partitions",Space,Str "is",Space,Str "zero,",Space,Math InlineMath "P(0,k) = 0",Str ",",Space,Str "for",Space,Str "all",Space,Math InlineMath "k",Str "."]
,Para [Str "In",Space,Str "summary",Space,Str "we",Space,Str "have"]
,Para [Span ("eq:partition_recursion",[],[]) [Math DisplayMath "\nP(i,k) = \\begin{cases}\nS(0,n) & k = 1 \\\\\n0      & i = 0 \\\\\n\\min_{j=0}^{i} \\left\\{ \\max\\left[ P(j,K-1), S(j,N) \\right] \\right\\} & \\mathrm{otherwise}\n\\end{cases}\n\\qquad(1)"]]
,Para [Str "We",Space,Str "can",Space,Str "already",Space,Str "look",Space,Str "up",Space,Math InlineMath "S(i,N)",Space,Str "for",Space,Str "all",Space,Math InlineMath "i",Space,Str "(and",Space,Math InlineMath "N",Str ")",Space,Str "but",Space,Math InlineMath "P(i,K-1)",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "compute",Space,Str "recursively."]
,Para [Strong [Str "Exercise:"],Space,Str "Implement",Space,Str "a",Space,Str "recursive",Space,Str "function",Space,Str "that",Space,Str "computes",Space,Math InlineMath "P(n,k)",Space,Str "for",Space,Str "all",Space,Math InlineMath "0\\leq n \\leq N",Space,Str "and",Space,Math InlineMath "k\\geq 0",Str ",",Space,Str "i.e.,",Space,Str "implement",Space,Str "(",Str "eq.\160\&1",Space,Str ")",Space,Str "as",Space,Str "a",Space,Str "Python",Space,Str "function."]
,Para [Strong [Str "Exercise:"],Space,Str "Implement",Space,Str "memorisation",Space,Str "in",Space,Str "the",Space,Str "recursive",Space,Str "function.",Space,Str "You",Space,Str "can",Space,Str "simply",Space,Str "check",Space,Str "if",Space,Str "you",Space,Str "already",Space,Str "have",Space,Str "a",Space,Str "value",Space,Str "for",Space,Str "the",Space,Str "recursive",Space,Str "call\8212identified",Space,Str "by",Space,Math InlineMath "i",Space,Str "and",Space,Math InlineMath "K-1",Str "\8212compute",Space,Str "it",Space,Str "if",Space,Str "we",Space,Str "do",Space,Str "not,",Space,Str "and",Space,Str "in",Space,Str "either",Space,Str "case",Space,Str "return",Space,Str "it.",Space,Str "You",Space,Str "can",Space,Str "use",Space,Str "a",Space,Code ("",[],[]) "dict",Space,Str "for",Space,Str "the",Space,Str "table."]
,Para [Strong [Str "Exercise:"],Space,Str "Instead",Space,Str "of",Space,Str "using",Space,Str "a",Space,Code ("",[],[]) "dict",Space,Str "in",Space,Str "the",Space,Str "previous",Space,Str "exercise,",Space,Str "how",Space,Str "would",Space,Str "you",Space,Str "use",Space,Str "an",Space,Math InlineMath "N\\times K",Space,Str "Numpy",Space,Str "table?",Space,Str "You",Space,Str "will",Space,Str "need",Space,Str "a",Space,Str "way",Space,Str "to",Space,Str "indicate",Space,Str "that",Space,Str "a",Space,Str "value",Space,Str "has",Space,Str "not",Space,Str "been",Space,Str "computed",Space,Str "yet."]
,Header 4 ("dynamic-programming-2",[],[]) [Str "Dynamic",Space,Str "programming"]
,Para [Str "Once",Space,Str "we",Space,Str "have",Space,Str "our",Space,Str "recursion,",Space,Str "we",Space,Str "can",Space,Str "always",Space,Str "build",Space,Str "a",Space,Str "memorisation",Space,Str "algorithm,",Space,Str "but",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "examine",Space,Str "it",Space,Str "carefully",Space,Str "to",Space,Str "see",Space,Str "if",Space,Str "we",Space,Str "can",Space,Str "build",Space,Str "it",Space,Str "bottom",Space,Str "up",Space,Str "and",Space,Str "get",Space,Str "a",Space,Str "dynamic",Space,Str "programming",Space,Str "algorithm.",Space,Str "First,",Space,Str "do",Space,Str "we",Space,Str "use",Space,Str "all",Space,Str "the",Space,Str "values",Space,Str "and",Space,Str "second",Space,Str "can",Space,Str "we",Space,Str "compute",Space,Str "them",Space,Str "such",Space,Str "that",Space,Str "we",Space,Str "can",Space,Str "guarantee",Space,Str "that",Space,Str "a",Space,Str "result",Space,Str "is",Space,Str "available",Space,Str "when",Space,Str "we",Space,Str "need",Space,Str "it."]
,Para [Str "We",Space,Str "can",Space,Str "see",Space,Str "directly",Space,Str "from",Space,Str "the",Space,Str "recursion",Space,Str "that",Space,Str "to",Space,Str "compute",Space,Math InlineMath "P(i,k)",Space,Str "we",Space,Str "look",Space,Str "at",Space,Math InlineMath "P(j,k-1)",Space,Str "for",Space,Str "each",Space,Math InlineMath "0\\leq j < i",Str ".",Space,Str "The",Space,Str "recursion",Space,Str "on",Space,Math InlineMath "k",Space,Str "will",Space,Str "go",Space,Str "down",Space,Str "to",Space,Str "the",Space,Str "base",Space,Str "case",Space,Str "for",Space,Math InlineMath "k",Space,Str "so",Space,Str "we",Space,Str "will",Space,Str "use",Space,Str "all",Space,Str "values",Space,Str "of",Space,Math InlineMath "j",Space,Str "and",Space,Math InlineMath "k",Str ",",Space,Str "and",Space,Str "we",Space,Str "will",Space,Str "use",Space,Str "them",Space,Str "one",Space,Math InlineMath "k",Space,Str "at",Space,Str "a",Space,Str "time.",Space,Str "If",Space,Str "we",Space,Str "know",Space,Str "all",Space,Math InlineMath "P(j,k-1), j < i",Space,Str "when",Space,Str "we",Space,Str "compute",Space,Math InlineMath "P(i,k)",Space,Str "then",Space,Str "we",Space,Str "have",Space,Str "all",Space,Str "the",Space,Str "values",Space,Str "we",Space,Str "need.",Space,Str "By",Space,Str "these",Space,Str "observations",Space,Str "we",Space,Str "know",Space,Str "we",Space,Str "can",Space,Str "build",Space,Str "a",Space,Str "table,",Space,Code ("",[],[]) "PT",Str ",",Space,Str "and",Space,Str "fill",Space,Str "it",Space,Str "up",Space,Str "either",Space,Str "by",Space,Str "row",Space,Str "or",Space,Str "by",Space,Str "column."]
,CodeBlock ("",["python"],[]) "def P(M, K):\n    PT = np.zeros((N+1,K+1))\n    # Base cases\n    for i in range(N+1):\n        PT[i,1] = ST[0,i]\n    for j in range(2,K+1):\n        PT[0,j] = 0\n\n    # Recursive case\n    for i in range(1,N+1):\n        for j in range(2,K+1):\n            PT[i,j] = min(max(PT[m,j-1], ST[m,i]) \n                          for m in range(i))\n    return PT[N, K]"
,Para [Strong [Str "Exercise:"],Space,Str "What",Space,Str "is",Space,Str "the",Space,Str "running",Space,Str "time",Space,Str "of",Space,Str "the",Space,Str "dynamic",Space,Str "programming",Space,Str "solution?",Space,Str "What",Space,Str "about",Space,Str "the",Space,Str "memorisation",Space,Str "solution?"]
,Para [Strong [Str "Exercise:"],Space,Str "Reduce",Space,Str "the",Space,Str "space",Space,Str "complexity",Space,Str "to",Space,Math InlineMath "O(n)",Space,Str "by",Space,Str "only",Space,Str "storing",Space,Str "the",Space,Str "previous",Space,Str "row",Space,Str "or",Space,Str "column",Space,Str "in",Space,Str "the",Space,Math InlineMath "P",Space,Str "table."]
,Para [Strong [Str "Exercise:"],Space,Str "Since",Space,Str "we",Space,Str "want",Space,Str "to",Space,Str "know",Space,Str "the",Space,Str "optimal",Space,Str "partition",Space,Str "and",Space,Str "not",Space,Str "just",Space,Str "the",Space,Str "cost",Space,Str "of",Space,Str "the",Space,Str "optimal",Space,Str "partition,",Space,Str "we",Space,Str "need",Space,Str "to",Space,Str "backtrack",Space,Str "to",Space,Str "get",Space,Str "it.",Space,Str "Show",Space,Str "how",Space,Str "this",Space,Str "can",Space,Str "be",Space,Str "done",Space,Str "and",Space,Str "implement",Space,Str "your",Space,Str "solution."]
,Header 2 ("representing-floating-point-numbers",[],[]) [Str "Representing",Space,Str "floating",Space,Str "point",Space,Str "numbers"]
,Para [Str "Floating",Space,Str "point",Space,Str "numbers,",Space,Str "the",Space,Str "computer",Space,Str "analogue",Space,Str "to",Space,Str "real",Space,Str "numbers,",Space,Str "can",Space,Str "be",Space,Str "represented",Space,Str "in",Space,Str "different",Space,Str "ways,",Space,Str "but",Space,Str "they",Space,Str "are",Space,Str "all",Space,Str "variations",Space,Str "of",Space,Str "the",Space,Str "informal",Space,Str "presentation",Space,Str "I",Space,Str "give",Space,Str "in",Space,Str "this",Space,Str "section.",Space,Str "If",Space,Str "you",Space,Str "are",Space,Str "not",Space,Str "particularly",Space,Str "interested",Space,Str "in",Space,Str "how",Space,Str "these",Space,Str "numbers",Space,Str "are",Space,Str "represented,",Space,Str "you",Space,Str "can",Space,Str "safely",Space,Str "skip",Space,Str "this",Space,Str "section.",Space,Str "You",Space,Str "can",Space,Str "already",Space,Str "return",Space,Str "to",Space,Str "it",Space,Str "if",Space,Str "you",Space,Str "think",Space,Str "you",Space,Str "are",Space,Str "getting",Space,Str "weird",Space,Str "behaviour",Space,Str "when",Space,Str "working",Space,Str "with",Space,Str "floating",Space,Str "point",Space,Str "numbers."]
,Para [Str "The",Space,Str "representation",Space,Str "used",Space,Str "by",Space,Str "modern",Space,Str "computers",Space,Str "is",Space,Str "standardised",Space,Str "as",Space,Str "IEEE",Space,Str "754.",Space,Str "It",Space,Str "fundamentally",Space,Str "represents",Space,Str "numbers",Space,Str "as",Space,Str "explained",Space,Str "below,",Space,Str "but",Space,Str "with",Space,Str "some",Space,Str "tweaks",Space,Str "that",Space,Str "let",Space,Str "you",Space,Str "represent",Space,Str "plus",Space,Str "and",Space,Str "minus",Space,Str "infinity,",Space,Quoted DoubleQuote [Str "not",Space,Str "a",Space,Str "number"],Space,Str "(NaN),",Space,Str "and",Space,Str "with",Space,Str "higher",Space,Str "precision",Space,Str "for",Space,Str "numbers",Space,Str "close",Space,Str "to",Space,Str "zero",Space,Str "than",Space,Str "the",Space,Str "presentation",Space,Str "here",Space,Str "would",Space,Str "allow.",Space,Str "It",Space,Str "also",Space,Str "uses",Space,Str "a",Space,Str "sign",Space,Str "bit",Space,Str "for",Space,Str "the",Space,Str "coefficient",Space,Str "while",Space,Str "it",Space,Str "represents",Space,Str "the",Space,Str "exponent",Space,Str "as",Space,Str "a",Space,Str "signed",Space,Str "integer",Space,Str "for",Space,Str "reasons",Space,Str "lost",Space,Str "deep",Space,Str "in",Space,Str "numerical",Space,Str "analysis.",Space,Str "All",Space,Str "that",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "know",Space,Str "is",Space,Str "that",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "work",Space,Str "roughly",Space,Str "as",Space,Str "I",Space,Str "have",Space,Str "explained",Space,Str "here,",Space,Str "but",Space,Str "with",Space,Str "lots",Space,Str "of",Space,Str "technical",Space,Str "complications.",Space,Str "If",Space,Str "you",Space,Str "find",Space,Str "yourself",Space,Str "a",Space,Str "heavy",Space,Str "user",Space,Str "of",Space,Str "floating",Space,Str "point",Space,Str "numbers,",Space,Str "you",Space,Str "will",Space,Str "need",Space,Str "to",Space,Str "study",Space,Str "numerical",Space,Str "analysis",Space,Str "beyond",Space,Str "what",Space,Str "we",Space,Str "can",Space,Str "cover",Space,Str "in",Space,Str "this",Space,Str "book,",Space,Str "and",Space,Str "you",Space,Str "can",Space,Str "worry",Space,Str "about",Space,Str "the",Space,Str "details",Space,Str "of",Space,Str "number",Space,Str "representations",Space,Str "there."]
,Para [Str "Floating",Space,Str "point",Space,Str "numbers",Space,Str "are",Space,Str "similar",Space,Str "to",Space,Str "the",Space,Emph [Str "scientific",Space,Str "notation"],Space,Str "for",Space,Str "base-",Math InlineMath "b",Space,Str "numbers,",Space,Str "where",Space,Str "numbers",Space,Str "are",Space,Str "represented",Space,Str "as"]
,Para [Math DisplayMath "x = \\pm a\\times b^{\\pm q}"]
,Para [Str "where",Space,Math InlineMath "a = a_1.a_2a_3\\ldots a_n, a_i\\in\\{0,1,\\ldots,b-1\\}",Space,Str "is",Space,Str "the",Space,Emph [Str "coefficient"],Space,Str "and",Space,Math InlineMath "q = q_1q_2q_3\\ldots q_m, q_i\\in\\{0,1,\\ldots,b-1\\}",Space,Str "is",Space,Str "the",Space,Emph [Str "exponent"],Space,Str "of",Space,Str "the",Space,Str "number.",Space,Str "To",Space,Str "get",Space,Str "a",Space,Str "binary",Space,Str "notation,",Space,Str "replace",Space,Math InlineMath "b",Space,Str "by",Space,Math InlineMath "2",Str ".",Space,Str "For",Space,Str "non-zero",Space,Str "numbers,",Space,Math InlineMath "a_1",Space,Str "must",Space,Str "be",Space,Str "1,",Space,Str "so",Space,Str "we",Space,Str "do",Space,Str "not",Space,Str "represent",Space,Str "it",Space,Str "explicitly,",Space,Str "which",Space,Str "gives",Space,Str "us",Space,Str "one",Space,Str "more",Space,Str "bit",Space,Str "to",Space,Str "work",Space,Str "with.",Space,Str "Not",Space,Str "all",Space,Str "real",Space,Str "numbers",Space,Str "can",Space,Str "be",Space,Str "represented",Space,Str "with",Space,Str "this",Space,Str "notation",Space,Str "if",Space,Str "we",Space,Str "require",Space,Str "that",Space,Str "both",Space,Math InlineMath "a",Space,Str "are",Space,Math InlineMath "q",Space,Str "are",Space,Str "finite",Space,Str "sequences,",Note [Para [Str "Which",Space,Str "real",Space,Str "numbers",Space,Str "are",Space,Str "representable",Space,Str "using",Space,Str "a",Space,Str "finite",Space,Str "number",Space,Str "of",Space,Str "digits",Space,Str "depends",Space,Str "on",Space,Str "the",Space,Str "base,",Space,Math InlineMath "b",Str ".",Space,Str "You",Space,Str "cannot",Space,Str "represent",Space,Math InlineMath "1/3",Space,Str "using",Space,Str "a",Space,Str "finite",Space,Str "decimal",Space,Str "(",Math InlineMath "b=10",Str ")",Space,Str "notation",Space,Str "but",Space,Str "in",Space,Str "base",Space,Math InlineMath "b=3",Space,Str "it",Space,Str "is",Space,Str "simply",Space,Math InlineMath "1\\times 3^{-1}",Str ".",Space,Str "Likewise,",Space,Str "you",Space,Str "cannot",Space,Str "represent",Space,Math InlineMath "1/10",Space,Str "in",Space,Str "binary",Space,Str "in",Space,Str "a",Space,Str "finite",Space,Str "number",Space,Str "of",Space,Str "digits,",Space,Str "where",Space,Str "you",Space,Str "trivially",Space,Str "can",Space,Str "in",Space,Str "base",Space,Str "10."]],Space,Str "but",Space,Str "if",Space,Str "we",Space,Str "allow",Space,Str "them",Space,Str "to",Space,Str "be",Space,Str "infinite",Space,Str "we",Space,Str "can.",Space,Str "We",Space,Str "can",Space,Str "approximate",Space,Str "any",Space,Str "number",Space,Str "arbitrarily",Space,Str "close",Space,Str "by",Space,Str "using",Space,Str "sufficiently",Space,Str "long",Space,Str "sequences",Space,Str "numbers",Space,Str "of",Space,Str "digits;",Space,Math InlineMath "n",Space,Str "for",Space,Str "the",Space,Str "coefficient",Space,Str "and",Space,Math InlineMath "m",Space,Str "for",Space,Str "the",Space,Str "exponent.",Space,Str "We",Space,Str "usually",Space,Str "assume",Space,Str "that",Space,Str "if",Space,Math InlineMath "x\\neq 0",Space,Str "then",Space,Math InlineMath "a_1\\neq 0",Space,Str "since,",Space,Str "if",Space,Math InlineMath "a_1 = 0",Space,Str "we",Space,Str "can",Space,Str "update",Space,Math InlineMath "a",Space,Str "to",Space,Math InlineMath "a_2.a_3\\ldots a_n",Space,Str "and",Space,Str "decrease",Space,Math InlineMath "q",Space,Str "by",Space,Str "one",Space,Str "if",Space,Str "positive",Space,Str "or",Space,Str "increase",Space,Str "it",Space,Str "by",Space,Str "one",Space,Str "of",Space,Str "positive."]
,Para [Str "Where",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "differ",Space,Str "from",Space,Str "the",Space,Str "real",Space,Str "numbers",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "have",Space,Str "a",Space,Str "fixed",Space,Str "limit",Space,Str "on",Space,Str "how",Space,Str "many",Space,Str "digits",Space,Str "we",Space,Str "have",Space,Str "available",Space,Str "for",Space,Str "the",Space,Str "coefficient",Space,Str "and",Space,Str "the",Space,Str "exponent.",Space,Str "To",Space,Str "represent",Space,Str "any",Space,Str "real",Space,Str "number,",Space,Str "we",Space,Str "can",Space,Str "choose",Space,Str "sufficiently",Space,Str "high",Space,Str "values",Space,Str "for",Space,Math InlineMath "n",Space,Str "and",Space,Math InlineMath "m",Str ",",Space,Str "but",Space,Str "with",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "there",Space,Str "is",Space,Str "a",Space,Str "fixed",Space,Str "number",Space,Str "of",Space,Str "digits",Space,Str "for",Space,Math InlineMath "a",Space,Str "and",Space,Math InlineMath "b",Str ".",Space,Str "You",Space,Str "cannot",Space,Str "approximate",Space,Str "all",Space,Str "numbers",Space,Str "arbitrarily",Space,Str "close.",Space,Str "For",Space,Str "example,",Space,Str "with",Space,Math InlineMath "b=2",Space,Str "and",Space,Math InlineMath "n=m=1",Str ",",Space,Str "we",Space,Str "have",Space,Math InlineMath "\\pm a\\in\\{-1,0,1\\}, \\pm q\\in\\{-1,0,1\\}",Str ",",Space,Str "so",Space,Str "we",Space,Str "can",Space,Str "only",Space,Str "represent",Space,Str "the",Space,Str "numbers",Space,Math InlineMath "\\{-1, -1/2, 0, 1/2, 1\\}",Str ":",Space,Math InlineMath "\\pm 1/2 = \\pm 1\\times 2^{-1}",Str ",",Space,Math InlineMath "\\pm 0 = \\pm 0\\times 2^q",Str ",",Space,Str "and",Space,Math InlineMath "\\pm 1 = \\pm 1\\times 2^{\\pm 0}",Space,Str "(where",Space,Math InlineMath "\\pm 0",Space,Str "might",Space,Str "be",Space,Str "represented",Space,Str "as",Space,Str "two",Space,Str "different",Space,Str "numbers,",Space,Str "signed",Space,Str "and",Space,Str "unsigned",Space,Str "zero,",Space,Str "or",Space,Str "as",Space,Str "a",Space,Str "single",Space,Str "unsigned",Space,Str "zero,",Space,Str "depending",Space,Str "on",Space,Str "the",Space,Str "details",Space,Str "of",Space,Str "the",Space,Str "representation).",Space,Str "If",Space,Str "we",Space,Str "use",Space,Str "two",Space,Str "bits",Space,Str "for",Space,Str "the",Space,Str "exponent,",Space,Str "we",Space,Str "get",Space,Str "the",Space,Str "number",Space,Str "line",Space,Str "shown",Space,Str "in",Space,Str "fig.\160",Strong [Str "\191fig:number-line?"],Str "."]
,Para [Image ("fig:number-line",[],[]) [Str "Number",Space,Str "line",Space,Str "when",Space,Str "we",Space,Str "have",Space,Str "one",Space,Str "bit",Space,Str "for",Space,Str "the",Space,Str "coefficient",Space,Str "and",Space,Str "two",Space,Str "bits",Space,Str "for",Space,Str "the",Space,Str "exponent."] ("number-line.pdf","")]
,Para [Str "As",Space,Str "a",Space,Str "rule",Space,Str "of",Space,Str "thumb,",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "have",Space,Str "the",Space,Str "property",Space,Str "that",Space,Str "is",Space,Str "illustrated",Space,Str "in",Space,Str "fig.\160",Strong [Str "\191fig:number-line?"],Str ".",Space,Str "The",Space,Str "numbers",Space,Str "are",Space,Str "closer",Space,Str "together",Space,Str "when",Space,Str "you",Space,Str "get",Space,Str "closer",Space,Str "to",Space,Str "zero",Space,Str "and",Space,Str "further",Space,Str "apart",Space,Str "when",Space,Str "their",Space,Str "magnitude",Space,Str "increase.",Space,Str "There",Space,Str "is",Space,Str "a",Space,Str "positive",Space,Str "and",Space,Str "a",Space,Str "negative",Space,Str "minimal",Space,Str "number;",Space,Str "you",Space,Str "cannot",Space,Str "get",Space,Str "closer",Space,Str "than",Space,Str "those",Space,Str "to",Space,Str "zero",Space,Str "except",Space,Str "by",Space,Str "being",Space,Str "zero.",Space,Str "If",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "represent",Space,Str "a",Space,Str "non-zero",Space,Str "number",Space,Str "of",Space,Str "magnitude",Space,Str "less",Space,Str "than",Space,Str "this,",Space,Str "we",Space,Str "say",Space,Str "that",Space,Str "you",Space,Str "have",Space,Str "an",Space,Emph [Str "underflow"],Space,Str "error.",Space,Str "There",Space,Str "are",Space,Str "also",Space,Str "a",Space,Str "smallest",Space,Str "and",Space,Str "a",Space,Str "largest",Space,Str "number",Space,Str "(the",Space,Str "positive",Space,Str "and",Space,Str "negative",Space,Str "numbers",Space,Str "furthest",Space,Str "from",Space,Str "zero).",Space,Str "If",Space,Str "you",Space,Str "need",Space,Str "to",Space,Str "represent",Space,Str "numbers",Space,Str "of",Space,Str "magnitude",Space,Str "larger",Space,Str "than",Space,Str "these,",Space,Str "we",Space,Str "say",Space,Str "you",Space,Str "have",Space,Str "an",Space,Emph [Str "overflow"],Space,Str "error."]
,Para [Str "There",Space,Str "isn\8217t",Space,Str "really",Space,Str "much",Space,Str "you",Space,Str "can",Space,Str "do",Space,Str "about",Space,Str "underflow",Space,Str "and",Space,Str "overflow",Space,Str "problems",Space,Str "except",Space,Str "to",Space,Str "try",Space,Str "to",Space,Str "avoid",Space,Str "them.",Space,Str "Translating",Space,Str "numbers",Space,Str "into",Space,Str "their",Space,Str "logarithm",Space,Str "is",Space,Str "often",Space,Str "a",Space,Str "viable",Space,Str "approach",Space,Str "if",Space,Str "you",Space,Str "only",Space,Str "multiply",Space,Str "numbers,",Space,Str "but",Space,Str "can",Space,Str "be",Space,Str "tricky",Space,Str "if",Space,Str "you",Space,Str "also",Space,Str "need",Space,Str "to",Space,Str "add",Space,Str "them."]
,Para [Str "In",Space,Str "the",Space,Str "binary",Space,Str "sum",Space,Str "example",Space,Str "from",Space,Str "earlier,",Space,Str "the",Space,Str "problem",Space,Str "is",Space,Str "not",Space,Str "underflow",Space,Str "or",Space,Str "overflow,",Space,Str "but",Space,Str "rather",Space,Str "losing",Space,Str "significant",Space,Str "bits",Space,Str "when",Space,Str "adding",Space,Str "numbers.",Space,Str "The",Space,Str "problem",Space,Str "there",Space,Str "is",Space,Str "the",Space,Str "fixed",Space,Str "number",Space,Str "of",Space,Str "bits",Space,Str "set",Space,Str "aside",Space,Str "for",Space,Str "the",Space,Str "coefficient.",Space,Str "If",Space,Str "you",Space,Str "want",Space,Str "to",Space,Str "add",Space,Str "two",Space,Str "numbers",Space,Str "of",Space,Str "different",Space,Str "magnitude,",Space,Str "i.e.\160their",Space,Str "exponents",Space,Str "are",Space,Str "different,",Space,Str "then",Space,Str "you",Space,Str "first",Space,Str "have",Space,Str "to",Space,Str "make",Space,Str "the",Space,Str "exponents",Space,Str "equal,",Space,Str "which",Space,Str "you",Space,Str "can",Space,Str "do",Space,Str "by",Space,Str "moving",Space,Str "the",Space,Str "decimal",Space,Str "point.",Space,Str "Consider",Space,Math InlineMath "1.01101\\times 2^{3}",Space,Str "to",Space,Math InlineMath "1.11010\\times 2^0",Str "\8212where",Space,Str "we",Space,Str "have",Space,Str "five",Space,Str "bits",Space,Str "for",Space,Str "the",Space,Str "coefficients",Space,Str "(plus",Space,Str "one",Space,Str "that",Space,Str "is",Space,Str "always",Space,Str "1,",Space,Str "i.e.\160",Math InlineMath "n=6",Str ").",Space,Str "If",Space,Str "you",Space,Str "want",Space,Str "to",Space,Str "add",Space,Math InlineMath "1.01101\\times 2^{3}",Space,Str "to",Space,Math InlineMath "1.11010\\times 2^0",Space,Str "you",Space,Str "have",Space,Str "to",Space,Str "move",Space,Str "the",Space,Str "decimal",Space,Str "point",Space,Str "in",Space,Str "one",Space,Str "of",Space,Str "them.",Space,Str "With",Space,Str "the",Space,Str "representation",Space,Str "we",Space,Str "have",Space,Str "for",Space,Str "the",Space,Str "coefficients,",Space,Math InlineMath "a=a_1.a_2\\ldots a_n",Str ",",Space,Str "we",Space,Str "can",Space,Str "only",Space,Str "have",Space,Str "one",Space,Str "digit",Space,Str "before",Space,Str "the",Space,Str "decimal",Space,Str "point",Space,Str "so",Space,Str "we",Space,Str "cannot",Space,Str "translate",Space,Math InlineMath "1.01101\\times 2^3",Space,Str "into",Space,Math InlineMath "1011.01\\times 2^0",Str ",",Space,Str "so",Space,Str "we",Space,Str "have",Space,Str "to",Space,Str "translate",Space,Math InlineMath "1.11010\\times 2^0",Space,Str "into",Space,Math InlineMath "0.00111010\\times 2^3",Str ".",Space,Str "We",Space,Str "want",Space,Str "the",Space,Str "most",Space,Str "significant",Space,Str "bit",Space,Str "to",Space,Str "be",Space,Str "one,",Space,Str "of",Space,Str "course,",Space,Str "but",Space,Str "we",Space,Str "make",Space,Str "this",Space,Str "representation",Space,Str "for",Space,Str "the",Space,Str "purpose",Space,Str "of",Space,Str "addition;",Space,Str "once",Space,Str "we",Space,Str "have",Space,Str "added",Space,Str "the",Space,Str "numbers,",Space,Str "we",Space,Str "put",Space,Str "it",Space,Str "in",Space,Str "a",Space,Str "form",Space,Str "where",Space,Str "the",Space,Str "most",Space,Str "significant",Space,Str "bit",Space,Str "in",Space,Str "the",Space,Str "coefficient",Space,Str "is",Space,Str "one.",Space,Str "The",Space,Str "problem",Space,Str "with",Space,Str "addition",Space,Str "is",Space,Str "that",Space,Str "we",Space,Str "cannot",Space,Str "represent",Space,Math InlineMath "0.00111010\\times 2^3",Space,Str "if",Space,Str "we",Space,Str "only",Space,Str "have",Space,Str "five",Space,Str "bits",Space,Str "in",Space,Str "the",Space,Str "coefficient.",Space,Str "We",Space,Str "have",Space,Str "five",Space,Str "bits",Space,Str "because",Space,Str "our",Space,Str "numbers",Space,Str "are",Space,Str "six",Space,Str "bits",Space,Str "long",Space,Str "and",Space,Str "the",Space,Str "first",Space,Str "one",Space,Str "must",Space,Str "always",Space,Str "be",Space,Str "one.",Space,Str "So",Space,Str "we",Space,Str "have",Space,Str "to",Space,Str "round",Space,Str "the",Space,Str "number",Space,Str "off",Space,Str "and",Space,Str "get",Space,Math InlineMath "0.00111\\times 2^3",Str ".",Space,Str "The",Space,Str "difference",Space,Str "in",Space,Str "the",Space,Str "sum",Space,Str "is",Space,Math InlineMath "2^{-4} = 0.0625",Str ",",Space,Str "so",Space,Str "not",Space,Str "a",Space,Str "large",Space,Str "difference",Space,Str "in",Space,Str "the",Space,Str "final",Space,Str "result,",Space,Str "but",Space,Str "we",Space,Str "have",Space,Str "lost",Space,Str "three",Space,Str "bits",Space,Str "of",Space,Str "accuracy",Space,Str "from",Space,Str "the",Space,Str "smaller",Space,Str "number."]
,Para [Str "Without",Space,Str "limiting",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "bits",Space,Str "we",Space,Str "have",Space,Str "this",Space,Str "calculation."]
,Para [RawInline (Format "tex") "\\begin{align}\n1.01101 \\times 2^3 + 1.11010 \\times 2^0    &= \\\\\n1.01101 \\times 2^3 + 0.00111010 \\times 2^3 &= \\\\\n1.01101 \\times 2^3 + 0.00111010 \\times 2^3 & = 1.10100010 \\times 2^3 \\\\\n\\end{align}"]
,Para [Str "If",Space,Str "we",Space,Str "cannot",Space,Str "go",Space,Str "beyond",Space,Str "five",Space,Str "bits,",Space,Str "translating",Space,Math InlineMath "1.11010",Space,Str "into",Space,Math InlineMath "0.00111010\\times 2^3",Space,Str "will",Space,Str "get",Space,Str "us",Space,Math InlineMath "0.00111\\times 2^3",Space,Str "and",Space,Str "using",Space,Str "that",Space,Str "we",Space,Str "get:"]
,Para [Math DisplayMath "1.01101 \\times 2^3 + 0.00111 \\times 2^3 = 1.10100 \\times 2^3"]
,Para [Str "This",Space,Str "is",Space,Str "clearly",Space,Str "different",Space,Str "from",Space,Str "the",Space,Str "calculation",Space,Str "with",Space,Str "more",Space,Str "bits."]
,Para [Str "In",Space,Str "general,",Space,Str "you",Space,Str "expect",Space,Str "to",Space,Str "lose",Space,Str "bits",Space,Str "equal",Space,Str "to",Space,Str "the",Space,Str "difference",Space,Str "in",Space,Str "the",Space,Str "exponents",Space,Str "of",Space,Str "the",Space,Str "numbers.",Space,Str "The",Space,Str "actual",Space,Str "loss",Space,Str "depends",Space,Str "on",Space,Str "the",Space,Str "details",Space,Str "of",Space,Str "the",Space,Str "representation,",Space,Str "but",Space,Str "as",Space,Str "a",Space,Str "rule",Space,Str "of",Space,Str "thumb,",Space,Str "this",Space,Str "is",Space,Str "what",Space,Str "you",Space,Str "will",Space,Str "lose."]
,Para [Str "Assume",Space,Str "we",Space,Str "have",Space,Str "one",Space,Str "informative",Space,Str "bit",Space,Str "for",Space,Str "the",Space,Str "coefficient",Space,Str "(",Math InlineMath "n=2",Str ")",Space,Str "and",Space,Str "two",Space,Str "for",Space,Str "the",Space,Str "exponent,",Space,Str "(",Math InlineMath "m=2",Str "),",Space,Str "and",Space,Str "we",Space,Str "wanted",Space,Str "to",Space,Str "add",Space,Str "six",Space,Str "ones",Space,Str "together",Space,Math InlineMath "6\\times 1.0_2 \\times 2^0 = 1.1_2\\times 2^2",Str ".",Space,Str "Adding",Space,Str "the",Space,Str "numbers",Space,Str "one",Space,Str "at",Space,Str "a",Space,Str "time",Space,Str "we",Space,Str "get:"]
,Para [RawInline (Format "tex") "\\begin{align}\n1.0 \\times 2^0 + 1.0 \\times 2^0 &= 1.0 \\times 2^1 \\\\\n1.0 \\times 2^1 + 0.1 \\times 2^1 &= 1.1 \\times 2^1 \\\\\n1.1 \\times 2^1 + 0. 1 \\times 2^1 &= 1.0 \\times 2^2 \\\\\n1.0 \\times 2^2 + 0.01 \\times 2^2 &= 1.01 \\times 2^2 = 1.0 \\times 2^2 \\\\\n\\end{align}"]
,Para [Str "which",Space,Str "is",Space,Str "off",Space,Str "by",Space,Math InlineMath "0.1\\times 2^2",Str ".",Space,Str "If",Space,Str "we",Space,Str "add",Space,Str "the",Space,Str "numbers",Space,Str "as",Space,Str "we",Space,Str "did",Space,Str "with",Space,Str "our",Space,Code ("",[],[]) "binary_sum",Space,Str "function,",Space,Str "we",Space,Str "instead",Space,Str "have"]
,Para [RawInline (Format "tex") "\\begin{align}\n1.0 \\times 2^0 + 1.0 \\times 2^0 &= 1.0 \\times 2^1 \\quad (\\times 3)\\\\\n1.0 \\times 2^1 + 1.0 \\times 2^1 &= 1.0 \\times 2^2 \\\\\n1.0 \\times 2^2 + 1.0 \\times 2^2 &= 1.1\\times 2^2\n\\end{align}"]
,Para [Str "which",Space,Str "is",Space,Str "correct."]
,Para [Str "Obviously,",Space,Str "the",Space,Str "floating",Space,Str "point",Space,Str "numbers",Space,Str "you",Space,Str "use",Space,Str "in",Space,Str "Python",Space,Str "have",Space,Str "a",Space,Str "much",Space,Str "higher",Space,Str "precision",Space,Str "than",Space,Str "one",Space,Str "bit",Space,Str "per",Space,Str "coefficient",Space,Str "and",Space,Str "two",Space,Str "per",Space,Str "exponent",Space,Str "so",Space,Str "you",Space,Str "will",Space,Str "not",Space,Str "run",Space,Str "into",Space,Str "problems",Space,Str "with",Space,Str "accuracy",Space,Str "as",Space,Str "fast",Space,Str "as",Space,Str "in",Space,Str "this",Space,Str "example.",Space,Str "The",Space,Str "principle,",Space,Str "is",Space,Str "the",Space,Str "same,",Space,Str "however.",Space,Str "If",Space,Str "you",Space,Str "add",Space,Str "enough",Space,Str "numbers,",Space,Str "you",Space,Str "risk",Space,Str "that",Space,Str "the",Space,Str "accumulator",Space,Str "becomes",Space,Str "too",Space,Str "large",Space,Str "for",Space,Str "the",Space,Str "addition",Space,Str "with",Space,Str "the",Space,Str "next",Space,Str "number",Space,Str "to",Space,Str "have",Space,Str "an",Space,Str "effect.",Space,Str "If",Space,Str "you",Space,Str "run",Space,Str "into",Space,Str "this,",Space,Str "then",Space,Str "adding",Space,Str "the",Space,Str "numbers",Space,Str "pairwise",Space,Str "as",Space,Str "in",Space,Code ("",[],[]) "binary_sum",Space,Str "can",Space,Str "alleviate",Space,Str "this."]]
